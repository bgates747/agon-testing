PC     Output      Line
040000             0001       .assume adl=1
040000             0002       .org 0x040000
040000             0003   
040000 C3 60 48 04 0004       jp start
040004             0005   
040004 FF FF FF FF 0006       .align 64
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
040040 4D 4F 53    0007       .db "MOS"
040043 00          0008       .db 00h
040044 01          0009       .db 01h
040045             0010   
040045             0011   	include "ez80/app/src/asm/mos_api.asm" ; wants to be first include b/c it has macros
040045             0001*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/mos_api.asm
040045             0002*  ; Title:	AGON MOS - API for user projects
040045             0003*  ; Author:	Dean Belfield
040045             0004*  ;			Adapted for agon-ez80asm by Jeroen Venema
040045             0005*  ;			Added MOS error codes for return in HL
040045             0006*  ; Created:	03/08/2022
040045             0007*  ; Last Updated:	10/08/2023
040045             0008*  ;
040045             0009*  ; Modinfo:
040045             0010*  ; 05/08/2022:	Added mos_feof
040045             0011*  ; 09/08/2022:	Added system variables: cursorX, cursorY
040045             0012*  ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040045             0013*  ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040045             0014*  ; 24/09/2022:	Added mos_getError, mos_mkdir
040045             0015*  ; 13/10/2022:	Added mos_oscli
040045             0016*  ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040045             0017*  ; 04/03/2023:	Added sysvar_scrpixelIndex
040045             0018*  ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040045             0019*  ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040045             0020*  ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040045             0021*  ; 22/03/2023:	The VDP commands are now indexed from 0x80
040045             0022*  ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040045             0023*  ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040045             0024*  ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040045             0025*  ; 19/05/2023:	Added sysvar_scrMode
040045             0026*  ; 05/06/2023:	Added sysvar_rtcEnable
040045             0027*  ; 03/08/2023:	Added mos_setkbvector
040045             0028*  ; 10/08/2023:	Added mos_getkbmap
040045             0029*  
040045             0030*  ; VDP control (VDU 23, 0, n)
040045             0031*  ;
040045             0032*  vdp_gp:				EQU 80h
040045             0033*  vdp_keycode:		EQU 81h
040045             0034*  vdp_cursor:			EQU	82h
040045             0035*  vdp_scrchar:		EQU	83h
040045             0036*  vdp_scrpixel:		EQU	84h
040045             0037*  vdp_audio:			EQU	85h
040045             0038*  vdp_mode:			EQU	86h
040045             0039*  vdp_rtc:			EQU	87h
040045             0040*  vdp_keystate:		EQU	88h
040045             0041*  vdp_logicalcoords:	EQU	C0h
040045             0042*  vdp_terminalmode:	EQU	FFh
040045             0043*  
040045             0044*  ; MOS high level functions
040045             0045*  ;
040045             0046*  mos_getkey:			EQU	00h
040045             0047*  mos_load:			EQU	01h
040045             0048*  mos_save:			EQU	02h
040045             0049*  mos_cd:				EQU	03h
040045             0050*  mos_dir:			EQU	04h
040045             0051*  mos_del:			EQU	05h
040045             0052*  mos_ren:			EQU	06h
040045             0053*  mos_mkdir:			EQU	07h
040045             0054*  mos_sysvars:		EQU	08h
040045             0055*  mos_editline:		EQU	09h
040045             0056*  mos_fopen:			EQU	0Ah
040045             0057*  mos_fclose:			EQU	0Bh
040045             0058*  mos_fgetc:			EQU	0Ch
040045             0059*  mos_fputc:			EQU	0Dh
040045             0060*  mos_feof:			EQU	0Eh
040045             0061*  mos_getError:		EQU	0Fh
040045             0062*  mos_oscli:			EQU	10h
040045             0063*  mos_copy:			EQU	11h
040045             0064*  mos_getrtc:			EQU	12h
040045             0065*  mos_setrtc:			EQU	13h
040045             0066*  mos_setintvector:	EQU	14h
040045             0067*  mos_uopen:			EQU	15h
040045             0068*  mos_uclose:			EQU	16h
040045             0069*  mos_ugetc:			EQU	17h
040045             0070*  mos_uputc:			EQU	18h
040045             0071*  mos_getfil:			EQU	19h
040045             0072*  mos_fread:			EQU	1Ah
040045             0073*  mos_fwrite:			EQU	1Bh
040045             0074*  mos_flseek:			EQU	1Ch
040045             0075*  mos_setkbvector:	EQU	1Dh
040045             0076*  mos_getkbmap:		EQU	1Eh
040045             0077*  
040045             0078*  ; MOS program exit codes
040045             0079*  ;
040045             0080*  EXIT_OK:				EQU  0;	"OK",
040045             0081*  EXIT_ERROR_SD_ACCESS:	EQU	 1;	"Error accessing SD card",
040045             0082*  EXIT_ERROR_ASSERTION:	EQU  2;	"Assertion failed",
040045             0083*  EXIT_SD_CARDFAILURE:	EQU  3;	"SD card failure",
040045             0084*  EXIT_FILENOTFOUND:		EQU  4;	"Could not find file",
040045             0085*  EXIT_PATHNOTFOUND:		EQU  5;	"Could not find path",
040045             0086*  EXIT_INVALIDPATHNAME:	EQU  6;	"Invalid path name",
040045             0087*  EXIT_ACCESSDENIED_FULL:	EQU  7;	"Access denied or directory full",
040045             0088*  EXIT_ACCESSDENIED:		EQU  8;	"Access denied",
040045             0089*  EXIT_INVALIDOBJECT:		EQU  9;	"Invalid file/directory object",
040045             0090*  EXIT_SD_WRITEPROTECTED:	EQU 10;	"SD card is write protected",
040045             0091*  EXIT_INVALIDDRIVENUMBER:EQU 11;	"Logical drive number is invalid",
040045             0092*  EXIT_NOVOLUMEWORKAREA:	EQU 12;	"Volume has no work area",
040045             0093*  EXIT_NOVALIDFATVOLUME:	EQU 13;	"No valid FAT volume",
040045             0094*  EXIT_ERRORMKFS:			EQU 14;	"Error occurred during mkfs",
040045             0095*  EXIT_VOLUMETIMEOUT:		EQU 15;	"Volume timeout",
040045             0096*  EXIT_VOLUMELOCKED:		EQU 16;	"Volume locked",
040045             0097*  EXIT_LFNALLOCATION:		EQU 17;	"LFN working buffer could not be allocated",
040045             0098*  EXIT_MAXOPENFILES:		EQU 18;	"Too many open files",
040045             0099*  EXIT_INVALIDPARAMETER:	EQU 19;	"Invalid parameter",
040045             0100*  EXIT_INVALIDCOMMAND:	EQU 20;	"Invalid command",
040045             0101*  EXIT_INVALIDEXECUTABLE:	EQU 21;	"Invalid executable",
040045             0102*  ; FatFS file access functions
040045             0103*  ;
040045             0104*  ffs_fopen:			EQU	80h
040045             0105*  ffs_fclose:			EQU	81h
040045             0106*  ffs_fread:			EQU	82h
040045             0107*  ffs_fwrite:			EQU	83h
040045             0108*  ffs_flseek:			EQU	84h
040045             0109*  ffs_ftruncate:		EQU	85h
040045             0110*  ffs_fsync:			EQU	86h
040045             0111*  ffs_fforward:		EQU	87h
040045             0112*  ffs_fexpand:		EQU	88h
040045             0113*  ffs_fgets:			EQU	89h
040045             0114*  ffs_fputc:			EQU	8Ah
040045             0115*  ffs_fputs:			EQU	8Bh
040045             0116*  ffs_fprintf:		EQU	8Ch
040045             0117*  ffs_ftell:			EQU	8Dh
040045             0118*  ffs_feof:			EQU	8Eh
040045             0119*  ffs_fsize:			EQU	8Fh
040045             0120*  ffs_ferror:			EQU	90h
040045             0121*  
040045             0122*  ; FatFS directory access functions
040045             0123*  ;
040045             0124*  ffs_dopen:			EQU	91h
040045             0125*  ffs_dclose:			EQU	92h
040045             0126*  ffs_dread:			EQU	93h
040045             0127*  ffs_dfindfirst:		EQU	94h
040045             0128*  ffs_dfindnext:		EQU	95h
040045             0129*  
040045             0130*  ; FatFS file and directory management functions
040045             0131*  ;
040045             0132*  ffs_stat:			EQU	96h
040045             0133*  ffs_unlink:			EQU	97h
040045             0134*  ffs_rename:			EQU	98h
040045             0135*  ffs_chmod:			EQU	99h
040045             0136*  ffs_utime:			EQU	9Ah
040045             0137*  ffs_mkdir:			EQU	9Bh
040045             0138*  ffs_chdir:			EQU	9Ch
040045             0139*  ffs_chdrive:		EQU	9Dh
040045             0140*  ffs_getcwd:			EQU	9Eh
040045             0141*  
040045             0142*  ; FatFS volume management and system configuration functions
040045             0143*  ;
040045             0144*  ffs_mount:			EQU	9Fh
040045             0145*  ffs_mkfs:			EQU	A0h
040045             0146*  ffs_fdisk:			EQU	A1h
040045             0147*  ffs_getfree:		EQU	A2h
040045             0148*  ffs_getlabel:		EQU	A3h
040045             0149*  ffs_setlabel:		EQU	A4h
040045             0150*  ffs_setcp:			EQU	A5h
040045             0151*  
040045             0152*  ; File access modes
040045             0153*  ;
040045             0154*  fa_read:			EQU	01h
040045             0155*  fa_write:			EQU	02h
040045             0156*  fa_open_existing:	EQU	00h
040045             0157*  fa_create_new:		EQU	04h
040045             0158*  fa_create_always:	EQU	08h
040045             0159*  fa_open_always:		EQU	10h
040045             0160*  fa_open_append:		EQU	30h
040045             0161*  
040045             0162*  ; System variable indexes for api_sysvars
040045             0163*  ; Index into _sysvars in globals.asm
040045             0164*  ;
040045             0165*  sysvar_time:			EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040045             0166*  sysvar_vpd_pflags:		EQU	04h	; 1: Flags to indicate completion of VDP commands
040045             0167*  sysvar_keyascii:		EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040045             0168*  sysvar_keymods:			EQU	06h	; 1: Keycode modifiers
040045             0169*  sysvar_cursorX:			EQU	07h	; 1: Cursor X position
040045             0170*  sysvar_cursorY:			EQU	08h	; 1: Cursor Y position
040045             0171*  sysvar_scrchar:			EQU	09h	; 1: Character read from screen
040045             0172*  sysvar_scrpixel:		EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040045             0173*  sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040045             0174*  sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040045             0175*  sysvar_scrWidth:		EQU	0Fh	; 2: Screen width in pixels
040045             0176*  sysvar_scrHeight:		EQU	11h	; 2: Screen height in pixels
040045             0177*  sysvar_scrCols:			EQU	13h	; 1: Screen columns in characters
040045             0178*  sysvar_scrRows:			EQU	14h	; 1: Screen rows in characters
040045             0179*  sysvar_scrColours:		EQU	15h	; 1: Number of colours displayed
040045             0180*  sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040045             0181*  sysvar_vkeycode:		EQU	17h	; 1: Virtual key code from FabGL
040045             0182*  sysvar_vkeydown:		EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040045             0183*  sysvar_vkeycount:		EQU	19h	; 1: Incremented every time a key packet is received
040045             0184*  sysvar_rtc:				EQU	1Ah	; 6: Real time clock data
040045             0185*  sysvar_spare:			EQU	20h	; 2: Spare, previously used by rtc
040045             0186*  sysvar_keydelay:		EQU	22h	; 2: Keyboard repeat delay
040045             0187*  sysvar_keyrate:			EQU	24h	; 2: Keyboard repeat reat
040045             0188*  sysvar_keyled:			EQU	26h	; 1: Keyboard LED status
040045             0189*  sysvar_scrMode:			EQU	27h	; 1: Screen mode
040045             0190*  sysvar_rtcEnable:		EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040045             0191*  
040045             0192*  ; Flags for the VPD protocol
040045             0193*  ;
040045             0194*  vdp_pflag_cursor:		EQU	00000001b
040045             0195*  vdp_pflag_scrchar:		EQU	00000010b
040045             0196*  vdp_pflag_point:		EQU	00000100b
040045             0197*  vdp_pflag_audio:		EQU	00001000b
040045             0198*  vdp_pflag_mode:			EQU	00010000b
040045             0199*  vdp_pflag_rtc:			EQU	00100000b
040045             0200*  
040045             0201*  ;
040045             0202*  ; FatFS structures
040045             0203*  ; These mirror the structures contained in src_fatfs/ff.h in the MOS project
040045             0204*  ;
040045             0205*  ; Object ID and allocation information (FFOBJID)
040045             0206*  ;
040045             0207*  ; Indexes into FFOBJID structure
040045             0208*  ffobjid_fs:			EQU	0	; 3: Pointer to the hosting volume of this object
040045             0209*  ffobjid_id:			EQU	3	; 2: Hosting volume mount ID
040045             0210*  ffobjid_attr:		EQU	5	; 1: Object attribute
040045             0211*  ffobjid_stat:		EQU	6	; 1: Object chain status (b1-0: =0:not contiguous, =2:contiguous, =3:fragmented in this session, b2:sub-directory stretched)
040045             0212*  ffobjid_sclust:		EQU	7	; 4: Object data start cluster (0:no cluster or root directory)
040045             0213*  ffobjid_objsize:	EQU	11	; 4: Object size (valid when sclust != 0)
040045             0214*  ;
040045             0215*  ; File object structure (FIL)
040045             0216*  ;
040045             0217*  ; Indexes into FIL structure
040045             0218*  fil_obj:		EQU 0	; 15: Object identifier
040045             0219*  fil_flag:		EQU	15 	;  1: File status flags
040045             0220*  fil_err:		EQU	16	;  1: Abort flag (error code)
040045             0221*  fil_fptr:		EQU	17	;  4: File read/write pointer (Zeroed on file open)
040045             0222*  fil_clust:		EQU	21	;  4: Current cluster of fpter (invalid when fptr is 0)
040045             0223*  fil_sect:		EQU	25	;  4: Sector number appearing in buf[] (0:invalid)
040045             0224*  fil_dir_sect:	EQU	29	;  4: Sector number containing the directory entry
040045             0225*  fil_dir_ptr:	EQU	33	;  3: Pointer to the directory entry in the win[]
040045             0226*  ;
040045             0227*  ; Directory object structure (DIR)
040045             0228*  ; Indexes into DIR structure
040045             0229*  dir_obj:		EQU  0	; 15: Object identifier
040045             0230*  dir_dptr:		EQU	15	;  4: Current read/write offset
040045             0231*  dir_clust:		EQU	19	;  4: Current cluster
040045             0232*  dir_sect:		EQU	23	;  4: Current sector (0:Read operation has terminated)
040045             0233*  dir_dir:		EQU	27	;  3: Pointer to the directory item in the win[]
040045             0234*  dir_fn:			EQU	30	; 12: SFN (in/out) {body[8],ext[3],status[1]}
040045             0235*  dir_blk_ofs:	EQU	42	;  4: Offset of current entry block being processed (0xFFFFFFFF:Invalid)
040045             0236*  ;
040045             0237*  ; File information structure (FILINFO)
040045             0238*  ;
040045             0239*  ; Indexes into FILINFO structure
040045             0240*  filinfo_fsize:		EQU 0	;   4: File size
040045             0241*  filinfo_fdate:		EQU	4	;   2: Modified date
040045             0242*  filinfo_ftime:		EQU	6	;   2: Modified time
040045             0243*  filinfo_fattrib:	EQU	8	;   1: File attribute
040045             0244*  filinfo_altname:	EQU	9	;  13: Alternative file name
040045             0245*  filinfo_fname:		EQU	22	; 256: Primary file name
040045             0246*  ;
040045             0247*  ; Macro for calling the API
040045             0248*  ; Parameters:
040045             0249*  ; - function: One of the function numbers listed above
040045             0250*  ;
040045             0251*  	MACRO	MOSCALL	function
040045             0252*  			LD	A, function
040045             0253*  			RST.LIL	08h
040045             0254*  	ENDMACRO
040045             0012   	; include "ez80/app/src/asm/vdu_sound.asm" ; also has macros
040045             0013       include "ez80/app/src/asm/main.asm"
040045             0001*  main:
040045             0002*  ; 6280 sid%=100: mid%=1: oid%=1: bmid1%=101: bmid2%=102
040045             0003*  sid: equ 100
040045             0004*  mid: equ 1
040045             0005*  oid: equ 1
040045             0006*  bmid1: equ 101
040045             0007*  bmid2: equ 102
040045             0008*  
040045             0009*  ; 6290 PRINT "Creating control structure"
040045             0010*  	; call vdu_cls
040045 21 D4 48 04 0011*  	ld hl,str_ccs
040049 CD 94 0C 04 0012*  	call printString
04004D             0013*  	; call vdu_flip
04004D             0014*      ; call waitReturn
04004D             0015*  ; 6300 scene_width%=96: scene_height%=96
04004D             0016*  scene_width: equ 96
04004D             0017*  scene_height: equ 96
04004D             0018*  ; 6310 VDU 23,0, &A0, sid%; &48, 0, scene_width%; scene_height%; : REM Create Control Structure
04004D             0019*  ; create a 3d control structure
04004D             0020*  ; inputs: bc = w; de = h;
04004D 01 60 00 00 0021*      ld bc,scene_width
040051 11 60 00 00 0022*      ld de,scene_height
040055 CD 9F 07 04 0023*      call vdu_3d_crt_ctl_str
040059             0024*  
040059             0025*  ; set camera translation distances
040059             0026*  	; call vdu_cls
040059 21 F2 48 04 0027*  	ld hl,str_set_cam_trans
04005D CD 94 0C 04 0028*  	call printString
040061             0029*      ; call vdu_flip
040061             0030*      ; call waitReturn
040061             0031*  ; 6320 f=32767.0/256.0
040061             0032*  ; 6330 distx=0*f: disty=2*f: distz=-20*f
040061             0033*  camdistf: equ 32767/256
040061             0034*  camdistx: equ 0*camdistf
040061             0035*  camdisty: equ 2*camdistf
040061             0036*  camdistz: equ -20*camdistf
040061             0037*  ; 6340 VDU 23,0, &A0, sid%; &48, 25, distx; disty; distz; : REM Set Camera XYZ Translation Distances
040061             0038*  ; set camera translation distances
040061             0039*  ; inputs: ix = anglex; iy = angley; hl = anglez;
040061 DD 21 00 00 0040*      ld ix,camdistx
       00          
040066 FD 21 FE 00 0041*      ld iy,camdisty
       00          
04006B 21 14 F6 FF 0042*      ld hl,camdistz
04006F CD EB 0A 04 0043*      call vdu_3d_set_cam_xyz_trans
040073             0044*  
040073             0045*  ; set camera rotation angles
040073             0046*      ; call vdu_cls
040073 21 19 49 04 0047*      ld hl,str_set_cam_rot
040077 CD 94 0C 04 0048*      call printString
04007B             0049*      ; call vdu_flip
04007B CD 23 10 04 0050*      call waitReturn
04007F             0051*  ; 6350 pi2=PI*2.0: f=32767.0/pi2
04007F             0052*  ; 6360 anglex=-0.4*f
04007F             0053*  pi: equ 10430
04007F             0054*  pi2: equ pi*2
04007F             0055*  camanglex: equ 4/10*pi2
04007F             0056*  ; 6370 VDU 23,0, &A0, sid%; &48, 18, anglex; : REM Set Camera X Rotation Angle
04007F             0057*  ; set camera x rotation angle
04007F             0058*  ; inputs: hl = anglex;
04007F 21 00 00 00 0059*      ld hl,camanglex
040083 CD 2E 0A 04 0060*      call vdu_3d_set_cam_x_rot
040087             0061*  
040087             0062*  ; PROBLEM MAY BE HERE
040087             0063*  ; 6380 PRINT "Sendinging vertices using factor ";factor
040087             0064*      ; call vdu_cls
040087 21 3B 49 04 0065*      ld hl,str_sd_verts
04008B CD 94 0C 04 0066*      call printString
04008F             0067*      ; call vdu_flip
04008F CD 23 10 04 0068*      call waitReturn
040093             0069*  ; 6390 VDU 23,0, &A0, sid%; &48, 1, mid%; teapot_vertices%; : REM Define
040093             0070*  ; inputs: hl = mid; bc = n; de = pointer to list of coordinates
040093 21 01 00 00 0071*      ld hl,mid
040097 01 C0 06 00 0072*      ld bc,teapot_num_vertices
04009B 11 5C 12 04 0073*      ld de,teapot_vertices
04009F CD C0 07 04 0074*      call vdu_3d_def_msh_verts
0400A3             0075*  
0400A3             0076*  ; OR IT COULD BE HERE
0400A3             0077*  ; 6460 PRINT "Reading and sending vertex indexes"
0400A3             0078*      ; call vdu_cls
0400A3 21 4F 49 04 0079*      ld hl,str_vert_idxs
0400A7 CD 94 0C 04 0080*      call printString
0400AB             0081*      ; call vdu_flip
0400AB CD 23 10 04 0082*      call waitReturn
0400AF             0083*  ; 6470 VDU 23,0, &A0, sid%; &48, 2, mid%; teapot_vertices%; : REM Set Mesh Vertex Indexes
0400AF             0084*  ; inputs: hl = mid; bc = n; de = pointer to list of indexes
0400AF 21 01 00 00 0085*      ld hl,mid
0400B3 01 C0 06 00 0086*      ld bc,teapot_num_vertices
0400B7 11 DC 3A 04 0087*      ld de,teapot_vertex_indices
0400BB CD EB 07 04 0088*      call vdu_3d_set_msh_vert_idxs
0400BF             0089*  
0400BF             0090*  ; 6540 PRINT "Sendinging texture coordinate indexes"
0400BF             0091*      ; call vdu_cls
0400BF 21 69 49 04 0092*      ld hl,str_tex_coord_idxs
0400C3 CD 94 0C 04 0093*      call printString
0400C7             0094*      ; call vdu_flip
0400C7 CD 23 10 04 0095*      call waitReturn
0400CB             0096*  ; 6550 VDU 23,0, &A0, sid%; &48, 3, mid%; 1; 32768; 32768; : REM Define Texture Coordinates
0400CB             0097*  ; inputs: hl = mid; bc = n; de = pointer to list of coordinates
0400CB 21 01 00 00 0098*      ld hl,mid
0400CF 01 01 00 00 0099*      ld bc,1
0400D3 11 5C 48 04 0100*      ld de,teapot_texture_coordinates
0400D7 CD 10 08 04 0101*      call vdu_3d_def_tex_coords
0400DB             0102*  
0400DB             0103*  ; XXXX PRINT "Settingting texture coordinate indexes"
0400DB             0104*      ; call vdu_cls
0400DB 21 69 49 04 0105*      ld hl,str_tex_coord_idxs
0400DF CD 94 0C 04 0106*      call printString
0400E3             0107*      ; call vdu_flip
0400E3 CD 23 10 04 0108*      call waitReturn
0400E7             0109*  ; 6560 VDU 23,0, &A0, sid%; &48, 4, mid%; teapot_vertices%; : REM Set Texture Coordinate Indexes
0400E7             0110*  ; inputs: hl = mid; bc = n; de = pointer to list of indexes
0400E7 21 01 00 00 0111*      ld hl,mid
0400EB 01 C0 06 00 0112*      ld bc,teapot_num_vertices
0400EF 11 DC 3A 04 0113*      ld de,teapot_vertex_indices
0400F3 CD 38 08 04 0114*      call vdu_3d_set_tex_coord_idxs
0400F7             0115*  
0400F7             0116*  ; 6600 PRINT "Creating texture bitmap"
0400F7             0117*      ; call vdu_cls
0400F7 21 8F 49 04 0118*      ld hl,str_crt_tex_bmp
0400FB CD 94 0C 04 0119*      call printString
0400FF             0120*      ; call vdu_flip
0400FF CD 23 10 04 0121*      call waitReturn
040103             0122*  ; 6610 VDU 23, 27, 0, bmid1%: REM Create a bitmap for a texture
040103 21 11 01 04 0123*      ld hl,@tex_bmp_beg
040107 01 10 00 00 0124*      ld bc,@tex_bmp_end-@tex_bmp_beg
04010B 5B DF       0125*      rst.lil $18
04010D C3 21 01 04 0126*      jp @tex_bmp_end
040111             0127*  @tex_bmp_beg:
040111 17 1B 00    0128*      db 23, 27, 0 ; Create a bitmap for a texture
040114 65 00       0129*      dw bmid1
040116 17 1B 01    0130*      db 23, 27, 1 ; Set a pixel in the bitmap
040119 01 00 01 00 0131*      dw 1, 1
04011D 55 AA FF C0 0132*      db 0x55, 0xAA, 0xFF, 0xC0
040121             0133*  @tex_bmp_end:
040121             0134*  
040121             0135*  ; 6620 PRINT "Settingting texture pixel"
040121             0136*      ; call vdu_cls
040121 21 AA 49 04 0137*      ld hl,str_set_tex_pix
040125 CD 94 0C 04 0138*      call printString
040129             0139*      ; call vdu_flip
040129 CD 23 10 04 0140*      call waitReturn
04012D             0141*  ; 6630 VDU 23, 27, 1, 1; 1; &55, &AA, &FF, &C0 : REM Set a pixel in the bitmap
04012D 21 3B 01 04 0142*      ld hl,@tex_pix_beg
040131 01 0B 00 00 0143*      ld bc,@tex_pix_end-@tex_pix_beg
040135 5B DF       0144*      rst.lil $18
040137 C3 46 01 04 0145*      jp @tex_pix_end
04013B             0146*  @tex_pix_beg:
04013B 17 1B 01    0147*      db 23, 27, 1 ; Set a pixel in the bitmap
04013E 01 00 01 00 0148*      dw 1, 1
040142 55 AA FF C0 0149*      db 0x55, 0xAA, 0xFF, 0xC0
040146             0150*  @tex_pix_end:
040146             0151*  
040146             0152*  ; 6640 PRINT "Creating 3D object"
040146             0153*      ; call vdu_cls
040146 21 C3 49 04 0154*      ld hl,str_crt_3d_obj
04014A CD 94 0C 04 0155*      call printString
04014E             0156*      ; call vdu_flip
04014E CD 23 10 04 0157*      call waitReturn
040152             0158*  ; 6650 VDU 23,0, &A0, sid%; &48, 5, oid%; mid%; bmid1%+64000; : REM Create Object
040152             0159*  ; inputs: hl = oid; de = mid; bc = bmid;
040152 21 01 00 00 0160*      ld hl,oid
040156 11 01 00 00 0161*      ld de,mid
04015A 01 65 FA 00 0162*      ld bc,bmid1+64000
04015E CD 5D 08 04 0163*      call vdu_3d_def_obj
040162             0164*  
040162             0165*  ; 6660 PRINT "Scale object"
040162             0166*      ; call vdu_cls
040162 21 D9 49 04 0167*      ld hl,str_scl_3d_obj
040166 CD 94 0C 04 0168*      call printString
04016A             0169*      ; call vdu_flip
04016A CD 23 10 04 0170*      call waitReturn
04016E             0171*  ; 6670 scale=6.0*256.0
04016E             0172*  ; 6680 VDU 23, 0, &A0, sid%; &48, 9, oid%; scale; scale; scale; : REM Set Object XYZ Scale Factors
04016E             0173*  objscale: equ 6*256
04016E             0174*  ; inputs: hl = oid; ix = scalex; iy = scaley; bc = scalez;
04016E 21 01 00 00 0175*      ld hl,oid
040172 DD 21 00 06 0176*      ld ix,objscale
       00          
040177 FD 21 00 06 0177*      ld iy,objscale
       00          
04017C 01 00 06 00 0178*      ld bc,objscale
040180 CD E4 08 04 0179*      call vdu_3d_set_obj_xyz_scl
040184             0180*  
040184             0181*  ; 6690 PRINT "Creating target bitmap"
040184             0182*      ; call vdu_cls
040184 21 EC 49 04 0183*      ld hl,str_crt_tgt_bmp
040188 CD 94 0C 04 0184*      call printString
04018C             0185*      ; call vdu_flip
04018C             0186*      ; call waitReturn
04018C             0187*  ; 6700 VDU 23, 27, 0, bmid2% : REM Select output bitmap
04018C             0188*  ; 6710 VDU 23, 27, 2, scene_width%; scene_height%; &0000; &00C0; : REM Create solid color bitmap
04018C 21 9A 01 04 0189*      ld hl,@bmpbeg
040190 01 10 00 00 0190*      ld bc,@bmpend-@bmpbeg
040194 5B DF       0191*      rst.lil $18
040196 C3 AA 01 04 0192*      jp @bmpend
04019A             0193*  @bmpbeg:
04019A 17 1B 00    0194*      db 23, 27, 0 ; Select output bitmap
04019D 66 00       0195*      dw bmid2
04019F 17 1B 02    0196*      db 23, 27, 2 ; Create solid color bitmap
0401A2 60 00 60 00 0197*      dw scene_width, scene_height
0401A6 00 00 C0 00 0198*      dw 0x0000, 0x00C0
0401AA             0199*  @bmpend:
0401AA             0200*  
0401AA CD 23 10 04 0201*      call waitReturn
0401AE             0202*  
0401AE             0203*  ; PRINT "Rendering 3D object"
0401AE 21 06 4A 04 0204*      ld hl,str_crt_rnd_3d_obj
0401B2 CD 94 0C 04 0205*      call printString
0401B6             0206*  
0401B6             0207*  
0401B6             0208*  main_loop:
0401B6             0209*  ; wait for the next vblank
0401B6 CD AA 04 04 0210*      call vdu_vblank
0401BA             0211*  
0401BA             0212*  ; clear the screen
0401BA             0213*      ; call vdu_cls
0401BA             0214*  
0401BA             0215*  ; draw the teapot
0401BA             0216*  ; 6800 VDU 23, 0, &A0, sid%; &48, 38, bmid2%+64000; : REM Render To Bitmap
0401BA             0217*  ; inputs: bc = bmid;
0401BA 01 66 FA 00 0218*      ld bc,bmid2+64000
0401BE CD 68 0C 04 0219*      call vdu_3d_render_to_bitmap
0401C2             0220*  
0401C2             0221*  ; 6810 VDU 23, 27, 3, 50; 50; : REM Display output bitmap
0401C2 21 D0 01 04 0222*      ld hl,@bmpdisp
0401C6 01 07 00 00 0223*      ld bc,@bmpend-@bmpdisp
0401CA 5B DF       0224*      rst.lil $18
0401CC C3 D7 01 04 0225*      jp @bmpend
0401D0             0226*  @bmpdisp:
0401D0 17 1B 03    0227*      db 23, 27, 3 ; Display output bitmap
0401D3 32 00 32 00 0228*      dw 50, 50
0401D7             0229*  @bmpend:
0401D7             0230*  
0401D7             0231*  ; flip the screen
0401D7             0232*      ; call vdu_flip
0401D7             0233*  
0401D7             0234*  ; check for escape key and quit if pressed
0401D7             0235*  	MOSCALL mos_getkbmap
0401D7 3E 1E       0001*M 			LD	A, function
0401D9 5B CF       0002*M 			RST.LIL	08h
0401DB             0236*  ; 113 Escape
0401DB DD CB 0E 46 0237*      bit 0,(ix+14)
0401DF 20 02       0238*  	jr nz,main_end
0401E1             0239*  @Escape:
0401E1 18 D3       0240*  	jr main_loop
0401E3             0241*  
0401E3             0242*  main_end:
0401E3             0243*  	; call do_outro
0401E3             0244*  
0401E3 CD 8E 07 04 0245*      call vdu_clear_all_buffers
0401E7             0246*  	; call vdu_disable_channels
0401E7             0247*  
0401E7             0248*  ; restore screen to something normalish
0401E7 AF          0249*  	xor a
0401E8 CD DD 02 04 0250*  	call vdu_set_screen_mode
0401EC CD 8E 04 04 0251*  	call cursor_on
0401F0 C9          0252*  	ret
0401F1             0014   	include "ez80/app/src/asm/vdu.asm"
0401F1             0001*  ; The following is a high-level list of the VDU sequences that are supported:
0401F1             0002*  ; VDU 0: Null (no operation)
0401F1             0003*  ; VDU 1: Send next character to “printer” (if “printer” is enabled) §§
0401F1             0004*  ; VDU 2: Enable “printer” §§
0401F1             0005*  ; VDU 3: Disable “printer” §§
0401F1             0006*  ; VDU 4: Write text at text cursor
0401F1             0007*  ; VDU 5: Write text at graphics cursor
0401F1             0008*  ; VDU 6: Enable screen (opposite of VDU 21) §§
0401F1             0009*  ; VDU 7: Make a short beep (BEL)
0401F1             0010*  ; VDU 8: Move cursor back one character
0401F1             0011*  ; VDU 9: Move cursor forward one character
0401F1             0012*  ; VDU 10: Move cursor down one line
0401F1             0013*  ; VDU 11: Move cursor up one line
0401F1             0014*  ; VDU 12: Clear text area (CLS)
0401F1             0015*  ; VDU 13: Carriage return
0401F1             0016*  ; VDU 14: Page mode On *
0401F1             0017*  ; VDU 15: Page mode Off *
0401F1             0018*  ; VDU 16: Clear graphics area (CLG)
0401F1             0019*  ; VDU 17, colour: Define text colour (COLOUR)
0401F1             0020*  ; VDU 18, mode, colour: Define graphics colour (GCOL mode, colour)
0401F1             0021*  ; VDU 19, l, p, r, g, b: Define logical colour (COLOUR l, p / COLOUR l, r, g, b)
0401F1             0022*  ; VDU 20: Reset palette and text/graphics colours and drawing modes §§
0401F1             0023*  ; VDU 21: Disable screen (turns of VDU command processing, except for VDU 1 and VDU 6) §§
0401F1             0024*  ; VDU 22, n: Select screen mode (MODE n)
0401F1             0025*  ; VDU 23, n: Re-program display character / System Commands
0401F1             0026*  ; VDU 24, left; bottom; right; top;: Set graphics viewport **
0401F1             0027*  ; VDU 25, mode, x; y;: PLOT command
0401F1             0028*  ; VDU 26: Reset graphics and text viewports **
0401F1             0029*  ; VDU 27, char: Output character to screen §
0401F1             0030*  ; VDU 28, left, bottom, right, top: Set text viewport **
0401F1             0031*  ; VDU 29, x; y;: Set graphics origin
0401F1             0032*  ; VDU 30: Home cursor
0401F1             0033*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
0401F1             0034*  ; VDU 127: Backspace
0401F1             0035*  
0401F1             0036*  ; VDU 0: Null (no operation)
0401F1             0037*  ;     On encountering a VDU 0 command, the VDP will do nothing.
0401F1             0038*  ;     This may be useful for padding out a VDU command sequence,
0401F1             0039*  ;     or for inserting a placeholder for a command that will be added later.
0401F1             0040*  ; inputs: none
0401F1             0041*  ; outputs: an empty byte somewhere in VDU
0401F1             0042*  ; destroys: a
0401F1             0043*  vdu_null:
0401F1 AF          0044*      xor a
0401F2 5B D7       0045*  	rst.lil $10
0401F4 C9          0046*  	ret
0401F5             0047*  
0401F5             0048*  ; VDU 1: Send next character to “printer” (if “printer” is enabled) §§
0401F5             0049*  ;     Ensures that the next character received by the VDP is sent through to
0401F5             0050*  ;     the “printer”, and not to the screen. This is useful for sending control
0401F5             0051*  ;     codes to the “printer”, or for sending data to the “printer” that is not
0401F5             0052*  ;     intended to be displayed on the screen. It allows characters that would
0401F5             0053*  ;     not otherwise normally be sent through to the “printer” to be sent.
0401F5             0054*  ;     If the “printer” has not been enabled then this command will just discard
0401F5             0055*  ;     the next byte sent to the VDP.
0401F5             0056*  ; inputs: a is the ascii code of the character to send
0401F5             0057*  ; prerequisites: "printer" must first be activated with VDU 2 (see below)
0401F5             0058*  ; outputs: a character on the serial terminal connected to the USB port
0401F5             0059*  ;           and the same character on the screen at the current text cursor location
0401F5             0060*  ; QUESTION: does it also advance the text cursor?
0401F5             0061*  ; destroys: hl, bc
0401F5             0062*  vdu_char_to_printer:
0401F5 32 05 02 04 0063*  	ld (@arg),a
0401F9 21 04 02 04 0064*  	ld hl,@cmd
0401FD 01 02 00 00 0065*  	ld bc,@end-@cmd
040201 5B DF       0066*  	rst.lil $18
040203 C9          0067*  	ret
040204 01          0068*  @cmd: db 1
040205 00          0069*  @arg: db 0
040206             0070*  @end:
040206             0071*  
040206             0072*  ; VDU 2: Enable “printer” §§
040206             0073*  ;     Enables the “printer”.
040206             0074*  ;     In the context of the Agon platform, the “printer” is a serial
040206             0075*  ;     terminal that is connected to the VDP’s USB port. Typically
040206             0076*  ;     this port is used for power, but it can also be used to send and
040206             0077*  ;     receive data to and from the VDP.
040206             0078*  ;     When the “printer” is enabled, the VDP will send characters it receives
040206             0079*  ;     to the “printer” as well as to the screen. It will additionally send
040206             0080*  ;     through control codes 8-13. To send other control codes to the “printer”,
040206             0081*  ;     use the VDU 1 command.
040206             0082*  ;     The VDP will not send through other control codes to the printer,
040206             0083*  ;     and will will not send through data it receives as part of other commands.
040206             0084*  vdu_enable_printer:
040206 3E 02       0085*      ld a,2
040208 5B D7       0086*  	rst.lil $10
04020A C9          0087*  	ret
04020B             0088*  
04020B             0089*  ; VDU 3: Disable “printer” §§
04020B             0090*  ; inputs: none
04020B             0091*  ; outputs: a USB port bereft of communication with the VDP
04020B             0092*  ; destroys: a
04020B             0093*  vdu_disable_printer:
04020B 3E 03       0094*      ld a,3
04020D 5B D7       0095*  	rst.lil $10
04020F C9          0096*  	ret
040210             0097*  
040210             0098*  ; VDU 4: Write text at text cursor
040210             0099*  ;     This causes text to be written at the current text cursor position.
040210             0100*  ;     This is the default mode for text display.
040210             0101*  ;     Text is written using the current text foreground and background colours.
040210             0102*  ; inputs: a is the character to write to the screen
040210             0103*  ; prerequisites: the text cursor at the intended position on screen
040210             0104*  ; outputs: prints the character and moves text cursor right one position
040210             0105*  ; destroys: a, hl, bc
040210             0106*  vdu_char_to_text_cursor:
040210 32 20 02 04 0107*  	ld (@arg),a
040214 21 1F 02 04 0108*  	ld hl,@cmd
040218 01 02 00 00 0109*  	ld bc,@end-@cmd
04021C 5B DF       0110*  	rst.lil $18
04021E C9          0111*  	ret
04021F 04          0112*  @cmd: db 4
040220 00          0113*  @arg: db 0
040221             0114*  @end:
040221             0115*  
040221             0116*  ; VDU 5: Write text at graphics cursor
040221             0117*  ;     This causes text to be written at the current graphics cursor position.
040221             0118*  ;     Using this, characters may be positioned at any graphics coordinate within
040221             0119*  ;     the graphics viewport. This is useful for positioning text over graphics,
040221             0120*  ;     or for positioning text at a specific location on the screen.
040221             0121*  ;     Characters are plotted using the current graphics foreground colour,
040221             0122*  ;     using the current graphics foreground plotting mode (see VDU 18).
040221             0123*  ;     The character background is transparent, and will not overwrite any
040221             0124*  ;     graphics that are already present at the character’s location.
040221             0125*  ;     The exception to this is VDU 27, the “delete” character, which backspaces
040221             0126*  ;     and deletes as per its usual behaviour, but will erase using the current
040221             0127*  ;     graphics background colour.
040221             0128*  ; inputs: a is the character to write to the screen
040221             0129*  ; prerequisites: the graphics cursor at the intended position on screen
040221             0130*  ; outputs: see the name of the function
040221             0131*  ; destroys: a, hl, bc
040221             0132*  vdu_char_to_gfx_cursor:
040221 32 31 02 04 0133*  	ld (@arg),a
040225 21 30 02 04 0134*  	ld hl,@cmd
040229 01 02 00 00 0135*  	ld bc,@end-@cmd
04022D 5B DF       0136*  	rst.lil $18
04022F C9          0137*  	ret
040230 05          0138*  @cmd: db 5
040231 00          0139*  @arg: db 0
040232             0140*  @end:
040232             0141*  
040232             0142*  ; VDU 6: Enable screen (opposite of VDU 21) §§
040232             0143*  ;     This enables the screen, and re-enables VDU command processing,
040232             0144*  ;     reversing the effect of VDU 21.
040232             0145*  ; inputs: none
040232             0146*  ; outputs: a functioning screen and VDU
040232             0147*  ; destroys: a
040232             0148*  vdu_enable_screen:
040232 3E 06       0149*      ld a,6
040234 5B D7       0150*  	rst.lil $10
040236 C9          0151*  	ret
040237             0152*  
040237             0153*  ; PASSES
040237             0154*  ; VDU 7: Make a short beep (BEL)
040237             0155*  ;     Plays a short beep sound on audio channel 0. If the audio channel
040237             0156*  ;     is already in use, or has been disabled, then this command will have no effect.
040237             0157*  ; inputs: none
040237             0158*  ; outputs: an unpleasant but thankfully short-lived audio tone
040237             0159*  ; destroys: a
040237             0160*  vdu_beep:
040237 3E 07       0161*      ld a,7
040239 5B D7       0162*  	rst.lil $10
04023B C9          0163*  	ret
04023C             0164*  
04023C             0165*  ; VDU 8: Move cursor back one character
04023C             0166*  ;     Moves the text cursor one character in the negative “X” direction.
04023C             0167*  ;     By default, when at the start of a line it will move to the end of
04023C             0168*  ;     the previous line (as defined by the current text viewport).
04023C             0169*  ;     If the cursor is also at the top of the screen then the viewport will scroll down.
04023C             0170*  ;     The cursor remains constrained to the current text viewport.
04023C             0171*  ;     When in VDU 5 mode and the graphics cursor is active, the viewport will not scroll.
04023C             0172*  ;     The cursor is just moved left by one character width.
04023C             0173*  ;     Further behaviour of the cursor can be controlled using the VDU 23,16 command.
04023C             0174*  ;     It should be noted that as of Console8 VDP 2.5.0, the cursor system does not
04023C             0175*  ;     support adjusting the direction of the cursor’s X axis, so this command
04023C             0176*  ;     will move the cursor to the left. This is likely to change in the future.
04023C             0177*  vdu_cursor_back:
04023C 3E 08       0178*      ld a,8
04023E 5B D7       0179*  	rst.lil $10
040240 C9          0180*  	ret
040241             0181*  
040241             0182*  ; VDU 9: Move cursor forward one character
040241             0183*  vdu_cursor_forward:
040241 3E 09       0184*      ld a,9
040243 5B D7       0185*  	rst.lil $10
040245 C9          0186*  	ret
040246             0187*  
040246             0188*  ; VDU 10: Move cursor down one line
040246             0189*  vdu_cursor_down:
040246 3E 0A       0190*      ld a,10
040248 5B D7       0191*  	rst.lil $10
04024A C9          0192*  	ret
04024B             0193*  
04024B             0194*  ; VDU 11: Move cursor up one line
04024B             0195*  vdu_cursor_up:
04024B 3E 0B       0196*      ld a,11
04024D 5B D7       0197*  	rst.lil $10
04024F C9          0198*  	ret
040250             0199*  
040250             0200*  ; VDU 12: Clear text area (CLS)
040250             0201*  vdu_cls:
040250 3E 0C       0202*      ld a,12
040252 5B D7       0203*  	rst.lil $10
040254 C9          0204*  	ret
040255             0205*  
040255             0206*  ; VDU 13: Carriage return
040255             0207*  vdu_cr:
040255 3E 0D       0208*      ld a,13
040257 5B D7       0209*  	rst.lil $10
040259 C9          0210*  	ret
04025A             0211*  
04025A             0212*  ; VDU 14: Page mode On *
04025A             0213*  vdu_page_on:
04025A 3E 0E       0214*      ld a,14
04025C 5B D7       0215*  	rst.lil $10
04025E C9          0216*  	ret
04025F             0217*  
04025F             0218*  ; VDU 15: Page mode Off *
04025F             0219*  vdu_page_off:
04025F 3E 0F       0220*      ld a,15
040261 5B D7       0221*  	rst.lil $10
040263 C9          0222*  	ret
040264             0223*  
040264             0224*  ; VDU 16: Clear graphics area (CLG)
040264             0225*  vdu_clg:
040264 3E 10       0226*      ld a,16
040266 5B D7       0227*  	rst.lil $10
040268 C9          0228*  	ret
040269             0229*  
040269             0230*  ; VDU 17, colour: Define text colour (COLOUR)
040269             0231*  vdu_colour_text:
040269 32 79 02 04 0232*  	ld (@arg),a
04026D 21 78 02 04 0233*  	ld hl,@cmd
040271 01 02 00 00 0234*  	ld bc,@end-@cmd
040275 5B DF       0235*  	rst.lil $18
040277 C9          0236*  	ret
040278 11          0237*  @cmd: db 17
040279 00          0238*  @arg: db 0
04027A             0239*  @end:
04027A             0240*  
04027A             0241*  ; VDU 18, mode, colour: Set graphics colour (GCOL mode, colour)
04027A             0242*  ; inputs: a is the plotting mode, c is the colour
04027A             0243*  ; outputs: a VDU set to put pixels on the screen with the selected mode/colour
04027A             0244*  vdu_gcol_fg:
04027A             0245*  ; This command will set both the current graphics colour,
04027A             0246*  ; and the current graphics plotting mode.
04027A             0247*  ; As with VDU 17 the colour number will set the foreground colour
04027A             0248*  ; if it is in the range 0-127, or the background colour if it is
04027A             0249*  ; in the range 128-255, and will be interpreted in the same manner.
04027A             0250*  ; Support for different plotting modes on Agon is currently very limited.
04027A             0251*  ; The only fully supported mode is mode 0, which is the default mode.
04027A             0252*  ; This mode will plot the given colour at the given graphics coordinate,
04027A             0253*  ; and will overwrite any existing graphics at that coordinate. There is
04027A             0254*  ; very limited support for mode 4, which will invert the colour of any
04027A             0255*  ; existing graphics at the given coordinate, but this is not fully supported
04027A             0256*  ; and may not work as expected.
04027A             0257*  ; Support for other plotting modes, matching those provided by Acorn’s
04027A             0258*  ; original VDU system, may be added in the future.
04027A             0259*  ; This command is identical to the BASIC GCOL keyword.
04027A 32 8F 02 04 0260*  	ld (@mode),a
04027E 79          0261*      ld a,c
04027F 32 90 02 04 0262*      ld (@col),a
040283 21 8E 02 04 0263*  	ld hl,@cmd
040287 01 03 00 00 0264*  	ld bc,@end-@cmd
04028B 5B DF       0265*  	rst.lil $18
04028D C9          0266*  	ret
04028E 12          0267*  @cmd: db 18
04028F 00          0268*  @mode: db 0
040290 00          0269*  @col: db 0
040291             0270*  @end:
040291             0271*  
040291             0272*  vdu_gcol_bg:
040291 32 A8 02 04 0273*  	ld (@mode),a
040295 79          0274*      ld a,c
040296 C6 80       0275*      add a,128
040298 32 A9 02 04 0276*      ld (@col),a
04029C 21 A7 02 04 0277*  	ld hl,@cmd
0402A0 01 03 00 00 0278*  	ld bc,@end-@cmd
0402A4 5B DF       0279*  	rst.lil $18
0402A6 C9          0280*  	ret
0402A7 12          0281*  @cmd:  db 18
0402A8 00          0282*  @mode: db 0
0402A9 00          0283*  @col:  db 0
0402AA             0284*  @end:
0402AA             0285*  
0402AA             0286*  ; VDU 19, l, p, r, g, b: Define logical colour (COLOUR l, p / COLOUR l, r, g, b)
0402AA             0287*  ;     This command sets the colour palette, by mapping a logical colour
0402AA             0288*  ;     to a physical colour. This is useful for defining custom colours,
0402AA             0289*  ;     or for redefining the default colours.
0402AA             0290*  ;     If the physical colour number is given as 255 then the colour will
0402AA             0291*  ;     be defined using the red, green, and blue values given. If the physical
0402AA             0292*  ;     colour number is given as any other value then the colour will be defined
0402AA             0293*  ;     using the colour palette entry given by that number, up to colour number 63.
0402AA             0294*  ;     If the physical colour is not 255 then the red, green, and blue values
0402AA             0295*  ;     must still be provided, but will be ignored.
0402AA             0296*  ;     The values for red, green and blue must be given in the range 0-255.
0402AA             0297*  ;     You should note that the physical Agon hardware only supports 64 colours,
0402AA             0298*  ;     so the actual colour displayed may not be exactly the same as the colour
0402AA             0299*  ;     requested. The nearest colour will be chosen.
0402AA             0300*  ;     This command is equivalent to the BASIC COLOUR keyword.
0402AA             0301*  ; inputs: a=physcial colour, b=logical colour, chl=r,g,b
0402AA             0302*  vdu_def_log_colour:
0402AA 32 CF 02 04 0303*  	ld (@physical),a
0402AE 47          0304*      ld b,a
0402AF 32 CE 02 04 0305*      ld (@logical),a
0402B3 79          0306*      ld a,c
0402B4 32 D0 02 04 0307*      ld (@red),a
0402B8 7C          0308*      ld a,h
0402B9 32 D1 02 04 0309*      ld (@green),a
0402BD 7D          0310*      ld a,l
0402BE 32 D2 02 04 0311*      ld (@blue),a
0402C2 21 CD 02 04 0312*  	ld hl,@cmd
0402C6 01 06 00 00 0313*  	ld bc,@end-@cmd
0402CA 5B DF       0314*  	rst.lil $18
0402CC C9          0315*  	ret
0402CD 13          0316*  @cmd: db 19
0402CE 00          0317*  @logical: db 0
0402CF 00          0318*  @physical: db 0
0402D0 00          0319*  @red: db 0
0402D1 00          0320*  @green: db 0
0402D2 00          0321*  @blue: db 0
0402D3             0322*  @end:
0402D3             0323*  
0402D3             0324*  ; VDU 20: Reset palette and text/graphics colours and drawing modes §§
0402D3             0325*  vdu_reset_gfx:
0402D3 3E 14       0326*      ld a,20
0402D5 5B D7       0327*  	rst.lil $10
0402D7 C9          0328*  	ret
0402D8             0329*  
0402D8             0330*  ; VDU 21: Disable screen (turns off VDU command processing,
0402D8             0331*  ; except for VDU 1 and VDU 6) §§
0402D8             0332*  vdu_disable_screen:
0402D8 3E 15       0333*      ld a,21
0402DA 5B D7       0334*  	rst.lil $10
0402DC C9          0335*  	ret
0402DD             0336*  
0402DD             0337*  ; VDU 22, n: Select screen mode (MODE n)
0402DD             0338*  ; Inputs: a, screen mode (8-bit unsigned integer), in the following list:
0402DD             0339*  ; https://agonconsole8.github.io/agon-docs/VDP---Screen-Modes.html
0402DD             0340*  ; Screen modes
0402DD             0341*  ; Modes over 128 are double-buffered
0402DD             0342*  ; From Version 1.04 or greater
0402DD             0343*  ; Mode 	Horz 	Vert 	Cols 	Refresh
0402DD             0344*  ; 0 	640 	480 	16 	    60hz
0402DD             0345*  ; * 1 	640 	480 	4 	    60hz
0402DD             0346*  ; 2 	640 	480 	2 	    60hz
0402DD             0347*  ; 3 	640 	240 	64 	    60hz
0402DD             0348*  ; 4 	640 	240 	16 	    60hz
0402DD             0349*  ; 5 	640 	240 	4 	    60hz
0402DD             0350*  ; 6 	640 	240 	2 	    60hz
0402DD             0351*  ; ** 7 	n/a 	n/a 	16 	    60hz
0402DD             0352*  ; 8 	320 	240 	64 	    60hz
0402DD             0353*  ; 9 	320 	240 	16 	    60hz
0402DD             0354*  ; 10 	320 	240 	4 	    60hz
0402DD             0355*  ; 11 	320 	240 	2 	    60hz
0402DD             0356*  ; 12 	320 	200 	64 	    70hz
0402DD             0357*  ; 13 	320 	200 	16 	    70hz
0402DD             0358*  ; 14 	320 	200 	4 	    70hz
0402DD             0359*  ; 15 	320 	200 	2 	    70hz
0402DD             0360*  ; 16 	800 	600 	4 	    60hz
0402DD             0361*  ; 17 	800 	600 	2 	    60hz
0402DD             0362*  ; 18 	1024 	768 	2 	    60hz
0402DD             0363*  ; 129 	640 	480 	4 	    60hz
0402DD             0364*  ; 130 	640 	480 	2 	    60hz
0402DD             0365*  ; 132 	640 	240 	16 	    60hz
0402DD             0366*  ; 133 	640 	240 	4 	    60hz
0402DD             0367*  ; 134 	640 	240 	2 	    60hz
0402DD             0368*  ; 136 	320 	240 	64 	    60hz
0402DD             0369*  ; 137 	320 	240 	16 	    60hz
0402DD             0370*  ; 138 	320 	240 	4 	    60hz
0402DD             0371*  ; 139 	320 	240 	2 	    60hz
0402DD             0372*  ; 140 	320 	200 	64 	    70hz
0402DD             0373*  ; 141 	320 	200 	16 	    70hz
0402DD             0374*  ; 142 	320 	200 	4 	    70hz
0402DD             0375*  ; 143 	320 	200 	2 	    70hz
0402DD             0376*  ; * Mode 1 is the “default” mode, and is the mode that the system will use on startup.
0402DD             0377*  ; It is also the mode that the system will fall back to use if it was not possible to
0402DD             0378*  ; change to the requested mode.
0402DD             0379*  ; ** Mode 7 is the “Teletext” mode, and essentially works in a very similar manner to
0402DD             0380*  ; the BBC Micro’s Teletext mode, which was also mode 7.
0402DD             0381*  vdu_set_screen_mode:
0402DD 32 ED 02 04 0382*  	ld (@arg),a
0402E1 21 EC 02 04 0383*  	ld hl,@cmd
0402E5 01 02 00 00 0384*  	ld bc,@end-@cmd
0402E9 5B DF       0385*  	rst.lil $18
0402EB C9          0386*  	ret
0402EC 16          0387*  @cmd: db 22 ; set screen mode
0402ED 00          0388*  @arg: db 0  ; screen mode parameter
0402EE             0389*  @end:
0402EE             0390*  
0402EE             0391*  ; VDU 23, n: Re-program display character / System Commands
0402EE             0392*  ; inputs: a, ascii code; hl, pointer to bitmask data
0402EE             0393*  vdu_define_character:
0402EE 32 0A 03 04 0394*  	ld (@ascii),a
0402F2 11 0B 03 04 0395*  	ld de,@data
0402F6 06 08       0396*  	ld b,8 ; loop counter for 8 bytes of data
0402F8             0397*  @loop:
0402F8 7E          0398*  	ld a,(hl)
0402F9 12          0399*  	ld (de),a
0402FA 23          0400*  	inc hl
0402FB 13          0401*  	inc de
0402FC 10 FA       0402*  	djnz @loop
0402FE 21 09 03 04 0403*  	ld hl,@cmd
040302 01 0A 00 00 0404*  	ld bc,@end-@cmd
040306 5B DF       0405*  	rst.lil $18
040308 C9          0406*  	ret
040309 17          0407*  @cmd:   db 23
04030A 00          0408*  @ascii: db 0
04030B             0409*  @data:  ds 8
040313             0410*  @end:
040313             0411*  
040313             0412*  ; VDU 24, left; bottom; right; top;: Set graphics viewport
040313             0413*  ; NOTE: the order of the y-coordinate parameters are inverted
040313             0414*  ; 	because we have turned off logical screen scaling
040313             0415*  ; inputs: bc=x0,de=y0,ix=x1,iy=y1
040313             0416*  ; outputs; nothing
040313             0417*  ; destroys: a might make it out alive
040313             0418*  vdu_set_gfx_viewport:
040313 ED 43 33 03 0419*      ld (@x0),bc
       04          
040318 FD 22 35 03 0420*      ld (@y1),iy
       04          
04031D DD 22 37 03 0421*  	ld (@x1),ix
       04          
040322 ED 53 39 03 0422*  	ld (@y0),de
       04          
040327 21 32 03 04 0423*  	ld hl,@cmd
04032B 01 09 00 00 0424*  	ld bc,@end-@cmd
04032F 5B DF       0425*  	rst.lil $18
040331 C9          0426*  	ret
040332 18          0427*  @cmd:   db 24 ; set graphics viewport command
040333 00 00       0428*  @x0: 	dw 0x0000 ; set by bc
040335 00 00       0429*  @y1: 	dw 0x0000 ; set by iy
040337 00 00       0430*  @x1: 	dw 0x0000 ; set by ix
040339 00 00       0431*  @y0: 	dw 0x0000 ; set by de
04033B 00          0432*  @end:   db 0x00	  ; padding
04033C             0433*  
04033C             0434*  ; VDU 25, mode, x; y;: PLOT command
04033C             0435*  ; Implemented in vdu_plot.asm
04033C             0436*  
04033C             0437*  ; VDU 26: Reset graphics and text viewports **
04033C             0438*  vdu_reset_txt_gfx_view:
04033C 3E 1A       0439*      ld a,26
04033E 5B D7       0440*  	rst.lil $10
040340 C9          0441*  	ret
040341             0442*  
040341             0443*  ; PASSES
040341             0444*  ; VDU 27, char: Output character to screen §
040341             0445*  ; inputs: a is the ascii code of the character to draw
040341             0446*  vdu_draw_char:
040341 32 51 03 04 0447*  	ld (@arg),a
040345 21 50 03 04 0448*  	ld hl,@cmd
040349 01 02 00 00 0449*  	ld bc,@end-@cmd
04034D 5B DF       0450*  	rst.lil $18
04034F C9          0451*  	ret
040350 1B          0452*  @cmd: db 27
040351 00          0453*  @arg: db 0  ; ascii code of character to draw
040352             0454*  @end:
040352             0455*  
040352             0456*  ; VDU 28, left, bottom, right, top: Set text viewport **
040352             0457*  ; MIND THE LITTLE-ENDIANESS
040352             0458*  ; inputs: c=left,b=bottom,e=right,d=top
040352             0459*  ; outputs; nothing
040352             0460*  ; destroys: a might make it out alive
040352             0461*  vdu_set_txt_viewport:
040352 ED 43 68 03 0462*      ld (@lb),bc
       04          
040357 ED 53 6A 03 0463*  	ld (@rt),de
       04          
04035C 21 67 03 04 0464*  	ld hl,@cmd
040360 01 05 00 00 0465*  	ld bc,@end-@cmd
040364 5B DF       0466*  	rst.lil $18
040366 C9          0467*  	ret
040367 1C          0468*  @cmd:   db 28 ; set text viewport command
040368 00 00       0469*  @lb: 	dw 0x0000 ; set by bc
04036A 00 00       0470*  @rt: 	dw 0x0000 ; set by de
04036C 00          0471*  @end:   db 0x00	  ; padding
04036D             0472*  
04036D             0473*  ; PASSES
04036D             0474*  ; VDU 29, x; y;: Set graphics origin
04036D             0475*  ; inputs: bc,de x,y coordinates
04036D             0476*  vdu_set_gfx_origin:
04036D ED 43 83 03 0477*      ld (@x0),bc
       04          
040372 ED 53 85 03 0478*      ld (@y0),de
       04          
040377 21 82 03 04 0479*  	ld hl,@cmd
04037B 01 05 00 00 0480*  	ld bc,@end-@cmd
04037F 5B DF       0481*  	rst.lil $18
040381 C9          0482*  	ret
040382 1D          0483*  @cmd:	db 29
040383 00 00       0484*  @x0: 	dw 0
040385 00 00       0485*  @y0: 	dw 0
040387 00          0486*  @end: 	db 0 ; padding
040388             0487*  
040388             0488*  ; PASSES
040388             0489*  ; VDU 30: Home cursor
040388             0490*  vdu_home_cursor:
040388 3E 1E       0491*      ld a,30
04038A 5B D7       0492*  	rst.lil $10
04038C C9          0493*  	ret
04038D             0494*  
04038D             0495*  ; PASSES
04038D             0496*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
04038D             0497*  ; inputs: c=x, b=y 8-bit unsigned integers
04038D             0498*  vdu_move_cursor:
04038D ED 43 9E 03 0499*      ld (@x0),bc
       04          
040392 21 9D 03 04 0500*  	ld hl,@cmd
040396 01 03 00 00 0501*  	ld bc,@end-@cmd
04039A 5B DF       0502*  	rst.lil $18
04039C C9          0503*  	ret
04039D 1F          0504*  @cmd: 	db 31
04039E 00          0505*  @x0:	db 0
04039F 00          0506*  @y0: 	db 0
0403A0 00          0507*  @end: 	db 0 ; padding
0403A1             0508*  
0403A1             0509*  
0403A1             0510*  ; VDU 127: Backspace
0403A1             0511*  vdu_bksp:
0403A1 3E 7F       0512*      ld a,127
0403A3 5B D7       0513*  	rst.lil $10
0403A5 C9          0514*  	ret
0403A6             0515*  
0403A6             0516*  ; activate a bitmap in preparation to draw it
0403A6             0517*  ; inputs: a holding the bitmap index
0403A6             0518*  vdu_bmp_select:
0403A6 32 B8 03 04 0519*  	ld (@bmp),a
0403AA 21 B5 03 04 0520*  	ld hl,@cmd
0403AE 01 04 00 00 0521*  	ld bc,@end-@cmd
0403B2 5B DF       0522*  	rst.lil $18
0403B4 C9          0523*  	ret
0403B5 17 1B 00    0524*  @cmd: db 23,27,0
0403B8 00          0525*  @bmp: db 0
0403B9             0526*  @end:
0403B9             0527*  
0403B9             0528*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
0403B9             0529*  ; inputs: hl=bufferId
0403B9             0530*  vdu_buff_select:
0403B9 22 CB 03 04 0531*  	ld (@bufferId),hl
0403BD 21 C8 03 04 0532*  	ld hl,@cmd
0403C1 01 05 00 00 0533*  	ld bc,@end-@cmd
0403C5 5B DF       0534*  	rst.lil $18
0403C7 C9          0535*  	ret
0403C8 17 1B 20    0536*  @cmd: db 23,27,0x20
0403CB 00 00       0537*  @bufferId: dw 0x0000
0403CD 00          0538*  @end: db 0x00 ; padding
0403CE             0539*  
0403CE             0540*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer
0403CE             0541*  ; inputs: a=format; bc=width; de=height
0403CE             0542*  ; prerequisites: buffer selected by vdu_bmp_select or vdu_buff_select
0403CE             0543*  ; formats: https://agonconsole8.github.io/agon-docs/VDP---Bitmaps-API.html
0403CE             0544*  ; 0 	RGBA8888 (4-bytes per pixel)
0403CE             0545*  ; 1 	RGBA2222 (1-bytes per pixel)
0403CE             0546*  ; 2 	Mono/Mask (1-bit per pixel)
0403CE             0547*  ; 3 	Reserved for internal use by VDP (“native” format)
0403CE             0548*  vdu_bmp_create:
0403CE ED 43 EA 03 0549*      ld (@width),bc
       04          
0403D3 ED 53 EC 03 0550*      ld (@height),de
       04          
0403D8 32 EE 03 04 0551*      ld (@fmt),a
0403DC 21 E7 03 04 0552*  	ld hl,@cmd
0403E0 01 08 00 00 0553*  	ld bc,@end-@cmd
0403E4 5B DF       0554*  	rst.lil $18
0403E6 C9          0555*  	ret
0403E7 17 1B 21    0556*  @cmd:       db 23,27,0x21
0403EA 00 00       0557*  @width:     dw 0x0000
0403EC 00 00       0558*  @height:    dw 0x0000
0403EE 00          0559*  @fmt:       db 0x00
0403EF             0560*  @end:
0403EF             0561*  
0403EF             0562*  ; Draw a bitmap on the screen
0403EF             0563*  ; inputs: bc, x-coordinate; de, y-coordinate
0403EF             0564*  ; prerequisite: bitmap index set by e.g. vdu_bmp_select
0403EF             0565*  vdu_bmp_draw:
0403EF ED 43 07 04 0566*      ld (@x0),bc
       04          
0403F4 ED 53 09 04 0567*      ld (@y0),de
       04          
0403F9 21 04 04 04 0568*  	ld hl,@cmd
0403FD 01 07 00 00 0569*  	ld bc,@end-@cmd
040401 5B DF       0570*  	rst.lil $18
040403 C9          0571*  	ret
040404 17 1B 03    0572*  @cmd: db 23,27,3
040407 00 00       0573*  @x0:  dw 0x0000
040409 00 00       0574*  @y0:  dw 0x0000
04040B 00          0575*  @end: db 0x00 ; padding
04040C             0576*  
04040C             0577*  ; VDU 23, 0, &C0, n: Turn logical screen scaling on and off *
04040C             0578*  ; inputs: a is scaling mode, 1=on, 0=off
04040C             0579*  ; note: default setting on boot is scaling ON
04040C             0580*  vdu_set_scaling:
04040C 32 1E 04 04 0581*  	ld (@arg),a
040410 21 1B 04 04 0582*  	ld hl,@cmd
040414 01 04 00 00 0583*  	ld bc,@end-@cmd
040418 5B DF       0584*  	rst.lil $18
04041A C9          0585*  	ret
04041B 17 00 C0    0586*  @cmd: db 23,0,0xC0
04041E 00          0587*  @arg: db 0  ; scaling on/off
04041F             0588*  @end:
04041F             0589*  
04041F             0590*  ; VDU 23, 0, &C3: Swap the screen buffer and/or wait for VSYNC **
04041F             0591*  ; 	Swap the screen buffer (double-buffered modes only) or wait for VSYNC
04041F             0592*  ; 	(all modes).
04041F             0593*  
04041F             0594*  ; 	This command will swap the screen buffer, if the current screen mode
04041F             0595*  ; 	is double-buffered, doing so at the next VSYNC. If the current screen
04041F             0596*  ; 	mode is not double-buffered then this command will wait for the next
04041F             0597*  ; 	VSYNC signal before returning. This can be used to synchronise the
04041F             0598*  ; 	screen with the vertical refresh rate of the monitor.
04041F             0599*  
04041F             0600*  ; 	Waiting for VSYNC can be useful for ensuring smooth graphical animation,
04041F             0601*  ; 	as it will prevent tearing of the screen.
04041F             0602*  ; inputs: none
04041F             0603*  ; outputs: none
04041F             0604*  ; destroys: hl, bc
04041F             0605*  vdu_flip:
04041F 21 2A 04 04 0606*  	ld hl,@cmd
040423 01 03 00 00 0607*  	ld bc,@end-@cmd
040427 5B DF       0608*  	rst.lil $18
040429 C9          0609*  	ret
04042A 17 00 C3    0610*  @cmd: db 23,0,0xC3
04042D             0611*  @end:
04042D             0612*  
04042D             0613*  ; Command 64: Compress a buffer
04042D             0614*  ; VDU 23, 0, &A0, targetBufferId; 64, sourceBufferId;
04042D             0615*  ; This command will compress the contents of a buffer, replacing the target buffer with the compressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04042D             0616*  
04042D             0617*  
04042D             0618*  ; Command 65: Decompress a buffer
04042D             0619*  ; VDU 23, 0, &A0, targetBufferId; 65, sourceBufferId;
04042D             0620*  ; This command will decompress the contents of a buffer, replacing the target buffer with the decompressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04042D             0621*  ; inputs: hl=sourceBufferId/targetBufferId
04042D             0622*  vdu_decompress_buffer:
04042D 22 49 04 04 0623*  	ld (@targetBufferId),hl
040431 22 4C 04 04 0624*  	ld (@sourceBufferId),hl
040435 3E 41       0625*  	ld a,65
040437 32 4B 04 04 0626*  	ld (@cmd1),a ; restore the part of command that got stomped on
04043B 21 46 04 04 0627*  	ld hl,@cmd
04043F 01 08 00 00 0628*  	ld bc,@end-@cmd
040443 5B DF       0629*  	rst.lil $18
040445 C9          0630*  	ret
040446 17 00 A0    0631*  @cmd: 	db 23,0,0xA0
040449 00 00       0632*  @targetBufferId: dw 0x0000
04044B 41          0633*  @cmd1:	db 65
04044C 00 00       0634*  @sourceBufferId: dw 0x0000
04044E 00          0635*  @end: 	db 0x00 ; padding
04044F             0636*  
04044F             0637*  ; Command 65: Decompress a buffer
04044F             0638*  ; VDU 23, 0, &A0, targetBufferId; 65, sourceBufferId;
04044F             0639*  ; This command will decompress the contents of a buffer, replacing the target buffer with the decompressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
04044F             0640*  ; inputs: hl=sourceBufferId/targetBufferId
04044F             0641*  ; 0x7FFF for the source buffer is just an easy-to remember aribtrary value
04044F             0642*  vdu_decompress_buffer_different:
04044F 22 6F 04 04 0643*  	ld (@targetBufferId),hl
040453 21 FF 7F 00 0644*      ld hl,0x7FFF
040457 22 72 04 04 0645*  	ld (@sourceBufferId),hl
04045B 3E 41       0646*  	ld a,65
04045D 32 71 04 04 0647*  	ld (@cmd1),a ; restore the part of command that got stomped on
040461 21 6C 04 04 0648*  	ld hl,@cmd
040465 01 08 00 00 0649*  	ld bc,@end-@cmd
040469 5B DF       0650*  	rst.lil $18
04046B C9          0651*  	ret
04046C 17 00 A0    0652*  @cmd: 	db 23,0,0xA0
04046F 00 00       0653*  @targetBufferId: dw 0x0000
040471 41          0654*  @cmd1:	db 65
040472 00 00       0655*  @sourceBufferId: dw 0x0000
040474 00          0656*  @end: 	db 0x00 ; padding
040475             0657*  
040475             0658*  ; #### from vdp.asm ####
040475             0659*  
040475             0660*  ; https://github.com/breakintoprogram/agon-docs/wiki/VDP
040475             0661*  ; VDU 23, 7: Scrolling
040475             0662*  ;     VDU 23, 7, extent, direction, speed: Scroll the screen
040475             0663*  ; inputs: a, extent; l, direction; h; speed
040475             0664*  vdu_scroll_down:
040475 32 8A 04 04 0665*  	ld (@extent),a
040479 22 8B 04 04 0666*  	ld (@dir),hl ; implicitly populates @speed
04047D 21 88 04 04 0667*  	ld hl,@cmd
040481 01 05 00 00 0668*  	ld bc,@end-@cmd
040485 5B DF       0669*  	rst.lil $18     ;; Sending command to VDP
040487 C9          0670*  	ret
040488 17 07       0671*  @cmd:       db 23,7
04048A 00          0672*  @extent:    db 0x00 ; 0 current text window, 1 entire screen, 2 curr gfx viewport
04048B 00          0673*  @dir:       db 0x00 ; 0 right, 1 left, 2 down, 3 up
04048C 00          0674*  @speed:     db 0x00 ; pixels
04048D 00          0675*  @end:		db 0x00 ; padding
04048E             0676*  
04048E             0677*  cursor_on:
04048E 21 99 04 04 0678*  	ld hl,@cmd
040492 01 03 00 00 0679*  	ld bc,@end-@cmd
040496 5B DF       0680*  	rst.lil $18
040498 C9          0681*  	ret
040499             0682*  @cmd:
040499 17 01 01    0683*  	db 23,1,1
04049C             0684*  @end:
04049C             0685*  
04049C             0686*  cursor_off:
04049C 21 A7 04 04 0687*  	ld hl,@cmd
0404A0 01 03 00 00 0688*  	ld bc,@end-@cmd
0404A4 5B DF       0689*  	rst.lil $18
0404A6 C9          0690*  	ret
0404A7             0691*  @cmd:
0404A7 17 01 00    0692*  	db 23,1,0
0404AA             0693*  @end:
0404AA             0694*  
0404AA DD E5       0695*  vdu_vblank:		PUSH 	IX			; Wait for VBLANK interrupt
0404AC             0696*  			MOSCALL	mos_sysvars		; Fetch pointer to system variables
0404AC 3E 08       0001*M 			LD	A, function
0404AE 5B CF       0002*M 			RST.LIL	08h
0404B0 DD 7E 00    0697*  			LD	A, (IX + sysvar_time + 0)
0404B3 DD BE 00    0698*  @wait:			CP 	A, (IX + sysvar_time + 0)
0404B6 28 FB       0699*  			JR	Z, @wait
0404B8 DD E1       0700*  			POP	IX
0404BA C9          0701*  			RET
0404BB             0702*  
0404BB             0703*  ; #### from vdu_bmp.asm ####
0404BB             0704*  ; =========================================================================
0404BB             0705*  ; Bitmaps
0404BB             0706*  ; -------------------------------------------------------------------------
0404BB             0707*  ; VDU 23, 27, 0, n: Select bitmap n
0404BB             0708*  ; VDU 23, 27, &20, bufferId;: Select bitmap using a 16-bit buffer ID *
0404BB             0709*  ; VDU 23, 27, 1, w; h; b1, b2 ... bn: Load colour bitmap data into current bitmap
0404BB             0710*  
0404BB             0711*  ; VDU 23, 27, 1, n, 0, 0;: Capture screen data into bitmap n *
0404BB             0712*  ; VDU 23, 27, &21, bitmapId; 0; : same, but to 16-bit buffer ID *
0404BB             0713*  ; Any PLOT, or VDU 25, style command will push the graphics cursor position -
0404BB             0714*  ; typically "move" style plot commands are used to define the rectangle.
0404BB             0715*  ; To be clear, this command should be performed after two "move" style PLOT commands.
0404BB             0716*  ; inputs: hl; target bufferId
0404BB             0717*  ; all the following are in 16.8 fixed point format
0404BB             0718*  ;   ub.c; top-left x coordinate
0404BB             0719*  ;   ud.e; top-left y coordinate
0404BB             0720*  ;   ui.x; width
0404BB             0721*  ;   ui.y; height
0404BB             0722*  vdu_buff_screen_capture168:
0404BB ED 53 F2 04 0723*          ld (@y0-1),de
       04          
0404C0 ED 43 F0 04 0724*          ld (@x0-1),bc
       04          
0404C5 3E 44       0725*          ld a,0x44 ; plot_pt+mv_abs
0404C7 32 F0 04 04 0726*          ld (@x0-1),a
0404CB             0727*  
0404CB DD 22 F7 04 0728*          ld (@x1),ix
       04          
0404D0 FD 22 F9 04 0729*          ld (@y1),iy
       04          
0404D5 3E 17       0730*          ld a,23
0404D7 32 FB 04 04 0731*          ld (@y1+2),a
0404DB             0732*  
0404DB 22 FE 04 04 0733*          ld (@bufId),hl
0404DF AF          0734*          xor a
0404E0 32 00 05 04 0735*          ld (@bufId+2),a
0404E4             0736*  
0404E4 21 EF 04 04 0737*          ld hl,@begin
0404E8 01 13 00 00 0738*          ld bc,@end-@begin
0404EC 5B DF       0739*          rst.lil $18
0404EE C9          0740*          ret
0404EF             0741*  @begin:
0404EF             0742*  ; absolute move gfx cursor to top-left screen coordinate
0404EF             0743*  ; VDU 25, mode, x; y;: PLOT command
0404EF 19 44       0744*          db 25,0x44 ; plot_pt+mv_abs
0404F1 40 00       0745*  @x0: 	dw 64
0404F3 40 00       0746*  @y0: 	dw 64
0404F5             0747*  ; relative move gfx cursor to bottom-right screen coordinate
0404F5             0748*  ; VDU 25, mode, x; y;: PLOT command
0404F5 19 40       0749*          db 25,0x40 ; plot_pt+mv_rel
0404F7 0F 00       0750*  @x1: 	dw 15
0404F9 0F 00       0751*  @y1: 	dw 15
0404FB             0752*  ; now the main event
0404FB             0753*  ; VDU 23, 27, &21, bitmapId; 0;
0404FB 17 1B 21    0754*          db 23,27,0x21
0404FE 00 20 00 00 0755*  @bufId: dw 0x2000,0x0000
040502             0756*  @end: ; no padding required
040502             0757*  
040502             0758*  vdu_buff_screen_capture_full:
040502 21 0D 05 04 0759*          ld hl,@begin
040506 01 13 00 00 0760*          ld bc,@end-@begin
04050A 5B DF       0761*          rst.lil $18
04050C C9          0762*          ret
04050D             0763*  @begin:
04050D             0764*  ; absolute move gfx cursor to top-left screen coordinate
04050D             0765*  ; VDU 25, mode, x; y;: PLOT command
04050D 19 44       0766*          db 25,0x44 ; plot_pt+mv_abs
04050F 00 00       0767*  @x0: 	dw 0
040511 00 00       0768*  @y0: 	dw 0
040513             0769*  ; relative move gfx cursor to bottom-right screen coordinate
040513             0770*  ; VDU 25, mode, x; y;: PLOT command
040513 19 40       0771*          db 25,0x40 ; plot_pt+mv_rel
040515 3F 01       0772*  @x1: 	dw 319
040517 EF 00       0773*  @y1: 	dw 239
040519             0774*  ; now the main event
040519             0775*  ; VDU 23, 27, &21, bitmapId; 0;
040519 17 1B 21    0776*          db 23,27,0x21
04051C 00 20 00 00 0777*  @bufId: dw 0x2000,0x0000
040520             0778*  @end: ; no padding required
040520             0779*  
040520             0780*  vdu_buff_screen_paste_full:
040520 21 2B 05 04 0781*          ld hl,@begin
040524 01 0B 00 00 0782*          ld bc,@end-@begin
040528 5B DF       0783*          rst.lil $18
04052A C9          0784*          ret
04052B             0785*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
04052B 17 1B 20    0786*  @begin:    db 23,27,0x20
04052E 00 20       0787*  @bufferId: dw 0x2000
040530             0788*  ; VDU 25, mode, x; y;: PLOT command
040530 19 ED       0789*             db 25,0xED ; plot_bmp+dr_abs_fg
040532 00 00 00 00 0790*             dw 0x0000,0x0000
040536             0791*  @end: ; no padding required
040536             0792*  
040536             0793*  vdu_buff_screen_capture_tiles:
040536 21 41 05 04 0794*          ld hl,@begin
04053A 01 13 00 00 0795*          ld bc,@end-@begin
04053E 5B DF       0796*          rst.lil $18
040540 C9          0797*          ret
040541             0798*  @begin:
040541             0799*  ; absolute move gfx cursor to top-left screen coordinate
040541             0800*  ; VDU 25, mode, x; y;: PLOT command
040541 19 44       0801*          db 25,0x44 ; plot_pt+mv_abs
040543 00 00       0802*  @x0: 	dw 0
040545 00 00       0803*  @y0: 	dw 0
040547             0804*  ; relative move gfx cursor to bottom-right screen coordinate
040547             0805*  ; VDU 25, mode, x; y;: PLOT command
040547 19 40       0806*          db 25,0x40 ; plot_pt+mv_rel
040549 FF 00       0807*  @x1: 	dw 319-64
04054B EF 00       0808*  @y1: 	dw 239
04054D             0809*  ; now the main event
04054D             0810*  ; VDU 23, 27, &21, bitmapId; 0;
04054D 17 1B 21    0811*          db 23,27,0x21
040550 00 20 00 00 0812*  @bufId: dw 0x2000,0x0000
040554             0813*  @end: ; no padding required
040554             0814*  
040554             0815*  vdu_buff_screen_paste_tiles:
040554 21 5F 05 04 0816*          ld hl,@begin
040558 01 0B 00 00 0817*          ld bc,@end-@begin
04055C 5B DF       0818*          rst.lil $18
04055E C9          0819*          ret
04055F             0820*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
04055F 17 1B 20    0821*  @begin:    db 23,27,0x20
040562 00 20       0822*  @bufferId: dw 0x2000
040564             0823*  ; VDU 25, mode, x; y;: PLOT command
040564 19 ED       0824*             db 25,0xED ; plot_bmp+dr_abs_fg
040566 00 00 01 00 0825*             dw 0x0000,0x0001
04056A             0826*  @end: ; no padding required
04056A             0827*  
04056A             0828*  ; VDU 23, 27, 2, w; h; col1; col2;: Create a solid colour rectangular bitmap
04056A             0829*  ; VDU 23, 27, 3, x; y;: Draw current bitmap on screen at pixel position x, y
04056A             0830*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer *
04056A             0831*  ; Value	Meaning
04056A             0832*  ; 0	RGBA8888 (4-bytes per pixel)
04056A             0833*  ; 1	RGBA2222 (1-bytes per pixel)
04056A             0834*  ; 2	Mono/Mask (1-bit per pixel)
04056A             0835*  ; 3	Reserved for internal use by VDP ("native" format)VDP.
04056A             0836*  ;     They have some significant limitations, and are not intended for general use.
04056A             0837*  
04056A             0838*  ; =========================================================================
04056A             0839*  ; Sprites
04056A             0840*  ; -------------------------------------------------------------------------
04056A             0841*  ; VDU 23, 27, 4, n: Select sprite n
04056A             0842*  ; VDU 23, 27, 5: Clear frames in current sprite
04056A             0843*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04056A             0844*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
04056A             0845*  ; VDU 23, 27, 7, n: Activate n sprites
04056A             0846*  ; VDU 23, 27, 8: Select next frame of current sprite
04056A             0847*  ; VDU 23, 27, 9: Select previous frame of current sprite
04056A             0848*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04056A             0849*  ; VDU 23, 27, 11: Show current sprite
04056A             0850*  ; VDU 23, 27, 12: Hide current sprite
04056A             0851*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04056A             0852*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04056A             0853*  ; VDU 23, 27, 15: Update the sprites in the GPU
04056A             0854*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
04056A             0855*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
04056A             0856*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
04056A             0857*  
04056A             0858*  ; =========================================================================
04056A             0859*  ; Mouse cursor
04056A             0860*  ; -------------------------------------------------------------------------
04056A             0861*  ; VDU 23, 27, &40, hotX, hotY: Setup a mouse cursor with a hot spot at hotX, hotY
04056A             0862*  
04056A             0863*  ; #### from vdu_plot.asm ####
04056A             0864*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04056A             0865*  ; PLOT code 	(Decimal) 	Effect
04056A             0866*  ; &00-&07 	0-7 	Solid line, includes both ends
04056A             0867*  plot_sl_both: equ 0x00
04056A             0868*  
04056A             0869*  ; &08-&0F 	8-15 	Solid line, final point omitted
04056A             0870*  plot_sl_first: equ 0x08
04056A             0871*  
04056A             0872*  ; &10-&17 	16-23 	Not supported (Dot-dash line, includes both ends, pattern restarted)
04056A             0873*  ; &18-&1F 	24-31 	Not supported (Dot-dash line, first point omitted, pattern restarted)
04056A             0874*  
04056A             0875*  ; &20-&27 	32-39 	Solid line, first point omitted
04056A             0876*  plot_sl_last: equ 0x20
04056A             0877*  
04056A             0878*  ; &28-&2F 	40-47 	Solid line, both points omitted
04056A             0879*  plot_sl_none: equ 0x28
04056A             0880*  
04056A             0881*  ; &30-&37 	48-55 	Not supported (Dot-dash line, first point omitted, pattern continued)
04056A             0882*  ; &38-&3F 	56-63 	Not supported (Dot-dash line, both points omitted, pattern continued)
04056A             0883*  
04056A             0884*  ; &40-&47 	64-71 	Point plot
04056A             0885*  plot_pt: equ 0x40
04056A             0886*  
04056A             0887*  ; &48-&4F 	72-79 	Line fill left and right to non-background §§
04056A             0888*  plot_lf_lr_non_bg: equ 0x48
04056A             0889*  
04056A             0890*  ; &50-&57 	80-87 	Triangle fill
04056A             0891*  plot_tf: equ 0x50
04056A             0892*  
04056A             0893*  ; &58-&5F 	88-95 	Line fill right to background §§
04056A             0894*  plot_lf_r_bg: equ 0x58
04056A             0895*  
04056A             0896*  ; &60-&67 	96-103 	Rectangle fill
04056A             0897*  plot_rf: equ 0x60
04056A             0898*  
04056A             0899*  ; &68-&6F 	104-111 	Line fill left and right to foreground §§
04056A             0900*  plot_lf_lr_fg: equ 0x60
04056A             0901*  
04056A             0902*  ; &70-&77 	112-119 	Parallelogram fill
04056A             0903*  plot_pf: equ 0x70
04056A             0904*  
04056A             0905*  ; &78-&7F 	120-127 	Line fill right to non-foreground §§
04056A             0906*  plot_lf_r_non_fg: equ 0x78
04056A             0907*  
04056A             0908*  ; &80-&87 	128-135 	Not supported (Flood until non-background)
04056A             0909*  ; &88-&8F 	136-143 	Not supported (Flood until foreground)
04056A             0910*  
04056A             0911*  ; &90-&97 	144-151 	Circle outline
04056A             0912*  plot_co: equ 0x90
04056A             0913*  
04056A             0914*  ; &98-&9F 	152-159 	Circle fill
04056A             0915*  plot_cf: equ 0x98
04056A             0916*  
04056A             0917*  ; &A0-&A7 	160-167 	Not supported (Circular arc)
04056A             0918*  ; &A8-&AF 	168-175 	Not supported (Circular segment)
04056A             0919*  ; &B0-&B7 	176-183 	Not supported (Circular sector)
04056A             0920*  
04056A             0921*  ; &B8-&BF 	184-191 	Rectangle copy/move
04056A             0922*  plot_rcm: equ 0xB8
04056A             0923*  
04056A             0924*  ; &C0-&C7 	192-199 	Not supported (Ellipse outline)
04056A             0925*  ; &C8-&CF 	200-207 	Not supported (Ellipse fill)
04056A             0926*  ; &D0-&D7 	208-215 	Not defined
04056A             0927*  ; &D8-&DF 	216-223 	Not defined
04056A             0928*  ; &E0-&E7 	224-231 	Not defined
04056A             0929*  
04056A             0930*  ; &E8-&EF 	232-239 	Bitmap plot §
04056A             0931*  plot_bmp: equ 0xE8
04056A             0932*  
04056A             0933*  ; &F0-&F7 	240-247 	Not defined
04056A             0934*  ; &F8-&FF 	248-255 	Not defined
04056A             0935*  
04056A             0936*  ; § Support added in Agon Console8 VDP 2.1.0 §§ Support added in
04056A             0937*  ; Agon Console8 VDP 2.2.0
04056A             0938*  
04056A             0939*  ; Within each group of eight plot codes, the effects are as follows:
04056A             0940*  ; Plot code 	Effect
04056A             0941*  ; 0 	Move relative
04056A             0942*  mv_rel: equ 0
04056A             0943*  
04056A             0944*  ; 1 	Plot relative in current foreground colour
04056A             0945*  dr_rel_fg: equ 1
04056A             0946*  
04056A             0947*  ; 2 	Not supported (Plot relative in logical inverse colour)
04056A             0948*  ; 3 	Plot relative in current background colour
04056A             0949*  dr_rel_bg: equ 3
04056A             0950*  
04056A             0951*  ; 4 	Move absolute
04056A             0952*  mv_abs: equ 4
04056A             0953*  
04056A             0954*  ; 5 	Plot absolute in current foreground colour
04056A             0955*  dr_abs_fg: equ 5
04056A             0956*  
04056A             0957*  ; 6 	Not supported (Plot absolute in logical inverse colour)
04056A             0958*  ; 7 	Plot absolute in current background colour
04056A             0959*  dr_abs_bg: equ 7
04056A             0960*  
04056A             0961*  ; Codes 0-3 use the position data provided as part of the command
04056A             0962*  ; as a relative position, adding the position given to the current
04056A             0963*  ; graphical cursor position. Codes 4-7 use the position data provided
04056A             0964*  ; as part of the command as an absolute position, setting the current
04056A             0965*  ; graphical cursor position to the position given.
04056A             0966*  
04056A             0967*  ; Codes 2 and 6 on Acorn systems plot using a logical inverse of the
04056A             0968*  ; current pixel colour. These operations cannot currently be supported
04056A             0969*  ; by the graphics system the Agon VDP uses, so these codes are not
04056A             0970*  ; supported. Support for these codes may be added in a future version
04056A             0971*  ; of the VDP firmware.
04056A             0972*  
04056A             0973*  ; 16 colour palette constants
04056A             0974*  c_black: equ 0
04056A             0975*  c_red_dk: equ 1
04056A             0976*  c_green_dk: equ 2
04056A             0977*  c_yellow_dk: equ 3
04056A             0978*  c_blue_dk: equ 4
04056A             0979*  c_magenta_dk: equ 5
04056A             0980*  c_cyan_dk: equ 6
04056A             0981*  c_grey: equ 7
04056A             0982*  c_grey_dk: equ 8
04056A             0983*  c_red: equ 9
04056A             0984*  c_green: equ 10
04056A             0985*  c_yellow: equ 11
04056A             0986*  c_blue: equ 12
04056A             0987*  c_magenta: equ 13
04056A             0988*  c_cyan: equ 14
04056A             0989*  c_white: equ 15
04056A             0990*  
04056A             0991*  ; VDU 25, mode, x; y;: PLOT command
04056A             0992*  ; inputs: a=mode, bc=x0, de=y0
04056A             0993*  vdu_plot:
04056A 32 84 05 04 0994*      ld (@mode),a
04056E ED 43 85 05 0995*      ld (@x0),bc
       04          
040573 ED 53 87 05 0996*      ld (@y0),de
       04          
040578 21 83 05 04 0997*  	ld hl,@cmd
04057C 01 06 00 00 0998*  	ld bc,@end-@cmd
040580 5B DF       0999*  	rst.lil $18
040582 C9          1000*  	ret
040583 19          1001*  @cmd:   db 25
040584 00          1002*  @mode:  db 0
040585 00 00       1003*  @x0: 	dw 0
040587 00 00       1004*  @y0: 	dw 0
040589 00          1005*  @end:   db 0 ; extra byte to soak up deu
04058A             1006*  
04058A             1007*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04058A             1008*  ; &E8-&EF 	232-239 	Bitmap plot §
04058A             1009*  ; VDU 25, mode, x; y;: PLOT command
04058A             1010*  ; inputs: bc=x0, de=y0
04058A             1011*  ; prerequisites: vdu_buff_select
04058A             1012*  vdu_plot_bmp:
04058A ED 43 A1 05 1013*      ld (@x0),bc
       04          
04058F ED 53 A3 05 1014*      ld (@y0),de
       04          
040594 21 9F 05 04 1015*  	ld hl,@cmd
040598 01 06 00 00 1016*  	ld bc,@end-@cmd
04059C 5B DF       1017*  	rst.lil $18
04059E C9          1018*  	ret
04059F 19          1019*  @cmd:   db 25
0405A0 ED          1020*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
0405A1 00 00       1021*  @x0: 	dw 0x0000
0405A3 00 00       1022*  @y0: 	dw 0x0000
0405A5 00          1023*  @end:   db 0x00 ; padding
0405A6             1024*  
0405A6             1025*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
0405A6             1026*  ; &E8-&EF 	232-239 	Bitmap plot §
0405A6             1027*  ; VDU 25, mode, x; y;: PLOT command
0405A6             1028*  ; inputs: bc=x0, de=y0
0405A6             1029*  ; USING 16.8 FIXED POINT COORDINATES
0405A6             1030*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
0405A6             1031*  ;   the fractional portiion of the inputs are truncated
0405A6             1032*  ;   leaving only the 16-bit integer portion
0405A6             1033*  ; prerequisites: vdu_buff_select
0405A6             1034*  vdu_plot_bmp168:
0405A6             1035*  ; populate in the reverse of normal to keep the
0405A6             1036*  ; inputs from stomping on each other
0405A6 ED 53 C4 05 1037*      ld (@y0-1),de
       04          
0405AB ED 43 C2 05 1038*      ld (@x0-1),bc
       04          
0405B0 3E ED       1039*      ld a,plot_bmp+dr_abs_fg ; 0xED
0405B2 32 C2 05 04 1040*      ld (@mode),a ; restore the mode byte that got stomped on by bcu
0405B6 21 C1 05 04 1041*  	ld hl,@cmd
0405BA 01 06 00 00 1042*  	ld bc,@end-@cmd
0405BE 5B DF       1043*  	rst.lil $18
0405C0 C9          1044*  	ret
0405C1 19          1045*  @cmd:   db 25
0405C2 ED          1046*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
0405C3 00 00       1047*  @x0: 	dw 0x0000
0405C5 00 00       1048*  @y0: 	dw 0x0000
0405C7             1049*  @end:  ; no padding required b/c we shifted de right
0405C7             1050*  
0405C7             1051*  ; draw a filled rectangle
0405C7             1052*  vdu_plot_rf:
0405C7 ED 43 EE 05 1053*      ld (@x0),bc
       04          
0405CC ED 53 F0 05 1054*      ld (@y0),de
       04          
0405D1 DD 22 F4 05 1055*      ld (@x1),ix
       04          
0405D6 FD 22 F6 05 1056*      ld (@y1),iy
       04          
0405DB 3E 19       1057*      ld a,25 ; we have to reload the 2nd plot command
0405DD 32 F2 05 04 1058*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
0405E1 21 EC 05 04 1059*  	ld hl,@cmd0
0405E5 01 0C 00 00 1060*  	ld bc,@end-@cmd0
0405E9 5B DF       1061*  	rst.lil $18
0405EB C9          1062*      ret
0405EC 19          1063*  @cmd0:  db 25 ; plot
0405ED 04          1064*  @arg0:  db plot_sl_both+mv_abs
0405EE 00 00       1065*  @x0:    dw 0x0000
0405F0 00 00       1066*  @y0:    dw 0x0000
0405F2 19          1067*  @cmd1:  db 25 ; plot
0405F3 65          1068*  @arg1:  db plot_rf+dr_abs_fg
0405F4 00 00       1069*  @x1:    dw 0x0000
0405F6 00 00       1070*  @y1:    dw 0x0000
0405F8 00          1071*  @end:   db 0x00 ; padding
0405F9             1072*  
0405F9             1073*  ; draw a filled circle
0405F9             1074*  vdu_plot_cf:
0405F9 ED 43 20 06 1075*      ld (@x0),bc
       04          
0405FE ED 53 22 06 1076*      ld (@y0),de
       04          
040603 DD 22 26 06 1077*      ld (@x1),ix
       04          
040608 FD 22 28 06 1078*      ld (@y1),iy
       04          
04060D 3E 19       1079*      ld a,25 ; we have to reload the 2nd plot command
04060F 32 24 06 04 1080*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
040613 21 1E 06 04 1081*  	ld hl,@cmd0
040617 01 0C 00 00 1082*  	ld bc,@end-@cmd0
04061B 5B DF       1083*  	rst.lil $18
04061D C9          1084*      ret
04061E 19          1085*  @cmd0:  db 25 ; plot
04061F 04          1086*  @arg0:  db plot_sl_both+mv_abs
040620 00 00       1087*  @x0:    dw 0x0000
040622 00 00       1088*  @y0:    dw 0x0000
040624 19          1089*  @cmd1:  db 25 ; plot
040625 9D          1090*  @arg1:  db plot_cf+dr_abs_fg
040626 00 00       1091*  @x1:    dw 0x0000
040628 00 00       1092*  @y1:    dw 0x0000
04062A 00          1093*  @end:   db 0x00 ; padding
04062B             1094*  
04062B             1095*  ; #### from vdu_sprites.asm ####
04062B             1096*  ; ; https://github.com/AgonConsole8/agon-docs/blob/main/VDP---Bitmaps-API.md
04062B             1097*  ; the VDP can support up to 256 sprites. They must be defined
04062B             1098*  ; contiguously, and so the first sprite is sprite 0.
04062B             1099*  ; (In contrast, bitmaps can have any ID from 0 to 65534.)
04062B             1100*  ; Once a selection of sprites have been defined, you can activate
04062B             1101*  ; them using the VDU 23, 27, 7, n command, where n is the number
04062B             1102*  ; of sprites to activate. This will activate the first n sprites,
04062B             1103*  ; starting with sprite 0. All sprites from 0 to n-1 must be defined.
04062B             1104*  
04062B             1105*  ; A single sprite can have multiple "frames", referring to
04062B             1106*  ; different bitmaps.
04062B             1107*  ; (These bitmaps do not need to be the same size.)
04062B             1108*  ; This allows a sprite to include an animation sequence,
04062B             1109*  ; which can be stepped through one frame at a time, or picked
04062B             1110*  ; in any order.
04062B             1111*  
04062B             1112*  ; Any format of bitmap can be used as a sprite frame. It should
04062B             1113*  ; be noted however that "native" format bitmaps are not
04062B             1114*  ; recommended for use as sprite frames, as they cannot get
04062B             1115*  ; erased from the screen. (As noted above, the "native" bitmap
04062B             1116*  ; format is not really intended for general use.) This is part
04062B             1117*  ; of why from Agon Console8 VDP 2.6.0 bitmaps captured from the
04062B             1118*  ; screen are now stored in RGBA2222 format.
04062B             1119*  
04062B             1120*  ; An "active" sprite can be hidden, so it will stop being drawn,
04062B             1121*  ; and then later shown again.
04062B             1122*  
04062B             1123*  ; Moving sprites around the screen is done by changing the
04062B             1124*  ; position of the sprite. This can be done either by setting
04062B             1125*  ; the absolute position of the sprite, or by moving the sprite
04062B             1126*  ; by a given number of pixels. (Sprites are positioned using
04062B             1127*  ; pixel coordinates, and not by the logical OS coordinate system.)
04062B             1128*  ; In the current sprite system, sprites will not update their
04062B             1129*  ; position on-screen until either another drawing operation is
04062B             1130*  ; performed or an explicit VDU 23, 27, 15 command is performed.
04062B             1131*  
04062B             1132*  ; Here are the sprite commands:
04062B             1133*  ;
04062B             1134*  ; VDU 23, 27, 4,  n: Select sprite n
04062B             1135*  ; inputs: a is the 8-bit sprite id
04062B             1136*  ; vdu_sprite_select:
04062B             1137*  
04062B             1138*  ; VDU 23, 27, 5:  Clear frames in current sprite
04062B             1139*  ; inputs: none
04062B             1140*  ; prerequisites: vdu_sprite_select
04062B             1141*  ; vdu_sprite_clear_frames:
04062B             1142*  
04062B             1143*  ; VDU 23, 27, 6,  n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04062B             1144*  ; inputs: a is the 8-bit bitmap number
04062B             1145*  ; prerequisites: vdu_sprite_select
04062B             1146*  ; vdu_sprite_add_bmp:
04062B             1147*  
04062B             1148*  ; VDU 23, 27, 7,  n: Activate n sprites
04062B             1149*  ; inputs: a is the number of sprites to activate
04062B             1150*  ; vdu_sprite_activate:
04062B             1151*  
04062B             1152*  ; VDU 23, 27, 8:  Select next frame of current sprite
04062B             1153*  ; inputs: none
04062B             1154*  ; prerequisites: vdu_sprite_select
04062B             1155*  ; vdu_sprite_next_frame:
04062B             1156*  
04062B             1157*  ; VDU 23, 27, 9:  Select previous frame of current sprite
04062B             1158*  ; inputs: none
04062B             1159*  ; prerequisites: vdu_sprite_select
04062B             1160*  ; vdu_sprite_prev_frame:
04062B             1161*  
04062B             1162*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04062B             1163*  ; inputs: a is frame number to select
04062B             1164*  ; prerequisites: vdu_sprite_select
04062B             1165*  ; vdu_sprite_select_frame:
04062B             1166*  
04062B             1167*  ; VDU 23, 27, 11: Show current sprite
04062B             1168*  ; inputs: none
04062B             1169*  ; prerequisites: vdu_sprite_select
04062B             1170*  ; vdu_sprite_show:
04062B             1171*  
04062B             1172*  ; VDU 23, 27, 12: Hide current sprite
04062B             1173*  ; inputs: none
04062B             1174*  ; prerequisites: vdu_sprite_select
04062B             1175*  ; vdu_sprite_hide:
04062B             1176*  
04062B             1177*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
04062B             1178*  ; inputs: bc is x coordinate, de is y coordinate
04062B             1179*  ; prerequisites: vdu_sprite_select
04062B             1180*  ; vdu_sprite_move_abs:
04062B             1181*  ;
04062B             1182*  ; USING 16.8 FIXED POINT COORDINATES
04062B             1183*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
04062B             1184*  ;   the fractional portiion of the inputs are truncated
04062B             1185*  ;   leaving only the 16-bit integer portion
04062B             1186*  ; prerequisites: vdu_sprite_select
04062B             1187*  ; vdu_sprite_move_abs168:
04062B             1188*  
04062B             1189*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
04062B             1190*  ; inputs: bc is x coordinate, de is y coordinate
04062B             1191*  ; prerequisites: vdu_sprite_select
04062B             1192*  ; vdu_sprite_move_rel:
04062B             1193*  ;
04062B             1194*  ; USING 16.8 FIXED POINT COORDINATES
04062B             1195*  ; inputs: ub.c is dx, ud.e is dy
04062B             1196*  ;   the fractional portiion of the inputs are truncated
04062B             1197*  ;   leaving only the 16-bit integer portion
04062B             1198*  ; prerequisites: vdu_sprite_select
04062B             1199*  ; vdu_sprite_move_rel168:
04062B             1200*  
04062B             1201*  ; VDU 23, 27, 15: Update the sprites in the GPU
04062B             1202*  ; inputs: none
04062B             1203*  ; vdu_sprite_update:
04062B             1204*  
04062B             1205*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
04062B             1206*  ; inputs: none
04062B             1207*  ; vdu_sprite_bmp_reset:
04062B             1208*  
04062B             1209*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
04062B             1210*  ; inputs: none
04062B             1211*  ; vdu_sprite_reset:
04062B             1212*  
04062B             1213*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
04062B             1214*  ; inputs: a is the GCOL paint mode
04062B             1215*  ; prerequisites: vdu_sprite_select
04062B             1216*  ; vdu_sprite_set_gcol:
04062B             1217*  
04062B             1218*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
04062B             1219*  ; inputs: hl=bufferId
04062B             1220*  ; prerequisites: vdu_sprite_select
04062B             1221*  ; vdu_sprite_add_buff:
04062B             1222*  
04062B             1223*  @dummy_label: ; dummy label to serve as a break from the above comments and the below code
04062B             1224*  
04062B             1225*  ; VDU 23, 27, 4, n: Select sprite n
04062B             1226*  ; inputs: a is the 8-bit sprite id
04062B             1227*  vdu_sprite_select:
04062B 32 3D 06 04 1228*      ld (@sprite),a
04062F 21 3A 06 04 1229*      ld hl,@cmd
040633 01 04 00 00 1230*      ld bc,@end-@cmd
040637 5B DF       1231*      rst.lil $18
040639 C9          1232*      ret
04063A 17 1B 04    1233*  @cmd:    db 23,27,4
04063D 00          1234*  @sprite: db 0x00
04063E             1235*  @end:
04063E             1236*  
04063E             1237*  ; VDU 23, 27, 5: Clear frames in current sprite
04063E             1238*  ; inputs: none
04063E             1239*  ; prerequisites: vdu_sprite_select
04063E             1240*  vdu_sprite_clear_frames:
04063E 21 49 06 04 1241*      ld hl,@cmd
040642 01 03 00 00 1242*      ld bc,@end-@cmd
040646 5B DF       1243*      rst.lil $18
040648 C9          1244*      ret
040649 17 1B 05    1245*  @cmd: db 23,27,5
04064C             1246*  @end:
04064C             1247*  
04064C             1248*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
04064C             1249*  ; inputs: a is the 8-bit bitmap number
04064C             1250*  ; prerequisites: vdu_sprite_select
04064C             1251*  vdu_sprite_add_bmp:
04064C 32 5E 06 04 1252*      ld (@bmp),a
040650 21 5B 06 04 1253*      ld hl,@cmd
040654 01 04 00 00 1254*      ld bc,@end-@cmd
040658 5B DF       1255*      rst.lil $18
04065A C9          1256*      ret
04065B 17 1B 06    1257*  @cmd: db 23,27,6
04065E 00          1258*  @bmp: db 0x00
04065F             1259*  @end:
04065F             1260*  
04065F             1261*  ; VDU 23, 27, 7, n: Activate n sprites
04065F             1262*  ; inputs: a is the number of sprites to activate
04065F             1263*  vdu_sprite_activate:
04065F 32 71 06 04 1264*      ld (@num),a
040663 21 6E 06 04 1265*      ld hl,@cmd
040667 01 04 00 00 1266*      ld bc,@end-@cmd
04066B 5B DF       1267*      rst.lil $18
04066D C9          1268*      ret
04066E 17 1B 07    1269*  @cmd: db 23,27,7
040671 00          1270*  @num: db 0x00
040672             1271*  @end:
040672             1272*  
040672             1273*  ; VDU 23, 27, 8: Select next frame of current sprite
040672             1274*  ; inputs: none
040672             1275*  ; prerequisites: vdu_sprite_select
040672             1276*  vdu_sprite_next_frame:
040672 21 7D 06 04 1277*      ld hl,@cmd
040676 01 03 00 00 1278*      ld bc,@end-@cmd
04067A 5B DF       1279*      rst.lil $18
04067C C9          1280*      ret
04067D 17 1B 08    1281*  @cmd: db 23,27,8
040680             1282*  @end:
040680             1283*  
040680             1284*  ; VDU 23, 27, 9: Select previous frame of current sprite
040680             1285*  ; inputs: none
040680             1286*  ; prerequisites: vdu_sprite_select
040680             1287*  vdu_sprite_prev_frame:
040680 21 8B 06 04 1288*      ld hl,@cmd
040684 01 03 00 00 1289*      ld bc,@end-@cmd
040688 5B DF       1290*      rst.lil $18
04068A C9          1291*      ret
04068B 17 1B 09    1292*  @cmd: db 23,27,9
04068E             1293*  @end:
04068E             1294*  
04068E             1295*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
04068E             1296*  ; inputs: a is frame number to select
04068E             1297*  ; prerequisites: vdu_sprite_select
04068E             1298*  vdu_sprite_select_frame:
04068E 32 A0 06 04 1299*      ld (@frame),a
040692 21 9D 06 04 1300*      ld hl,@cmd
040696 01 04 00 00 1301*      ld bc,@end-@cmd
04069A 5B DF       1302*      rst.lil $18
04069C C9          1303*      ret
04069D 17 1B 0A    1304*  @cmd:    db 23,27,10
0406A0 00          1305*  @frame:  db 0x00
0406A1             1306*  @end:
0406A1             1307*  
0406A1             1308*  ; VDU 23, 27, 11: Show current sprite
0406A1             1309*  ; inputs: none
0406A1             1310*  ; prerequisites: vdu_sprite_select
0406A1             1311*  vdu_sprite_show:
0406A1 21 AC 06 04 1312*      ld hl,@cmd
0406A5 01 03 00 00 1313*      ld bc,@end-@cmd
0406A9 5B DF       1314*      rst.lil $18
0406AB C9          1315*      ret
0406AC 17 1B 0B    1316*  @cmd: db 23,27,11
0406AF             1317*  @end:
0406AF             1318*  
0406AF             1319*  ; VDU 23, 27, 12: Hide current sprite
0406AF             1320*  ; inputs: none
0406AF             1321*  ; prerequisites: vdu_sprite_select
0406AF             1322*  vdu_sprite_hide:
0406AF 21 BA 06 04 1323*      ld hl,@cmd
0406B3 01 03 00 00 1324*      ld bc,@end-@cmd
0406B7 5B DF       1325*      rst.lil $18
0406B9 C9          1326*      ret
0406BA 17 1B 0C    1327*  @cmd: db 23,27,12
0406BD             1328*  @end:
0406BD             1329*  
0406BD             1330*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
0406BD             1331*  ; inputs: bc is x coordinate, de is y coordinate
0406BD             1332*  ; prerequisites: vdu_sprite_select
0406BD             1333*  vdu_sprite_move_abs:
0406BD ED 43 D5 06 1334*      ld (@xpos),bc
       04          
0406C2 ED 53 D7 06 1335*      ld (@ypos),de
       04          
0406C7 21 D2 06 04 1336*      ld hl,@cmd
0406CB 01 07 00 00 1337*      ld bc,@end-@cmd
0406CF 5B DF       1338*      rst.lil $18
0406D1 C9          1339*      ret
0406D2 17 1B 0D    1340*  @cmd:  db 23,27,13
0406D5 00 00       1341*  @xpos: dw 0x0000
0406D7 00 00       1342*  @ypos: dw 0x0000
0406D9 00          1343*  @end:  db 0x00 ; padding
0406DA             1344*  
0406DA             1345*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
0406DA             1346*  ; inputs: bc is x coordinate, de is y coordinate
0406DA             1347*  ; prerequisites: vdu_sprite_select
0406DA             1348*  vdu_sprite_move_rel:
0406DA ED 43 F2 06 1349*      ld (@dx),bc
       04          
0406DF ED 53 F4 06 1350*      ld (@dy),de
       04          
0406E4 21 EF 06 04 1351*      ld hl,@cmd
0406E8 01 07 00 00 1352*      ld bc,@end-@cmd
0406EC 5B DF       1353*      rst.lil $18
0406EE C9          1354*      ret
0406EF 17 1B 0E    1355*  @cmd: db 23,27,14
0406F2 00 00       1356*  @dx:  dw 0x0000
0406F4 00 00       1357*  @dy:  dw 0x0000
0406F6 00          1358*  @end: db 0x00 ; padding
0406F7             1359*  
0406F7             1360*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
0406F7             1361*  ; USING 16.8 FIXED POINT COORDINATES
0406F7             1362*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
0406F7             1363*  ;   the fractional portiion of the inputs are truncated
0406F7             1364*  ;   leaving only the 16-bit integer portion
0406F7             1365*  ; prerequisites: vdu_sprite_select
0406F7             1366*  vdu_sprite_move_abs168:
0406F7             1367*  ; populate in the reverse of normal to keep the
0406F7             1368*  ; inputs from stomping on each other
0406F7 ED 53 16 07 1369*      ld (@ypos-1),de
       04          
0406FC ED 43 14 07 1370*      ld (@xpos-1),bc
       04          
040701 3E 0D       1371*      ld a,13       ; restore the final byte of the command
040703 32 14 07 04 1372*      ld (@cmd+2),a ; string that got stomped on by bcu
040707 21 12 07 04 1373*      ld hl,@cmd
04070B 01 07 00 00 1374*      ld bc,@end-@cmd
04070F 5B DF       1375*      rst.lil $18
040711 C9          1376*      ret
040712 17 1B 0D    1377*  @cmd:  db 23,27,13
040715 00 00       1378*  @xpos: dw 0x0000
040717 00 00       1379*  @ypos: dw 0x0000
040719             1380*  @end:  ; no padding required b/c we shifted de right
040719             1381*  
040719             1382*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
040719             1383*  ; USING 16.8 FIXED POINT COORDINATES
040719             1384*  ; inputs: ub.c is dx, ud.e is dy
040719             1385*  ;   the fractional portiion of the inputs are truncated
040719             1386*  ;   leaving only the 16-bit integer portion
040719             1387*  ; prerequisites: vdu_sprite_select
040719             1388*  vdu_sprite_move_rel168:
040719             1389*  ; populate in the reverse of normal to keep the
040719             1390*  ; inputs from stomping on each other
040719 ED 53 38 07 1391*      ld (@dy-1),de
       04          
04071E ED 43 36 07 1392*      ld (@dx-1),bc
       04          
040723 3E 0E       1393*      ld a,14       ; restore the final byte of the command
040725 32 36 07 04 1394*      ld (@cmd+2),a ; string that got stomped on by bcu
040729 21 34 07 04 1395*      ld hl,@cmd
04072D 01 07 00 00 1396*      ld bc,@end-@cmd
040731 5B DF       1397*      rst.lil $18
040733 C9          1398*      ret
040734 17 1B 0E    1399*  @cmd:  db 23,27,14
040737 00 00       1400*  @dx: dw 0x0000
040739 00 00       1401*  @dy: dw 0x0000
04073B             1402*  @end:  ; no padding required b/c we shifted de right
04073B             1403*  
04073B             1404*  ; VDU 23, 27, 15: Update the sprites in the GPU
04073B             1405*  ; inputs: none
04073B             1406*  vdu_sprite_update:
04073B 21 46 07 04 1407*      ld hl,@cmd
04073F 01 03 00 00 1408*      ld bc,@end-@cmd
040743 5B DF       1409*      rst.lil $18
040745 C9          1410*      ret
040746 17 1B 0F    1411*  @cmd: db 23,27,15
040749             1412*  @end:
040749             1413*  
040749             1414*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
040749             1415*  ; inputs: none
040749             1416*  vdu_sprite_bmp_reset:
040749 21 54 07 04 1417*      ld hl,@cmd
04074D 01 03 00 00 1418*      ld bc,@end-@cmd
040751 5B DF       1419*      rst.lil $18
040753 C9          1420*      ret
040754 17 1B 10    1421*  @cmd: db 23,27,16
040757             1422*  @end:
040757             1423*  
040757             1424*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
040757             1425*  ; inputs: none
040757             1426*  vdu_sprite_reset:
040757 21 62 07 04 1427*      ld hl,@cmd
04075B 01 03 00 00 1428*      ld bc,@end-@cmd
04075F 5B DF       1429*      rst.lil $18
040761 C9          1430*      ret
040762 17 1B 11    1431*  @cmd: db 23,27,17
040765             1432*  @end:
040765             1433*  
040765             1434*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
040765             1435*  ; inputs: a is the GCOL paint mode
040765             1436*  ; prerequisites: vdu_sprite_select
040765             1437*  vdu_sprite_set_gcol:
040765 32 77 07 04 1438*      ld (@mode),a
040769 21 74 07 04 1439*      ld hl,@cmd
04076D 01 04 00 00 1440*      ld bc,@end-@cmd
040771 5B DF       1441*      rst.lil $18
040773 C9          1442*      ret
040774 17 1B 12    1443*  @cmd:  db 23,27,18
040777 00          1444*  @mode: db 0x00
040778             1445*  @end:
040778             1446*  
040778             1447*  ; VDU 23, 27, &26, n;: Add bitmap bufferId
040778             1448*  ;     as a frame to current sprite using a 16-bit buffer ID
040778             1449*  ; inputs: hl=bufferId
040778             1450*  ; prerequisites: vdu_sprite_select
040778             1451*  vdu_sprite_add_buff:
040778 22 8A 07 04 1452*      ld (@bufferId),hl
04077C 21 87 07 04 1453*      ld hl,@cmd
040780 01 05 00 00 1454*      ld bc,@end-@cmd
040784 5B DF       1455*      rst.lil $18
040786 C9          1456*      ret
040787 17 1B 26    1457*  @cmd:      db 23,27,0x26
04078A 00 00       1458*  @bufferId: dw 0x0000
04078C 00          1459*  @end:      db 0x00 ; padding
04078D             1460*  
04078D             1461*  
04078D             1462*  ; #### from sfx.asm ####
04078D 00          1463*  sfx_last_channel: db 0x00 ; 8-bit value between 0 and 31
04078E             1464*  
04078E             1465*  vdu_clear_all_buffers:
04078E             1466*  ; clear all buffers
04078E 21 99 07 04 1467*      ld hl,@beg
040792 01 06 00 00 1468*      ld bc,@end-@beg
040796 5B DF       1469*      rst.lil $18
040798 C9          1470*      ret
040799 17 00 A0    1471*  @beg: db 23,0,$A0
04079C FF FF       1472*        dw -1 ; clear all buffers
04079E 02          1473*        db 2  ; command 2: clear a buffer
04079F             1474*  @end:
04079F             0015       include "ez80/app/src/asm/vdu_pingo.asm"
04079F             0001*  ; sid: equ -2
04079F             0002*  
04079F             0003*  ; Create Control Structure
04079F             0004*  ; VDU 23, 0, &A0, sid; &48, 0, w; h; : Create Control Structure
04079F             0005*  ; This command initializes a control structure used to do 3D rendering. The structure is housed inside the designated buffer. The buffer referred to by the scene ID (sid) is created, if it does not already exist.
04079F             0006*  ; The given width and height determine the size of the final rendered scene.
04079F             0007*  ; inputs: bc = w; de = h;
04079F             0008*  vdu_3d_crt_ctl_str:
04079F ED 43 BB 07 0009*      ld (@w),bc
       04          
0407A4 ED 53 BD 07 0010*      ld (@h),de
       04          
0407A9 21 B4 07 04 0011*      ld hl,@beg
0407AD 01 0B 00 00 0012*      ld bc,@end-@beg
0407B1 5B DF       0013*      rst.lil $18
0407B3 C9          0014*      ret
0407B4 17 00 A0    0015*  @beg: db 23, 0, $A0
0407B7 64 00       0016*  @sid: dw sid
0407B9 48 00       0017*  @cmd: db $48, 0 ; command 0: create control structure
0407BB 00 00       0018*  @w:   dw 0x0000
0407BD 00 00       0019*  @h:   dw 0x0000
0407BF 00          0020*  @end: db 0x00 ; padding
0407C0             0021*  
0407C0             0022*  ; Define Mesh Vertices
0407C0             0023*  ; VDU 23, 0, &A0, sid; &48, 1, mid; n; x0; y0; z0; ... : Define Mesh Vertices
0407C0             0024*  ; This command establishes the list of mesh coordinates to be used to define a surface structure. The mesh may be referenced by multiple objects.
0407C0             0025*  ; The "n" parameter is the number of vertices, so the total number of coordinates specified equals n*3.
0407C0             0026*  ; inputs: hl = mid; bc = n; de = pointer to list of coordinates
0407C0             0027*  vdu_3d_def_msh_verts:
0407C0 C5          0028*      push bc ; save n
0407C1 22 E6 07 04 0029*      ld (@mid),hl
0407C5 ED 43 CE 0C 0030*      ld (@n),bc
       04          
0407CA 21 DF 07 04 0031*      ld hl,@beg
0407CE 01 0B 00 00 0032*      ld bc,@end-@beg
0407D2 5B DF       0033*      rst.lil $18
0407D4 E1          0034*      pop hl ; restore n
0407D5 E5          0035*      push hl ; save n
0407D6 29          0036*      add hl,hl ; n*2
0407D7 C1          0037*      pop bc ; restore n
0407D8 09          0038*      add hl,bc ; n*2+n = n*3 = total number of bytes in list of coordinates
0407D9 44          0039*      ld b,h
0407DA 4D          0040*      ld c,l ; bc = number of bytes
0407DB EB          0041*      ex de,hl ; hl is pointer to list of coordinates
0407DC 5B DF       0042*      rst.lil $18
0407DE C9          0043*      ret
0407DF 17 00 A0    0044*  @beg: db 23, 0, $A0
0407E2 64 00       0045*  @sid: dw sid
0407E4 48 01       0046*  @cmd: db $48, 1 ; command 1: define mesh vertices
0407E6 00 00       0047*  @mid: dw 0x0000
0407E8 00 00       0048*  @n:   dw 0x0000
0407EA 00          0049*  @end: db 0x00 ; padding
0407EB             0050*  
0407EB             0051*  ; Set Mesh Vertex Indexes
0407EB             0052*  ; VDU 23, 0, &A0, sid; &48, 2, mid; n; i0; ... : Set Mesh Vertex Indexes
0407EB             0053*  ; This command lists the indexes of the vertices that define a 3D mesh.
0407EB             0054*  ; Individual vertices are often referenced multiple times within a mesh, because they are often part of multiple surface triangles.
0407EB             0055*  ; Each index value ranges from 0 to the number of defined mesh vertices.
0407EB             0056*  ; The "n" parameter is the number of indexes, and must match the "n" in subcommand 4 (Set Texture Coordinate Indexes).
0407EB             0057*  ; inputs: hl = mid; bc = n; de = pointer to list of indexes
0407EB             0058*  vdu_3d_set_msh_vert_idxs:
0407EB C5          0059*      push bc ; save n
0407EC 22 0B 08 04 0060*      ld (@mid),hl
0407F0 ED 43 CE 0C 0061*      ld (@n),bc
       04          
0407F5 21 04 08 04 0062*      ld hl,@beg
0407F9 01 0B 00 00 0063*      ld bc,@end-@beg
0407FD 5B DF       0064*      rst.lil $18
0407FF C1          0065*      pop bc ; restore n
040800 EB          0066*      ex de,hl ; hl is pointer to list of indexes
040801 5B DF       0067*      rst.lil $18
040803 C9          0068*      ret
040804 17 00 A0    0069*  @beg: db 23, 0, $A0
040807 64 00       0070*  @sid: dw sid
040809 48 02       0071*  @cmd: db $48, 2 ; command 2: set mesh vertex indexes
04080B 00 00       0072*  @mid: dw 0x0000
04080D 00 00       0073*  @n:   dw 0x0000
04080F 00          0074*  @end: db 0x00 ; padding
040810             0075*  
040810             0076*  ; Define Texture Coordinates
040810             0077*  ; VDU 23, 0, &A0, sid; &48, 3, mid; n; u0; v0; ... : Define Texture Coordinates
040810             0078*  ; This command establishes the list of U/V texture coordinates that define texturing for a mesh.
040810             0079*  ; The "n" parameter is the number of coordinate pairs, so the total number of coordinates specified equals n*2.
040810             0080*  ; inputs: hl = mid; bc = n; de = pointer to list of coordinates
040810             0081*  vdu_3d_def_tex_coords:
040810 C5          0082*      push bc ; save n
040811 22 33 08 04 0083*      ld (@mid),hl
040815 ED 43 CE 0C 0084*      ld (@n),bc
       04          
04081A 21 2C 08 04 0085*      ld hl,@beg
04081E 01 0B 00 00 0086*      ld bc,@end-@beg
040822 5B DF       0087*      rst.lil $18
040824 E1          0088*      pop hl ; restore n
040825 29          0089*      add hl,hl ; n*2
040826 44          0090*      ld b,h
040827 4D          0091*      ld c,l ; bc = number of bytes
040828 EB          0092*      ex de,hl ; hl is pointer to list of coordinates
040829 5B DF       0093*      rst.lil $18
04082B C9          0094*      ret
04082C 17 00 A0    0095*  @beg: db 23, 0, $A0
04082F 64 00       0096*  @sid: dw sid
040831 48 03       0097*  @cmd: db $48, 3 ; command 3: define texture coordinates
040833 00 00       0098*  @mid: dw 0x0000
040835 00 00       0099*  @n:   dw 0x0000
040837 00          0100*  @end: db 0x00 ; padding
040838             0101*  
040838             0102*  ; Set Texture Coordinate Indexes
040838             0103*  ; VDU 23, 0, &A0, sid; &48, 4, mid; n; i0; ... : Set Texture Coordinate Indexes
040838             0104*  ; This command lists the indexes of the coordinates that define a 3D texture for a mesh. Individual coordinates may be referenced multiple times within a texture, but that is not required.
040838             0105*  ; The number of indexes passed in this command must match the number of mesh indexes defining the mesh.
040838             0106*  ; Thus, each mesh vertex has texture coordinates associated with it.
040838             0107*  ; The "n" parameter is the number of indexes, and must match the "n" in subcommand 2 (Set Mesh Vertex Indexes).
040838             0108*  ; inputs: hl = mid; bc = n; de = pointer to list of indexes
040838             0109*  vdu_3d_set_tex_coord_idxs:
040838 C5          0110*      push bc ; save n
040839 22 58 08 04 0111*      ld (@mid),hl
04083D ED 43 CE 0C 0112*      ld (@n),bc
       04          
040842 21 51 08 04 0113*      ld hl,@beg
040846 01 0B 00 00 0114*      ld bc,@end-@beg
04084A 5B DF       0115*      rst.lil $18
04084C C1          0116*      pop bc ; restore n
04084D EB          0117*      ex de,hl ; hl is pointer to list of indexes
04084E 5B DF       0118*      rst.lil $18
040850 C9          0119*      ret
040851 17 00 A0    0120*  @beg: db 23, 0, $A0
040854 64 00       0121*  @sid: dw sid
040856 48 04       0122*  @cmd: db $48, 4 ; command 4: set texture coordinate indexes
040858 00 00       0123*  @mid: dw 0x0000
04085A 00 00       0124*  @n:   dw 0x0000
04085C 00          0125*  @end: db 0x00 ; padding
04085D             0126*  
04085D             0127*  ; Define Object
04085D             0128*  ; VDU 23, 0, &A0, sid; &48, 5, oid; mid; bmid; : Create Object
04085D             0129*  ; This command defines a renderable object in terms of its already-defined mesh, plus a reference to an existing bitmap that provides its coloring, via the texture coordinates used by the mesh.
04085D             0130*  ; The same mesh can be used multiple times, with the same or different bitmaps for coloring. The bitmap must be in the RGBA8888 format (4 bytes per pixel).
04085D             0131*  ; inputs: hl = oid; de = mid; bc = bmid;
04085D             0132*  vdu_3d_def_obj:
04085D 22 7D 08 04 0133*      ld (@oid),hl
040861 ED 53 7F 08 0134*      ld (@mid),de
       04          
040866 ED 43 81 08 0135*      ld (@bmid),bc
       04          
04086B 21 76 08 04 0136*      ld hl,@beg
04086F 01 0D 00 00 0137*      ld bc,@end-@beg
040873 5B DF       0138*      rst.lil $18
040875 C9          0139*      ret
040876 17 00 A0    0140*  @beg: db 23, 0, $A0
040879 64 00       0141*  @sid: dw sid
04087B 48 05       0142*  @cmd: db $48, 5 ; command 5: define object
04087D 00 00       0143*  @oid: dw 0x0000
04087F 00 00       0144*  @mid: dw 0x0000
040881 00 00       0145*  @bmid: dw 0x0000
040883 00          0146*  @end: db 0x00 ; padding
040884             0147*  
040884             0148*  ; Set Object X Scale Factor
040884             0149*  ; VDU 23, 0, &A0, sid; &48, 6, oid; scalex; : Set Object X Scale Factor
040884             0150*  ; This command sets the X scale factor for an object.
040884             0151*  ; inputs: hl = oid; bc = scalex;
040884             0152*  vdu_3d_set_obj_x_scl:
040884 22 9F 08 04 0153*      ld (@oid),hl
040888 ED 43 A1 08 0154*      ld (@scalex),bc
       04          
04088D 21 98 08 04 0155*      ld hl,@beg
040891 01 0B 00 00 0156*      ld bc,@end-@beg
040895 5B DF       0157*      rst.lil $18
040897 C9          0158*      ret
040898 17 00 A0    0159*  @beg: db 23, 0, $A0
04089B 64 00       0160*  @sid: dw sid
04089D 48 06       0161*  @cmd: db $48, 6 ; command 6: set object x scale factor
04089F 00 00       0162*  @oid: dw 0x0000
0408A1 00 00       0163*  @scalex: dw 0x0000
0408A3 00          0164*  @end: db 0x00 ; padding
0408A4             0165*  
0408A4             0166*  ; Set Object Y Scale Factor
0408A4             0167*  ; VDU 23, 0, &A0, sid; &48, 7, oid; scaley; : Set Object Y Scale Factor
0408A4             0168*  ; This command sets the Y scale factor for an object.
0408A4             0169*  ; inputs: hl = oid; bc = scaley;
0408A4             0170*  vdu_3d_set_obj_y_scl:
0408A4 22 BF 08 04 0171*      ld (@oid),hl
0408A8 ED 43 C1 08 0172*      ld (@scaley),bc
       04          
0408AD 21 B8 08 04 0173*      ld hl,@beg
0408B1 01 0B 00 00 0174*      ld bc,@end-@beg
0408B5 5B DF       0175*      rst.lil $18
0408B7 C9          0176*      ret
0408B8 17 00 A0    0177*  @beg: db 23, 0, $A0
0408BB 64 00       0178*  @sid: dw sid
0408BD 48 07       0179*  @cmd: db $48, 7 ; command 7: set object y scale factor
0408BF 00 00       0180*  @oid: dw 0x0000
0408C1 00 00       0181*  @scaley: dw 0x0000
0408C3 00          0182*  @end: db 0x00 ; padding
0408C4             0183*  
0408C4             0184*  ; Set Object Z Scale Factor
0408C4             0185*  ; VDU 23, 0, &A0, sid; &48, 8, oid; scalez; : Set Object Z Scale Factor
0408C4             0186*  ; This command sets the Z scale factor for an object.
0408C4             0187*  ; inputs: hl = oid; bc = scalez;
0408C4             0188*  vdu_3d_set_obj_z_scl:
0408C4 22 DF 08 04 0189*      ld (@oid),hl
0408C8 ED 43 E1 08 0190*      ld (@scalez),bc
       04          
0408CD 21 D8 08 04 0191*      ld hl,@beg
0408D1 01 0B 00 00 0192*      ld bc,@end-@beg
0408D5 5B DF       0193*      rst.lil $18
0408D7 C9          0194*      ret
0408D8 17 00 A0    0195*  @beg: db 23, 0, $A0
0408DB 64 00       0196*  @sid: dw sid
0408DD 48 08       0197*  @cmd: db $48, 8 ; command 8: set object z scale factor
0408DF 00 00       0198*  @oid: dw 0x0000
0408E1 00 00       0199*  @scalez: dw 0x0000
0408E3 00          0200*  @end: db 0x00 ; padding
0408E4             0201*  
0408E4             0202*  ; Set Object XYZ Scale Factors
0408E4             0203*  ; VDU 23, 0, &A0, sid; &48, 9, oid; scalex; scaley; scalez; : Set Object XYZ Scale Factors
0408E4             0204*  ; This command sets the X, Y, and Z scale factors for an object.
0408E4             0205*  ; inputs: hl = oid; ix = scalex; iy = scaley; bc = scalez;
0408E4             0206*  vdu_3d_set_obj_xyz_scl:
0408E4 22 09 09 04 0207*      ld (@oid),hl
0408E8 DD 22 0B 09 0208*      ld (@scalex),ix
       04          
0408ED FD 22 0D 09 0209*      ld (@scaley),iy
       04          
0408F2 ED 43 0F 09 0210*      ld (@scalez),bc
       04          
0408F7 21 02 09 04 0211*      ld hl,@beg
0408FB 01 0F 00 00 0212*      ld bc,@end-@beg
0408FF 5B DF       0213*      rst.lil $18
040901 C9          0214*      ret
040902 17 00 A0    0215*  @beg: db 23, 0, $A0
040905 64 00       0216*  @sid: dw sid
040907 48 09       0217*  @cmd: db $48, 9 ; command 9: set object xyz scale factors
040909 00 00       0218*  @oid: dw 0x0000
04090B 00 00       0219*  @scalex: dw 0x0000
04090D 00 00       0220*  @scaley: dw 0x0000
04090F 00 00       0221*  @scalez: dw 0x0000
040911 00          0222*  @end: db 0x00 ; padding
040912             0223*  
040912             0224*  ; Set Object X Rotation Angle
040912             0225*  ; VDU 23, 0, &A0, sid; &48, 10, oid; anglex; : Set Object X Rotation Angle
040912             0226*  ; This command sets the X rotation angle for an object.
040912             0227*  ; inputs: hl = oid; bc = anglex;
040912             0228*  vdu_3d_set_obj_x_rot:
040912 22 2D 09 04 0229*      ld (@oid),hl
040916 ED 43 2F 09 0230*      ld (@anglex),bc
       04          
04091B 21 26 09 04 0231*      ld hl,@beg
04091F 01 0B 00 00 0232*      ld bc,@end-@beg
040923 5B DF       0233*      rst.lil $18
040925 C9          0234*      ret
040926 17 00 A0    0235*  @beg: db 23, 0, $A0
040929 64 00       0236*  @sid: dw sid
04092B 48 0A       0237*  @cmd: db $48, 10 ; command 10: set object x rotation angle
04092D 00 00       0238*  @oid: dw 0x0000
04092F 00 00       0239*  @anglex: dw 0x0000
040931 00          0240*  @end: db 0x00 ; padding
040932             0241*  
040932             0242*  ; Set Object Y Rotation Angle
040932             0243*  ; VDU 23, 0, &A0, sid; &48, 11, oid; angley; : Set Object Y Rotation Angle
040932             0244*  ; This command sets the Y rotation angle for an object.
040932             0245*  ; inputs: hl = oid; bc = angley;
040932             0246*  vdu_3d_set_obj_y_rot:
040932 22 4D 09 04 0247*      ld (@oid),hl
040936 ED 43 4F 09 0248*      ld (@angley),bc
       04          
04093B 21 46 09 04 0249*      ld hl,@beg
04093F 01 0B 00 00 0250*      ld bc,@end-@beg
040943 5B DF       0251*      rst.lil $18
040945 C9          0252*      ret
040946 17 00 A0    0253*  @beg: db 23, 0, $A0
040949 64 00       0254*  @sid: dw sid
04094B 48 0B       0255*  @cmd: db $48, 11 ; command 11: set object y rotation angle
04094D 00 00       0256*  @oid: dw 0x0000
04094F 00 00       0257*  @angley: dw 0x0000
040951 00          0258*  @end: db 0x00 ; padding
040952             0259*  
040952             0260*  ; Set Object Z Rotation Angle
040952             0261*  ; VDU 23, 0, &A0, sid; &48, 12, oid; anglez; : Set Object Z Rotation Angle
040952             0262*  ; This command sets the Z rotation angle for an object.
040952             0263*  ; inputs: hl = oid; bc = anglez;
040952             0264*  vdu_3d_set_obj_z_rot:
040952 22 6D 09 04 0265*      ld (@oid),hl
040956 ED 43 6F 09 0266*      ld (@anglez),bc
       04          
04095B 21 66 09 04 0267*      ld hl,@beg
04095F 01 0B 00 00 0268*      ld bc,@end-@beg
040963 5B DF       0269*      rst.lil $18
040965 C9          0270*      ret
040966 17 00 A0    0271*  @beg: db 23, 0, $A0
040969 64 00       0272*  @sid: dw sid
04096B 48 0C       0273*  @cmd: db $48, 12 ; command 12: set object z rotation angle
04096D 00 00       0274*  @oid: dw 0x0000
04096F 00 00       0275*  @anglez: dw 0x0000
040971 00          0276*  @end: db 0x00 ; padding
040972             0277*  
040972             0278*  ; Set Object XYZ Rotation Angles
040972             0279*  ; VDU 23, 0, &A0, sid; &48, 13, oid; anglex; angley; anglez; : Set Object XYZ Rotation Angles
040972             0280*  ; This command sets the X, Y, and Z rotation angles for an object.
040972             0281*  ; inputs: hl = oid; ix = anglex; iy = angley; bc = anglez;
040972             0282*  vdu_3d_set_obj_xyz_rot:
040972 22 97 09 04 0283*      ld (@oid),hl
040976 DD 22 99 09 0284*      ld (@anglex),ix
       04          
04097B FD 22 9B 09 0285*      ld (@angley),iy
       04          
040980 ED 43 9D 09 0286*      ld (@anglez),bc
       04          
040985 21 90 09 04 0287*      ld hl,@beg
040989 01 0F 00 00 0288*      ld bc,@end-@beg
04098D 5B DF       0289*      rst.lil $18
04098F C9          0290*      ret
040990 17 00 A0    0291*  @beg: db 23, 0, $A0
040993 64 00       0292*  @sid: dw sid
040995 48 0D       0293*  @cmd: db $48, 13 ; command 13: set object xyz rotation angles
040997 00 00       0294*  @oid: dw 0x0000
040999 00 00       0295*  @anglex: dw 0x0000
04099B 00 00       0296*  @angley: dw 0x0000
04099D 00 00       0297*  @anglez: dw 0x0000
04099F 00          0298*  @end: db 0x00 ; padding
0409A0             0299*  
0409A0             0300*  ; Set Object X Translation Distance
0409A0             0301*  ; VDU 23, 0, &A0, sid; &48, 14, oid; distx; : Set Object X Translation Distance
0409A0             0302*  ; This command sets the X translation distance for an object. Note that 3D translation of an object is independent of 2D translation of the the rendered bitmap.
0409A0             0303*  ; inputs: hl = oid; bc = distx;
0409A0             0304*  vdu_3d_set_obj_x_trans:
0409A0 22 BB 09 04 0305*      ld (@oid),hl
0409A4 ED 43 BD 09 0306*      ld (@distx),bc
       04          
0409A9 21 B4 09 04 0307*      ld hl,@beg
0409AD 01 0B 00 00 0308*      ld bc,@end-@beg
0409B1 5B DF       0309*      rst.lil $18
0409B3 C9          0310*      ret
0409B4 17 00 A0    0311*  @beg: db 23, 0, $A0
0409B7 64 00       0312*  @sid: dw sid
0409B9 48 0E       0313*  @cmd: db $48, 14 ; command 14: set object x translation distance
0409BB 00 00       0314*  @oid: dw 0x0000
0409BD 00 00       0315*  @distx: dw 0x0000
0409BF 00          0316*  @end: db 0x00 ; padding
0409C0             0317*  
0409C0             0318*  ; Set Object Y Translation Distance
0409C0             0319*  ; VDU 23, 0, &A0, sid; &48, 15, oid; disty; : Set Object Y Translation Distance
0409C0             0320*  ; This command sets the Y translation distance for an object. Note that 3D translation of an object is independent of 2D translation of the the rendered bitmap.
0409C0             0321*  ; inputs: hl = oid; bc = disty;
0409C0             0322*  vdu_3d_set_obj_y_trans:
0409C0 22 DB 09 04 0323*      ld (@oid),hl
0409C4 ED 43 DD 09 0324*      ld (@disty),bc
       04          
0409C9 21 D4 09 04 0325*      ld hl,@beg
0409CD 01 0B 00 00 0326*      ld bc,@end-@beg
0409D1 5B DF       0327*      rst.lil $18
0409D3 C9          0328*      ret
0409D4 17 00 A0    0329*  @beg: db 23, 0, $A0
0409D7 64 00       0330*  @sid: dw sid
0409D9 48 0F       0331*  @cmd: db $48, 15 ; command 15: set object y translation distance
0409DB 00 00       0332*  @oid: dw 0x0000
0409DD 00 00       0333*  @disty: dw 0x0000
0409DF 00          0334*  @end: db 0x00 ; padding
0409E0             0335*  
0409E0             0336*  ; Set Object Z Translation Distance
0409E0             0337*  ; VDU 23, 0, &A0, sid; &48, 16, oid; distz; : Set Object Z Translation Distance
0409E0             0338*  ; This command sets the Z translation distance for an object. Note that 3D translation of an object is independent of 2D translation of the the rendered bitmap.
0409E0             0339*  ; inputs: hl = oid; bc = distz;
0409E0             0340*  vdu_3d_set_obj_z_trans:
0409E0 22 FB 09 04 0341*      ld (@oid),hl
0409E4 ED 43 FD 09 0342*      ld (@distz),bc
       04          
0409E9 21 F4 09 04 0343*      ld hl,@beg
0409ED 01 0B 00 00 0344*      ld bc,@end-@beg
0409F1 5B DF       0345*      rst.lil $18
0409F3 C9          0346*      ret
0409F4 17 00 A0    0347*  @beg: db 23, 0, $A0
0409F7 64 00       0348*  @sid: dw sid
0409F9 48 10       0349*  @cmd: db $48, 16 ; command 16: set object z translation distance
0409FB 00 00       0350*  @oid: dw 0x0000
0409FD 00 00       0351*  @distz: dw 0x0000
0409FF 00          0352*  @end: db 0x00 ; padding
040A00             0353*  
040A00             0354*  ; Set Object XYZ Translation Distances
040A00             0355*  ; VDU 23, 0, &A0, sid; &48, 17, oid; distx; disty; distz; : Set Object XYZ Translation Distances
040A00             0356*  ; This command sets the X, Y, and Z translation distances for an object. Note that 3D translation of an object is independent of 2D translation of the the rendered bitmap.
040A00             0357*  ; inputs: hl = oid; ix = distx; iy = disty; bc = distz;
040A00             0358*  vdu_3d_set_obj_xyz_trans:
040A00 22 25 0A 04 0359*      ld (@oid),hl
040A04 DD 22 27 0A 0360*      ld (@distx),ix
       04          
040A09 FD 22 29 0A 0361*      ld (@disty),iy
       04          
040A0E ED 43 2B 0A 0362*      ld (@distz),bc
       04          
040A13 21 1E 0A 04 0363*      ld hl,@beg
040A17 01 0F 00 00 0364*      ld bc,@end-@beg
040A1B 5B DF       0365*      rst.lil $18
040A1D C9          0366*      ret
040A1E 17 00 A0    0367*  @beg: db 23, 0, $A0
040A21 64 00       0368*  @sid: dw sid
040A23 48 11       0369*  @cmd: db $48, 17 ; command 17: set object xyz translation distances
040A25 00 00       0370*  @oid: dw 0x0000
040A27 00 00       0371*  @distx: dw 0x0000
040A29 00 00       0372*  @disty: dw 0x0000
040A2B 00 00       0373*  @distz: dw 0x0000
040A2D 00          0374*  @end: db 0x00 ; padding
040A2E             0375*  
040A2E             0376*  ; Set Camera X Rotation Angle
040A2E             0377*  ; VDU 23, 0, &A0, sid; &48, 18, anglex; : Set Camera X Rotation Angle
040A2E             0378*  ; This command sets the X rotation angle for the camera.
040A2E             0379*  ; inputs: hl = anglex;
040A2E             0380*  vdu_3d_set_cam_x_rot:
040A2E 22 44 0A 04 0381*      ld (@anglex),hl
040A32 21 3D 0A 04 0382*      ld hl,@beg
040A36 01 09 00 00 0383*      ld bc,@end-@beg
040A3A 5B DF       0384*      rst.lil $18
040A3C C9          0385*      ret
040A3D 17 00 A0    0386*  @beg: db 23, 0, $A0
040A40 64 00       0387*  @sid: dw sid
040A42 48 12       0388*  @cmd: db $48, 18 ; command 18: set camera x rotation angle
040A44 00 00       0389*  @anglex: dw 0x0000
040A46 00          0390*  @end: db 0x00 ; padding
040A47             0391*  
040A47             0392*  ; Set Camera Y Rotation Angle
040A47             0393*  ; VDU 23, 0, &A0, sid; &48, 19, angley; : Set Camera Y Rotation Angle
040A47             0394*  ; This command sets the Y rotation angle for the camera.
040A47             0395*  ; inputs: hl = angley;
040A47             0396*  vdu_3d_set_cam_y_rot:
040A47 22 5D 0A 04 0397*      ld (@angley),hl
040A4B 21 56 0A 04 0398*      ld hl,@beg
040A4F 01 09 00 00 0399*      ld bc,@end-@beg
040A53 5B DF       0400*      rst.lil $18
040A55 C9          0401*      ret
040A56 17 00 A0    0402*  @beg: db 23, 0, $A0
040A59 64 00       0403*  @sid: dw sid
040A5B 48 13       0404*  @cmd: db $48, 19 ; command 19: set camera y rotation angle
040A5D 00 00       0405*  @angley: dw 0x0000
040A5F 00          0406*  @end: db 0x00 ; padding
040A60             0407*  
040A60             0408*  ; Set Camera Z Rotation Angle
040A60             0409*  ; VDU 23, 0, &A0, sid; &48, 20, anglez; : Set Camera Z Rotation Angle
040A60             0410*  ; This command sets the Z rotation angle for the camera.
040A60             0411*  ; inputs: hl = anglez;
040A60             0412*  vdu_3d_set_cam_z_rot:
040A60 22 76 0A 04 0413*      ld (@anglez),hl
040A64 21 6F 0A 04 0414*      ld hl,@beg
040A68 01 09 00 00 0415*      ld bc,@end-@beg
040A6C 5B DF       0416*      rst.lil $18
040A6E C9          0417*      ret
040A6F 17 00 A0    0418*  @beg: db 23, 0, $A0
040A72 64 00       0419*  @sid: dw sid
040A74 48 14       0420*  @cmd: db $48, 20 ; command 20: set camera z rotation angle
040A76 00 00       0421*  @anglez: dw 0x0000
040A78 00          0422*  @end: db 0x00 ; padding
040A79             0423*  
040A79             0424*  ; Set Camera XYZ Rotation Angles
040A79             0425*  ; VDU 23, 0, &A0, sid; &48, 21, anglex; angley; anglez; : Set Camera XYZ Rotation Angles
040A79             0426*  ; This command sets the X, Y, and Z rotation angles for the camera.
040A79             0427*  ; inputs: ix = anglex; iy = angley; hl = anglez;
040A79             0428*  vdu_3d_set_cam_xyz_rot:
040A79 DD 22 99 0A 0429*      ld (@anglex),ix
       04          
040A7E FD 22 9B 0A 0430*      ld (@angley),iy
       04          
040A83 22 9D 0A 04 0431*      ld (@anglez),hl
040A87 21 92 0A 04 0432*      ld hl,@beg
040A8B 01 0D 00 00 0433*      ld bc,@end-@beg
040A8F 5B DF       0434*      rst.lil $18
040A91 C9          0435*      ret
040A92 17 00 A0    0436*  @beg: db 23, 0, $A0
040A95 64 00       0437*  @sid: dw sid
040A97 48 15       0438*  @cmd: db $48, 21 ; command 21: set camera xyz rotation angles
040A99 00 00       0439*  @anglex: dw 0x0000
040A9B 00 00       0440*  @angley: dw 0x0000
040A9D 00 00       0441*  @anglez: dw 0x0000
040A9F 00          0442*  @end: db 0x00 ; padding
040AA0             0443*  
040AA0             0444*  ; Set Camera X Translation Distance
040AA0             0445*  ; VDU 23, 0, &A0, sid; &48, 22, distx; : Set Camera X Translation Distance
040AA0             0446*  ; This command sets the X translation distance for the camera. Note that 3D translation of the camera is independent of 2D translation of the the rendered bitmap.
040AA0             0447*  ; inputs: hl = distx;
040AA0             0448*  vdu_3d_set_cam_x_trans:
040AA0 22 B6 0A 04 0449*      ld (@distx),hl
040AA4 21 AF 0A 04 0450*      ld hl,@beg
040AA8 01 09 00 00 0451*      ld bc,@end-@beg
040AAC 5B DF       0452*      rst.lil $18
040AAE C9          0453*      ret
040AAF 17 00 A0    0454*  @beg: db 23, 0, $A0
040AB2 64 00       0455*  @sid: dw sid
040AB4 48 16       0456*  @cmd: db $48, 22 ; command 22: set camera x translation distance
040AB6 00 00       0457*  @distx: dw 0x0000
040AB8 00          0458*  @end: db 0x00 ; padding
040AB9             0459*  
040AB9             0460*  ; Set Camera Y Translation Distance
040AB9             0461*  ; VDU 23, 0, &A0, sid; &48, 23, disty; : Set Camera Y Translation Distance
040AB9             0462*  ; This command sets the Y translation distance for the camera. Note that 3D translation of the camera is independent of 2D translation of the the rendered bitmap.
040AB9             0463*  ; inputs: hl = disty;
040AB9             0464*  vdu_3d_set_cam_y_trans:
040AB9 22 CF 0A 04 0465*      ld (@disty),hl
040ABD 21 C8 0A 04 0466*      ld hl,@beg
040AC1 01 09 00 00 0467*      ld bc,@end-@beg
040AC5 5B DF       0468*      rst.lil $18
040AC7 C9          0469*      ret
040AC8 17 00 A0    0470*  @beg: db 23, 0, $A0
040ACB 64 00       0471*  @sid: dw sid
040ACD 48 17       0472*  @cmd: db $48, 23 ; command 23: set camera y translation distance
040ACF 00 00       0473*  @disty: dw 0x0000
040AD1 00          0474*  @end: db 0x00 ; padding
040AD2             0475*  
040AD2             0476*  ; Set Camera Z Translation Distance
040AD2             0477*  ; VDU 23, 0, &A0, sid; &48, 24, distz; : Set Camera Z Translation Distance
040AD2             0478*  ; This command sets the Z translation distance for the camera. Note that 3D translation of the camera is independent of 2D translation of the the rendered bitmap.
040AD2             0479*  ; inputs: hl = distz;
040AD2             0480*  vdu_3d_set_cam_z_trans:
040AD2 22 E8 0A 04 0481*      ld (@distz),hl
040AD6 21 E1 0A 04 0482*      ld hl,@beg
040ADA 01 09 00 00 0483*      ld bc,@end-@beg
040ADE 5B DF       0484*      rst.lil $18
040AE0 C9          0485*      ret
040AE1 17 00 A0    0486*  @beg: db 23, 0, $A0
040AE4 64 00       0487*  @sid: dw sid
040AE6 48 18       0488*  @cmd: db $48, 24 ; command 24: set camera z translation distance
040AE8 00 00       0489*  @distz: dw 0x0000
040AEA 00          0490*  @end: db 0x00 ; padding
040AEB             0491*  
040AEB             0492*  ; Set Camera XYZ Translation Distances
040AEB             0493*  ; VDU 23, 0, &A0, sid; &48, 25, distx; disty; distz; : Set Camera XYZ Translation Distances
040AEB             0494*  ; This command sets the X, Y, and Z translation distances for the camera. Note that 3D translation of the camera is independent of 2D translation of the the rendered bitmap.
040AEB             0495*  ; inputs: ix = distx; iy = disty; hl = distz;
040AEB             0496*  vdu_3d_set_cam_xyz_trans:
040AEB DD 22 0B 0B 0497*      ld (@distx),ix
       04          
040AF0 FD 22 0D 0B 0498*      ld (@disty),iy
       04          
040AF5 22 0F 0B 04 0499*      ld (@distz),hl
040AF9 21 04 0B 04 0500*      ld hl,@beg
040AFD 01 0D 00 00 0501*      ld bc,@end-@beg
040B01 5B DF       0502*      rst.lil $18
040B03 C9          0503*      ret
040B04 17 00 A0    0504*  @beg: db 23, 0, $A0
040B07 64 00       0505*  @sid: dw sid
040B09 48 19       0506*  @cmd: db $48, 25 ; command 25: set camera xyz translation distances
040B0B 00 00       0507*  @distx: dw 0x0000
040B0D 00 00       0508*  @disty: dw 0x0000
040B0F 00 00       0509*  @distz: dw 0x0000
040B11 00          0510*  @end: db 0x00 ; padding
040B12             0511*  
040B12             0512*  ; Set Scene X Scale Factor
040B12             0513*  ; VDU 23, 0, &A0, sid; &48, 26, scalex; : Set Scene X Scale Factor
040B12             0514*  ; This command sets the X scale factor for the scene.
040B12             0515*  ; inputs: hl = scalex;
040B12             0516*  vdu_3d_set_scn_x_scl:
040B12 22 28 0B 04 0517*      ld (@scalex),hl
040B16 21 21 0B 04 0518*      ld hl,@beg
040B1A 01 09 00 00 0519*      ld bc,@end-@beg
040B1E 5B DF       0520*      rst.lil $18
040B20 C9          0521*      ret
040B21 17 00 A0    0522*  @beg: db 23, 0, $A0
040B24 64 00       0523*  @sid: dw sid
040B26 48 1A       0524*  @cmd: db $48, 26 ; command 26: set scene x scale factor
040B28 00 00       0525*  @scalex: dw 0x0000
040B2A 00          0526*  @end: db 0x00 ; padding
040B2B             0527*  
040B2B             0528*  ; Set Scene Y Scale Factor
040B2B             0529*  ; VDU 23, 0, &A0, sid; &48, 27, scaley; : Set Scene Y Scale Factor
040B2B             0530*  ; This command sets the Y scale factor for the scene.
040B2B             0531*  ; inputs: hl = scaley;
040B2B             0532*  vdu_3d_set_scn_y_scl:
040B2B 22 41 0B 04 0533*      ld (@scaley),hl
040B2F 21 3A 0B 04 0534*      ld hl,@beg
040B33 01 09 00 00 0535*      ld bc,@end-@beg
040B37 5B DF       0536*      rst.lil $18
040B39 C9          0537*      ret
040B3A 17 00 A0    0538*  @beg: db 23, 0, $A0
040B3D 64 00       0539*  @sid: dw sid
040B3F 48 1B       0540*  @cmd: db $48, 27 ; command 27: set scene y scale factor
040B41 00 00       0541*  @scaley: dw 0x0000
040B43 00          0542*  @end: db 0x00 ; padding
040B44             0543*  
040B44             0544*  ; Set Scene Z Scale Factor
040B44             0545*  ; VDU 23, 0, &A0, sid; &48, 28, scalez; : Set Scene Z Scale Factor
040B44             0546*  ; This command sets the Z scale factor for the scene.
040B44             0547*  ; inputs: hl = scalez;
040B44             0548*  vdu_3d_set_scn_z_scl:
040B44 22 5A 0B 04 0549*      ld (@scalez),hl
040B48 21 53 0B 04 0550*      ld hl,@beg
040B4C 01 09 00 00 0551*      ld bc,@end-@beg
040B50 5B DF       0552*      rst.lil $18
040B52 C9          0553*      ret
040B53 17 00 A0    0554*  @beg: db 23, 0, $A0
040B56 64 00       0555*  @sid: dw sid
040B58 48 1C       0556*  @cmd: db $48, 28 ; command 28: set scene z scale factor
040B5A 00 00       0557*  @scalez: dw 0x0000
040B5C 00          0558*  @end: db 0x00 ; padding
040B5D             0559*  
040B5D             0560*  ; Set Scene XYZ Scale Factors
040B5D             0561*  ; VDU 23, 0, &A0, sid; &48, 29, scalex; scaley; scalez; : Set Scene XYZ Scale Factors
040B5D             0562*  ; This command sets the X, Y, and Z scale factors for the scene.
040B5D             0563*  ; inputs: ix = scalex; iy = scaley; hl = scalez;
040B5D             0564*  vdu_3d_set_scn_xyz_scl:
040B5D DD 22 7D 0B 0565*      ld (@scalex),ix
       04          
040B62 FD 22 7F 0B 0566*      ld (@scaley),iy
       04          
040B67 22 81 0B 04 0567*      ld (@scalez),hl
040B6B 21 76 0B 04 0568*      ld hl,@beg
040B6F 01 0D 00 00 0569*      ld bc,@end-@beg
040B73 5B DF       0570*      rst.lil $18
040B75 C9          0571*      ret
040B76 17 00 A0    0572*  @beg: db 23, 0, $A0
040B79 64 00       0573*  @sid: dw sid
040B7B 48 1D       0574*  @cmd: db $48, 29 ; command 29: set scene xyz scale factors
040B7D 00 00       0575*  @scalex: dw 0x0000
040B7F 00 00       0576*  @scaley: dw 0x0000
040B81 00 00       0577*  @scalez: dw 0x0000
040B83 00          0578*  @end: db 0x00 ; padding
040B84             0579*  ; Set Scene X Rotation Angle
040B84             0580*  ; VDU 23, 0, &A0, sid; &48, 30, anglex; : Set Scene X Rotation Angle
040B84             0581*  ; This command sets the X rotation angle for the scene.
040B84             0582*  ; inputs: hl = anglex;
040B84             0583*  vdu_3d_set_scn_x_rot:
040B84 22 9A 0B 04 0584*      ld (@anglex),hl
040B88 21 93 0B 04 0585*      ld hl,@beg
040B8C 01 09 00 00 0586*      ld bc,@end-@beg
040B90 5B DF       0587*      rst.lil $18
040B92 C9          0588*      ret
040B93 17 00 A0    0589*  @beg: db 23, 0, $A0
040B96 64 00       0590*  @sid: dw sid
040B98 48 1E       0591*  @cmd: db $48, 30 ; command 30: set scene x rotation angle
040B9A 00 00       0592*  @anglex: dw 0x0000
040B9C 00          0593*  @end: db 0x00 ; padding
040B9D             0594*  
040B9D             0595*  ; Set Scene Y Rotation Angle
040B9D             0596*  ; VDU 23, 0, &A0, sid; &48, 31, angley; : Set Scene Y Rotation Angle
040B9D             0597*  ; This command sets the Y rotation angle for the scene.
040B9D             0598*  ; inputs: hl = angley;
040B9D             0599*  vdu_3d_set_scn_y_rot:
040B9D 22 B3 0B 04 0600*      ld (@angley),hl
040BA1 21 AC 0B 04 0601*      ld hl,@beg
040BA5 01 09 00 00 0602*      ld bc,@end-@beg
040BA9 5B DF       0603*      rst.lil $18
040BAB C9          0604*      ret
040BAC 17 00 A0    0605*  @beg: db 23, 0, $A0
040BAF 64 00       0606*  @sid: dw sid
040BB1 48 1F       0607*  @cmd: db $48, 31 ; command 31: set scene y rotation angle
040BB3 00 00       0608*  @angley: dw 0x0000
040BB5 00          0609*  @end: db 0x00 ; padding
040BB6             0610*  
040BB6             0611*  ; Set Scene Z Rotation Angle
040BB6             0612*  ; VDU 23, 0, &A0, sid; &48, 32, anglez; : Set Scene Z Rotation Angle
040BB6             0613*  ; This command sets the Z rotation angle for the scene.
040BB6             0614*  ; inputs: hl = anglez;
040BB6             0615*  vdu_3d_set_scn_z_rot:
040BB6 22 CC 0B 04 0616*      ld (@anglez),hl
040BBA 21 C5 0B 04 0617*      ld hl,@beg
040BBE 01 09 00 00 0618*      ld bc,@end-@beg
040BC2 5B DF       0619*      rst.lil $18
040BC4 C9          0620*      ret
040BC5 17 00 A0    0621*  @beg: db 23, 0, $A0
040BC8 64 00       0622*  @sid: dw sid
040BCA 48 20       0623*  @cmd: db $48, 32 ; command 32: set scene z rotation angle
040BCC 00 00       0624*  @anglez: dw 0x0000
040BCE 00          0625*  @end: db 0x00 ; padding
040BCF             0626*  
040BCF             0627*  ; Set Scene XYZ Rotation Angles
040BCF             0628*  ; VDU 23, 0, &A0, sid; &48, 33, anglex; angley; anglez; : Set Scene XYZ Rotation Angles
040BCF             0629*  ; This command sets the X, Y, and Z rotation angles for the scene.
040BCF             0630*  ; inputs: ix = anglex; iy = angley; hl = anglez;
040BCF             0631*  vdu_3d_set_scn_xyz_rot:
040BCF DD 22 EF 0B 0632*      ld (@anglex),ix
       04          
040BD4 FD 22 F1 0B 0633*      ld (@angley),iy
       04          
040BD9 22 F3 0B 04 0634*      ld (@anglez),hl
040BDD 21 E8 0B 04 0635*      ld hl,@beg
040BE1 01 0D 00 00 0636*      ld bc,@end-@beg
040BE5 5B DF       0637*      rst.lil $18
040BE7 C9          0638*      ret
040BE8 17 00 A0    0639*  @beg: db 23, 0, $A0
040BEB 64 00       0640*  @sid: dw sid
040BED 48 21       0641*  @cmd: db $48, 33 ; command 33: set scene xyz rotation angles
040BEF 00 00       0642*  @anglex: dw 0x0000
040BF1 00 00       0643*  @angley: dw 0x0000
040BF3 00 00       0644*  @anglez: dw 0x0000
040BF5 00          0645*  @end: db 0x00 ; padding
040BF6             0646*  ; Set Scene X Translation Distance
040BF6             0647*  ; VDU 23, 0, &A0, sid; &48, 34, distx; : Set Scene X Translation Distance
040BF6             0648*  ; This command sets the X translation distance for the scene. Note that 3D translation of the scene is independent of 2D translation of the the rendered bitmap.
040BF6             0649*  ; inputs: hl = distx;
040BF6             0650*  vdu_3d_set_scn_x_trans:
040BF6 22 0C 0C 04 0651*      ld (@distx),hl
040BFA 21 05 0C 04 0652*      ld hl,@beg
040BFE 01 09 00 00 0653*      ld bc,@end-@beg
040C02 5B DF       0654*      rst.lil $18
040C04 C9          0655*      ret
040C05 17 00 A0    0656*  @beg: db 23, 0, $A0
040C08 64 00       0657*  @sid: dw sid
040C0A 48 22       0658*  @cmd: db $48, 34 ; command 34: set scene x translation distance
040C0C 00 00       0659*  @distx: dw 0x0000
040C0E 00          0660*  @end: db 0x00 ; padding
040C0F             0661*  
040C0F             0662*  ; Set Scene Y Translation Distance
040C0F             0663*  ; VDU 23, 0, &A0, sid; &48, 35, disty; : Set Scene Y Translation Distance
040C0F             0664*  ; This command sets the Y translation distance for the scene. Note that 3D translation of the scene is independent of 2D translation of the the rendered bitmap.
040C0F             0665*  ; inputs: hl = disty;
040C0F             0666*  vdu_3d_set_scn_y_trans:
040C0F 22 25 0C 04 0667*      ld (@disty),hl
040C13 21 1E 0C 04 0668*      ld hl,@beg
040C17 01 09 00 00 0669*      ld bc,@end-@beg
040C1B 5B DF       0670*      rst.lil $18
040C1D C9          0671*      ret
040C1E 17 00 A0    0672*  @beg: db 23, 0, $A0
040C21 64 00       0673*  @sid: dw sid
040C23 48 23       0674*  @cmd: db $48, 35 ; command 35: set scene y translation distance
040C25 00 00       0675*  @disty: dw 0x0000
040C27 00          0676*  @end: db 0x00 ; padding
040C28             0677*  
040C28             0678*  ; Set Scene Z Translation Distance
040C28             0679*  ; VDU 23, 0, &A0, sid; &48, 36, distz; : Set Scene Z Translation Distance
040C28             0680*  ; This command sets the Z translation distance for the scene. Note that 3D translation of the scene is independent of 2D translation of the the rendered bitmap.
040C28             0681*  ; inputs: hl = distz;
040C28             0682*  vdu_3d_set_scn_z_trans:
040C28 22 3E 0C 04 0683*      ld (@distz),hl
040C2C 21 37 0C 04 0684*      ld hl,@beg
040C30 01 09 00 00 0685*      ld bc,@end-@beg
040C34 5B DF       0686*      rst.lil $18
040C36 C9          0687*      ret
040C37 17 00 A0    0688*  @beg: db 23, 0, $A0
040C3A 64 00       0689*  @sid: dw sid
040C3C 48 24       0690*  @cmd: db $48, 36 ; command 36: set scene z translation distance
040C3E 00 00       0691*  @distz: dw 0x0000
040C40 00          0692*  @end: db 0x00 ; padding
040C41             0693*  
040C41             0694*  ; Set Scene XYZ Translation Distances
040C41             0695*  ; VDU 23, 0, &A0, sid; &48, 37, distx; disty; distz; : Set Scene XYZ Translation Distances
040C41             0696*  ; This command sets the X, Y, and Z translation distances for the scene. Note that 3D translation of the scene is independent of 2D translation of the the rendered bitmap.
040C41             0697*  ; inputs: ix = distx; iy = disty; hl = distz;
040C41             0698*  vdu_3d_set_scn_xyz_trans:
040C41 DD 22 61 0C 0699*      ld (@distx),ix
       04          
040C46 FD 22 63 0C 0700*      ld (@disty),iy
       04          
040C4B 22 65 0C 04 0701*      ld (@distz),hl
040C4F 21 5A 0C 04 0702*      ld hl,@beg
040C53 01 0D 00 00 0703*      ld bc,@end-@beg
040C57 5B DF       0704*      rst.lil $18
040C59 C9          0705*      ret
040C5A 17 00 A0    0706*  @beg: db 23, 0, $A0
040C5D 64 00       0707*  @sid: dw sid
040C5F 48 25       0708*  @cmd: db $48, 37 ; command 37: set scene xyz translation distances
040C61 00 00       0709*  @distx: dw 0x0000
040C63 00 00       0710*  @disty: dw 0x0000
040C65 00 00       0711*  @distz: dw 0x0000
040C67 00          0712*  @end: db 0x00 ; padding
040C68             0713*  
040C68             0714*  ; Render To Bitmap
040C68             0715*  ; VDU 23, 0, &A0, sid; &48, 38, bmid; : Render To Bitmap
040C68             0716*  ; This command uses information provided by the above commands to render the 3D scene onto the specified bitmap.
040C68             0717*  ; This command must be used in order to perform the render operation; it does not happen automatically when other commands change some of the render parameters.
040C68             0718*  ; inputs: bc = bmid;
040C68             0719*  vdu_3d_render_to_bitmap:
040C68 ED 43 7F 0C 0720*      ld (@bmid),bc
       04          
040C6D 21 78 0C 04 0721*      ld hl,@beg
040C71 01 09 00 00 0722*      ld bc,@end-@beg
040C75 5B DF       0723*      rst.lil $18
040C77 C9          0724*      ret
040C78 17 00 A0    0725*  @beg: db 23, 0, $A0
040C7B 64 00       0726*  @sid: dw sid
040C7D 48 26       0727*  @cmd: db $48, 38 ; command 38: render to bitmap
040C7F 00 00       0728*  @bmid: dw 0x0000
040C81 00          0729*  @end: db 0x00 ; padding
040C82             0730*  
040C82             0731*  ; Delete Control Structure
040C82             0732*  ; VDU 23, 0, &A0, sid; &48, 39 : Delete Control Structure
040C82             0733*  ; This command deinitializes an existing control structure, assuming that it exists in the designated buffer. The buffer is subsequently deleted, as part of processing for this command.
040C82             0734*  ; inputs: none
040C82             0735*  vdu_3d_del_ctl_str:
040C82 21 8D 0C 04 0736*      ld hl,@beg
040C86 01 07 00 00 0737*      ld bc,@end-@beg
040C8A 5B DF       0738*      rst.lil $18
040C8C C9          0739*      ret
040C8D 17 00 A0    0740*  @beg: db 23, 0, $A0
040C90 64 00       0741*  @sid: dw sid
040C92 48 27       0742*  @cmd: db $48, 39 ; command 39: delete control structure
040C94             0743*  @end:
040C94             0016       include "ez80/app/src/asm/functions.asm"
040C94             0001*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/functions.s
040C94             0002*  ; Print a zero-terminated string
040C94             0003*  ; HL: Pointer to string
040C94             0004*  printString:
040C94 C5          0005*  	PUSH	BC
040C95 01 00 00 00 0006*  	LD		BC,0
040C99 3E 00       0007*  	LD 	 	A,0
040C9B 5B DF       0008*  	RST.LIL 18h
040C9D C1          0009*  	POP		BC
040C9E C9          0010*  	RET
040C9F             0011*  ; print a VDU sequence
040C9F             0012*  ; HL: Pointer to VDU sequence - <1 byte length> <data>
040C9F             0013*  sendVDUsequence:
040C9F C5          0014*  	PUSH	BC
040CA0 01 00 00 00 0015*  	LD		BC, 0
040CA4 4E          0016*  	LD		C, (HL)
040CA5 5B DF       0017*  	RST.LIL	18h
040CA7 C1          0018*  	POP		BC
040CA8 C9          0019*  	RET
040CA9             0020*  ; Print Newline sequence to VDP
040CA9             0021*  printNewLine:
040CA9 3E 0D       0022*  	LD	A, '\r'
040CAB 5B D7       0023*  	RST.LIL 10h
040CAD 3E 0A       0024*  	LD	A, '\n'
040CAF 5B D7       0025*  	RST.LIL 10h
040CB1 C9          0026*  	RET
040CB2             0027*  ; Print a 24-bit HEX number
040CB2             0028*  ; HLU: Number to print
040CB2             0029*  printHex24:
040CB2 E5          0030*  	PUSH	HL
040CB3 21 02 00 00 0031*  	LD		HL, 2
040CB7 39          0032*  	ADD		HL, SP
040CB8 7E          0033*  	LD		A, (HL)
040CB9 E1          0034*  	POP		HL
040CBA CD C4 0C 04 0035*  	CALL	printHex8
040CBE             0036*  ; Print a 16-bit HEX number
040CBE             0037*  ; HL: Number to print
040CBE             0038*  printHex16:
040CBE 7C          0039*  	LD		A,H
040CBF CD C4 0C 04 0040*  	CALL	printHex8
040CC3 7D          0041*  	LD		A,L
040CC4             0042*  ; Print an 8-bit HEX number
040CC4             0043*  ; A: Number to print
040CC4             0044*  printHex8:
040CC4 4F          0045*  	LD		C,A
040CC5 1F          0046*  	RRA
040CC6 1F          0047*  	RRA
040CC7 1F          0048*  	RRA
040CC8 1F          0049*  	RRA
040CC9 CD CE 0C 04 0050*  	CALL	@F
040CCD 79          0051*  	LD		A,C
040CCE             0052*  @@:
040CCE E6 0F       0053*  	AND		0Fh
040CD0 C6 90       0054*  	ADD		A,90h
040CD2 27          0055*  	DAA
040CD3 CE 40       0056*  	ADC		A,40h
040CD5 27          0057*  	DAA
040CD6 5B D7       0058*  	RST.LIL	10h
040CD8 C9          0059*  	RET
040CD9             0060*  
040CD9             0061*  ; Print a 0x HEX prefix
040CD9             0062*  DisplayHexPrefix:
040CD9 3E 30       0063*  	LD	A, '0'
040CDB 5B D7       0064*  	RST.LIL 10h
040CDD 3E 78       0065*  	LD	A, 'x'
040CDF 5B D7       0066*  	RST.LIL 10h
040CE1 C9          0067*  	RET
040CE2             0068*  
040CE2             0069*  
040CE2             0070*  ; Prints the right justified decimal value in HL without leading zeroes
040CE2             0071*  ; HL : Value to print
040CE2             0072*  printDec:
040CE2 11 06 0D 04 0073*  	LD	 DE, _printDecBuffer
040CE6 CD 0F 0D 04 0074*  	CALL Num2String
040CEA             0075*  ; BEGIN MY CODE
040CEA             0076*  ; replace leading zeroes with spaces
040CEA 21 06 0D 04 0077*      LD	 HL, _printDecBuffer
040CEE 06 07       0078*      ld   B, 7 ; if HL was 0, we want to keep the final zero
040CF0             0079*  @loop:
040CF0 7E          0080*      LD	 A, (HL)
040CF1 FE 30       0081*      CP	 '0'
040CF3 C2 01 0D 04 0082*      JP	 NZ, @done
040CF7 3E 20       0083*      LD   A, ' '
040CF9 77          0084*      LD	 (HL), A
040CFA 23          0085*      INC	 HL
040CFB CD 41 02 04 0086*      CALL vdu_cursor_forward
040CFF 10 EF       0087*      DJNZ @loop
040D01             0088*  @done:
040D01             0089*  ; END MY CODE
040D01             0090*  	; LD	 HL, _printDecBuffer
040D01 CD 94 0C 04 0091*  	CALL printString
040D05 C9          0092*  	RET
040D06 00 00 00 00 0093*  _printDecBuffer: blkb 9,0 ; nine bytes full of zeroes
       00 00 00 00 
       00          
040D0F             0094*  
040D0F             0095*  ; This routine converts the value from HL into it's ASCII representation,
040D0F             0096*  ; starting to memory location pointing by DE, in decimal form and with leading zeroes
040D0F             0097*  ; so it will allways be 8 characters length
040D0F             0098*  ; HL : Value to convert to string
040D0F             0099*  ; DE : pointer to buffer, at least 8 byte + 0
040D0F             0100*  Num2String:
040D0F 01 80 69 67 0101*  	LD	 BC,-10000000
040D13 CD 46 0D 04 0102*  	CALL OneDigit
040D17 01 C0 BD F0 0103*  	LD	 BC,-1000000
040D1B CD 46 0D 04 0104*  	CALL OneDigit
040D1F 01 60 79 FE 0105*  	LD	 BC,-100000
040D23 CD 46 0D 04 0106*  	CALL OneDigit
040D27 01 F0 D8 FF 0107*  	LD   BC,-10000
040D2B CD 46 0D 04 0108*  	CALL OneDigit
040D2F 01 18 FC FF 0109*  	LD   BC,-1000
040D33 CD 46 0D 04 0110*  	CALL OneDigit
040D37 01 9C FF FF 0111*  	LD   BC,-100
040D3B CD 46 0D 04 0112*  	CALL OneDigit
040D3F 0E F6       0113*  	LD   C,-10
040D41 CD 46 0D 04 0114*  	CALL OneDigit
040D45 48          0115*  	LD   C,B
040D46             0116*  OneDigit:
040D46 3E 2F       0117*  	LD   A,'0'-1
040D48             0118*  DivideMe:
040D48 3C          0119*  	INC  A
040D49 09          0120*  	ADD  HL,BC
040D4A 38 FC       0121*  	JR   C,DivideMe
040D4C ED 42       0122*  	SBC  HL,BC
040D4E 12          0123*  	LD   (DE),A
040D4F 13          0124*  	INC  DE
040D50 C9          0125*  	RET
040D51             0126*  
040D51             0127*  
040D51             0128*  ; #### new functions added by Brandon R. Gates ####
040D51             0129*  
040D51             0130*  ; print the binary representation of the 8-bit value in a
040D51             0131*  ; destroys a, hl, bc
040D51             0132*  printBin8:
040D51 06 08       0133*      ld b,8      ; loop counter for 8 bits
040D53 21 6E 0D 04 0134*      ld hl,@cmd  ; set hl to the low byte of the output string
040D57             0135*                  ; (which will be the high bit of the value in a)
040D57             0136*  @loop:
040D57 07          0137*      rlca ; put the next highest bit into carry
040D58 38 04       0138*      jr c,@one
040D5A 36 30       0139*      ld (hl),'0'
040D5C 18 02       0140*      jr @next_bit
040D5E             0141*  @one:
040D5E 36 31       0142*      ld (hl),'1'
040D60             0143*  @next_bit:
040D60 23          0144*      inc hl
040D61 10 F4       0145*      djnz @loop
040D63             0146*  ; print it
040D63 21 6E 0D 04 0147*  	ld hl,@cmd
040D67 01 08 00 00 0148*  	ld bc,@end-@cmd
040D6B 5B DF       0149*  	rst.lil $18
040D6D C9          0150*  	ret
040D6E             0151*  @cmd: ds 8 ; eight bytes for eight bits
040D76             0152*  @end:
040D76             0153*  
040D76             0154*  ; print the binary representation of the 8-bit value in a
040D76             0155*  ; in reverse order (lsb first)
040D76             0156*  ; destroys a, hl, bc
040D76             0157*  printBin8Rev:
040D76 06 08       0158*      ld b,8      ; loop counter for 8 bits
040D78 21 93 0D 04 0159*      ld hl,@cmd  ; set hl to the low byte of the output string
040D7C             0160*                  ; (which will be the high bit of the value in a)
040D7C             0161*  @loop:
040D7C 0F          0162*      rrca ; put the next lowest bit into carry
040D7D 38 04       0163*      jr c,@one
040D7F 36 30       0164*      ld (hl),'0'
040D81 18 02       0165*      jr @next_bit
040D83             0166*  @one:
040D83 36 31       0167*      ld (hl),'1'
040D85             0168*  @next_bit:
040D85 23          0169*      inc hl
040D86 10 F4       0170*      djnz @loop
040D88             0171*  ; print it
040D88 21 93 0D 04 0172*  	ld hl,@cmd
040D8C 01 08 00 00 0173*  	ld bc,@end-@cmd
040D90 5B DF       0174*  	rst.lil $18
040D92 C9          0175*  	ret
040D93             0176*  @cmd: ds 8 ; eight bytes for eight bits
040D9B             0177*  @end:
040D9B             0178*  
040D9B             0179*  ; print registers to screen in hexidecimal format
040D9B             0180*  ; inputs: none
040D9B             0181*  ; outputs: values of every register printed to screen
040D9B             0182*  ;    values of each register in global scratch memory
040D9B             0183*  ; destroys: nothing
040D9B             0184*  stepRegistersHex:
040D9B             0185*  ; store everything in scratch
040D9B 22 9E 0F 04 0186*      ld (uhl),hl
040D9F ED 43 A1 0F 0187*      ld (ubc),bc
       04          
040DA4 ED 53 A4 0F 0188*      ld (ude),de
       04          
040DA9 DD 22 A7 0F 0189*      ld (uix),ix
       04          
040DAE FD 22 AA 0F 0190*      ld (uiy),iy
       04          
040DB3 F5          0191*      push af ; fml
040DB4 E1          0192*      pop hl  ; thanks, zilog
040DB5 22 9B 0F 04 0193*      ld (uaf),hl
040DB9 F5          0194*      push af ; dammit
040DBA             0195*  
040DBA             0196*  ; home the cursor
040DBA CD 88 03 04 0197*      call vdu_home_cursor
040DBE             0198*  
040DBE             0199*  ; print each register
040DBE 21 27 0F 04 0200*      ld hl,str_afu
040DC2 CD 94 0C 04 0201*      call printString
040DC6 2A 9B 0F 04 0202*      ld hl,(uaf)
040DCA CD B2 0C 04 0203*      call printHex24
040DCE CD A9 0C 04 0204*      call printNewLine
040DD2             0205*  
040DD2 21 2B 0F 04 0206*      ld hl,str_hlu
040DD6 CD 94 0C 04 0207*      call printString
040DDA 2A 9E 0F 04 0208*      ld hl,(uhl)
040DDE CD B2 0C 04 0209*      call printHex24
040DE2 CD A9 0C 04 0210*      call printNewLine
040DE6             0211*  
040DE6 21 2F 0F 04 0212*      ld hl,str_bcu
040DEA CD 94 0C 04 0213*      call printString
040DEE 2A A1 0F 04 0214*      ld hl,(ubc)
040DF2 CD B2 0C 04 0215*      call printHex24
040DF6 CD A9 0C 04 0216*      call printNewLine
040DFA             0217*  
040DFA 21 33 0F 04 0218*      ld hl,str_deu
040DFE CD 94 0C 04 0219*      call printString
040E02 2A A4 0F 04 0220*      ld hl,(ude)
040E06 CD B2 0C 04 0221*      call printHex24
040E0A CD A9 0C 04 0222*      call printNewLine
040E0E             0223*  
040E0E 21 37 0F 04 0224*      ld hl,str_ixu
040E12 CD 94 0C 04 0225*      call printString
040E16 2A A7 0F 04 0226*      ld hl,(uix)
040E1A CD B2 0C 04 0227*      call printHex24
040E1E CD A9 0C 04 0228*      call printNewLine
040E22             0229*  
040E22 21 3B 0F 04 0230*      ld hl,str_iyu
040E26 CD 94 0C 04 0231*      call printString
040E2A 2A AA 0F 04 0232*      ld hl,(uiy)
040E2E CD B2 0C 04 0233*      call printHex24
040E32 CD A9 0C 04 0234*      call printNewLine
040E36             0235*  
040E36             0236*      ; call vsync
040E36             0237*  
040E36 CD A9 0C 04 0238*      call printNewLine
040E3A             0239*  
040E3A             0240*  ; check for right shift key and quit if pressed
040E3A             0241*  	MOSCALL mos_getkbmap
040E3A 3E 1E       0001*M 			LD	A, function
040E3C 5B CF       0002*M 			RST.LIL	08h
040E3E             0242*  @stayhere:
040E3E             0243*  ; 7 RightShift
040E3E DD CB 00 76 0244*      bit 6,(ix+0)
040E42 20 02       0245*      jr nz,@RightShift
040E44 18 F8       0246*      jr @stayhere
040E46             0247*  @RightShift:
040E46 DD CB 0E 86 0248*      res 0,(ix+14) ; debounce the key (hopefully)
040E4A 3E 80       0249*      ld a,%10000000
040E4C CD 3C 12 04 0250*      call multiPurposeDelay
040E50             0251*  
040E50             0252*  ; restore everything
040E50 2A 9E 0F 04 0253*      ld hl, (uhl)
040E54 ED 4B A1 0F 0254*      ld bc, (ubc)
       04          
040E59 ED 5B A4 0F 0255*      ld de, (ude)
       04          
040E5E DD 2A A7 0F 0256*      ld ix, (uix)
       04          
040E63 FD 2A AA 0F 0257*      ld iy, (uiy)
       04          
040E68 F1          0258*      pop af
040E69             0259*  ; all done
040E69 C9          0260*      ret
040E6A             0261*  
040E6A             0262*  ; print registers to screen in hexidecimal format
040E6A             0263*  ; inputs: none
040E6A             0264*  ; outputs: values of every register printed to screen
040E6A             0265*  ;    values of each register in global scratch memory
040E6A             0266*  ; destroys: nothing
040E6A             0267*  dumpRegistersHex:
040E6A             0268*  ; store everything in scratch
040E6A 22 9E 0F 04 0269*      ld (uhl),hl
040E6E ED 43 A1 0F 0270*      ld (ubc),bc
       04          
040E73 ED 53 A4 0F 0271*      ld (ude),de
       04          
040E78 DD 22 A7 0F 0272*      ld (uix),ix
       04          
040E7D FD 22 AA 0F 0273*      ld (uiy),iy
       04          
040E82 F5          0274*      push af ; fml
040E83 E1          0275*      pop hl  ; thanks, zilog
040E84 22 9B 0F 04 0276*      ld (uaf),hl
040E88 F5          0277*      push af ; dammit
040E89             0278*  
040E89             0279*  ; home the cursor
040E89 CD 88 03 04 0280*      call vdu_home_cursor
040E8D             0281*  
040E8D             0282*  ; print each register
040E8D 21 27 0F 04 0283*      ld hl,str_afu
040E91 CD 94 0C 04 0284*      call printString
040E95 2A 9B 0F 04 0285*      ld hl,(uaf)
040E99 CD B2 0C 04 0286*      call printHex24
040E9D CD A9 0C 04 0287*      call printNewLine
040EA1             0288*  
040EA1 21 2B 0F 04 0289*      ld hl,str_hlu
040EA5 CD 94 0C 04 0290*      call printString
040EA9 2A 9E 0F 04 0291*      ld hl,(uhl)
040EAD CD B2 0C 04 0292*      call printHex24
040EB1 CD A9 0C 04 0293*      call printNewLine
040EB5             0294*  
040EB5 21 2F 0F 04 0295*      ld hl,str_bcu
040EB9 CD 94 0C 04 0296*      call printString
040EBD 2A A1 0F 04 0297*      ld hl,(ubc)
040EC1 CD B2 0C 04 0298*      call printHex24
040EC5 CD A9 0C 04 0299*      call printNewLine
040EC9             0300*  
040EC9 21 33 0F 04 0301*      ld hl,str_deu
040ECD CD 94 0C 04 0302*      call printString
040ED1 2A A4 0F 04 0303*      ld hl,(ude)
040ED5 CD B2 0C 04 0304*      call printHex24
040ED9 CD A9 0C 04 0305*      call printNewLine
040EDD             0306*  
040EDD 21 37 0F 04 0307*      ld hl,str_ixu
040EE1 CD 94 0C 04 0308*      call printString
040EE5 2A A7 0F 04 0309*      ld hl,(uix)
040EE9 CD B2 0C 04 0310*      call printHex24
040EED CD A9 0C 04 0311*      call printNewLine
040EF1             0312*  
040EF1 21 3B 0F 04 0313*      ld hl,str_iyu
040EF5 CD 94 0C 04 0314*      call printString
040EF9 2A AA 0F 04 0315*      ld hl,(uiy)
040EFD CD B2 0C 04 0316*      call printHex24
040F01 CD A9 0C 04 0317*      call printNewLine
040F05             0318*  
040F05 CD AA 04 04 0319*      call vdu_vblank
040F09             0320*  
040F09 CD A9 0C 04 0321*      call printNewLine
040F0D             0322*  ; restore everything
040F0D 2A 9E 0F 04 0323*      ld hl, (uhl)
040F11 ED 4B A1 0F 0324*      ld bc, (ubc)
       04          
040F16 ED 5B A4 0F 0325*      ld de, (ude)
       04          
040F1B DD 2A A7 0F 0326*      ld ix, (uix)
       04          
040F20 FD 2A AA 0F 0327*      ld iy, (uiy)
       04          
040F25 F1          0328*      pop af
040F26             0329*  ; all done
040F26 C9          0330*      ret
040F27             0331*  
040F27 61 66 3D 00 0332*  str_afu: db "af=",0
040F2B 68 6C 3D 00 0333*  str_hlu: db "hl=",0
040F2F 62 63 3D 00 0334*  str_bcu: db "bc=",0
040F33 64 65 3D 00 0335*  str_deu: db "de=",0
040F37 69 78 3D 00 0336*  str_ixu: db "ix=",0
040F3B 69 79 3D 00 0337*  str_iyu: db "iy=",0
040F3F             0338*  
040F3F             0339*  ; print udeuhl to screen in hexidecimal format
040F3F             0340*  ; inputs: none
040F3F             0341*  ; outputs: concatenated hexidecimal udeuhl
040F3F             0342*  ; destroys: nothing
040F3F             0343*  dumpUDEUHLHex:
040F3F             0344*  ; store everything in scratch
040F3F 22 9E 0F 04 0345*      ld (uhl),hl
040F43 ED 43 A1 0F 0346*      ld (ubc),bc
       04          
040F48 ED 53 A4 0F 0347*      ld (ude),de
       04          
040F4D DD 22 A7 0F 0348*      ld (uix),ix
       04          
040F52 FD 22 AA 0F 0349*      ld (uiy),iy
       04          
040F57 F5          0350*      push af
040F58             0351*  
040F58             0352*  ; print each register
040F58             0353*  
040F58 21 92 0F 04 0354*      ld hl,str_udeuhl
040F5C CD 94 0C 04 0355*      call printString
040F60 2A A4 0F 04 0356*      ld hl,(ude)
040F64 CD B2 0C 04 0357*      call printHex24
040F68 3E 2E       0358*  	ld a,'.'	; print a dot to separate the values
040F6A 5B D7       0359*  	rst.lil 10h
040F6C 2A 9E 0F 04 0360*      ld hl,(uhl)
040F70 CD B2 0C 04 0361*      call printHex24
040F74 CD A9 0C 04 0362*      call printNewLine
040F78             0363*  
040F78             0364*  ; restore everything
040F78 2A 9E 0F 04 0365*      ld hl, (uhl)
040F7C ED 4B A1 0F 0366*      ld bc, (ubc)
       04          
040F81 ED 5B A4 0F 0367*      ld de, (ude)
       04          
040F86 DD 2A A7 0F 0368*      ld ix, (uix)
       04          
040F8B FD 2A AA 0F 0369*      ld iy, (uiy)
       04          
040F90 F1          0370*      pop af
040F91             0371*  ; all done
040F91 C9          0372*      ret
040F92             0373*  
040F92 75 64 65 2E 0374*  str_udeuhl: db "ude.uhl=",0
       75 68 6C 3D 
       00          
040F9B             0375*  
040F9B             0376*  ; global scratch memory for registers
040F9B 00 00 00    0377*  uaf: dl 0
040F9E 00 00 00    0378*  uhl: dl 0
040FA1 00 00 00    0379*  ubc: dl 0
040FA4 00 00 00    0380*  ude: dl 0
040FA7 00 00 00    0381*  uix: dl 0
040FAA 00 00 00    0382*  uiy: dl 0
040FAD 00 00 00    0383*  usp: dl 0
040FB0 00 00 00    0384*  upc: dl 0
040FB3             0385*  
040FB3             0386*  ; inputs: whatever is in the flags register
040FB3             0387*  ; outputs: binary representation of flags
040FB3             0388*  ;          with a header so we know which is what
040FB3             0389*  ; destroys: nothing
040FB3             0390*  ; preserves: everything
040FB3             0391*  dumpFlags:
040FB3             0392*  ; first we curse zilog for not giving direct access to flags
040FB3 F5          0393*      push af ; this is so we can send it back unharmed
040FB4 F5          0394*      push af ; this is so we can pop it to hl
040FB5             0395*  ; store everything in scratch
040FB5 22 9E 0F 04 0396*      ld (uhl),hl
040FB9 ED 43 A1 0F 0397*      ld (ubc),bc
       04          
040FBE ED 53 A4 0F 0398*      ld (ude),de
       04          
040FC3 DD 22 A7 0F 0399*      ld (uix),ix
       04          
040FC8 FD 22 AA 0F 0400*      ld (uiy),iy
       04          
040FCD             0401*  ; next we print the header
040FCD 21 F9 0F 04 0402*      ld hl,@header
040FD1 CD 94 0C 04 0403*      call printString
040FD5 E1          0404*      pop hl ; flags are now in l
040FD6 7D          0405*      ld a,l ; flags are now in a
040FD7 CD 51 0D 04 0406*      call printBin8
040FDB CD A9 0C 04 0407*  	call printNewLine
040FDF             0408*  ; restore everything
040FDF 2A 9E 0F 04 0409*      ld hl, (uhl)
040FE3 ED 4B A1 0F 0410*      ld bc, (ubc)
       04          
040FE8 ED 5B A4 0F 0411*      ld de, (ude)
       04          
040FED DD 2A A7 0F 0412*      ld ix, (uix)
       04          
040FF2 FD 2A AA 0F 0413*      ld iy, (uiy)
       04          
040FF7 F1          0414*      pop af ; send her home the way she came
040FF8 C9          0415*      ret
040FF9             0416*  ; Bit 7 (S): Sign flag
040FF9             0417*  ; Bit 6 (Z): Zero flag
040FF9             0418*  ; Bit 5 (5): Reserved (copy of bit 5 of the result)
040FF9             0419*  ; Bit 4 (H): Half Carry flag
040FF9             0420*  ; Bit 3 (3): Reserved (copy of bit 3 of the result)
040FF9             0421*  ; Bit 2 (PV): Parity/Overflow flag
040FF9             0422*  ; Bit 1 (N): Subtract flag
040FF9             0423*  ; Bit 0 (C): Carry flag
040FF9 53 5A 78 48 0424*  @header: db "SZxHxPNC\r\n",0 ; cr/lf and 0 terminator
       78 50 4E 43 
       0D 0A 00    
041004             0425*  
041004             0426*  ; set all the bits in the flag register
041004             0427*  ; more of an academic exercise than anything useful
041004             0428*  ; inputs; none
041004             0429*  ; outputs; a=0,f=255
041004             0430*  ; destroys: flags, hl
041004             0431*  ; preserves: a, because why not
041004             0432*  setAllFlags:
041004 21 FF 00 00 0433*      ld hl,255
041008 67          0434*      ld h,a ; four cycles to preserve a is cheap
041009 E5          0435*      push hl
04100A F1          0436*      pop af
04100B C9          0437*      ret
04100C             0438*  
04100C             0439*  ; reset all the bits in the flag register
04100C             0440*  ; unlike its inverse counterpart, this may actually be useful
04100C             0441*  ; inputs; none
04100C             0442*  ; outputs; a=0,f=0
04100C             0443*  ; destroys: flags, hl
04100C             0444*  ; preserves: a, because why not
04100C             0445*  resetAllFlags:
04100C 21 00 00 00 0446*      ld hl,0
041010 67          0447*      ld h,a ; four cycles to preserve a is cheap
041011 E5          0448*      push hl
041012 F1          0449*      pop af
041013 C9          0450*      ret
041014             0451*  
041014             0452*  ; wait until user presses a key
041014             0453*  ; inputs: none
041014             0454*  ; outputs: none
041014             0455*  ; destroys: af,hl,ix
041014             0456*  waitKeypress:
041014             0457*      ; ld hl,str_press_shift
041014             0458*      ; call printString
041014             0459*      MOSCALL mos_sysvars
041014 3E 08       0001*M 			LD	A, function
041016 5B CF       0002*M 			RST.LIL	08h
041018 AF          0460*      xor a ; zero out any prior keypresses
041019 DD 77 05    0461*      ld (ix+sysvar_keyascii),a
04101C             0462*  @loop:
04101C DD 7E 05    0463*      ld a,(ix+sysvar_keyascii)
04101F A7          0464*      and a
041020 C0          0465*      ret nz
041021 18 F9       0466*      jr @loop
041023             0467*  
041023             0468*  ; wait until user presses return key
041023             0469*  ; inputs: none
041023             0470*  ; outputs: none
041023             0471*  ; destroys: af,ix
041023             0472*  waitReturn:
041023             0473*  ; check for return key and quit if pressed
041023             0474*      MOSCALL mos_sysvars
041023 3E 08       0001*M 			LD	A, function
041025 5B CF       0002*M 			RST.LIL	08h
041027 AF          0475*      xor a ; zero out any prior keypresses
041028 DD 77 05    0476*      ld (ix+sysvar_keyascii),a
04102B             0477*  @stayhere:
04102B DD 7E 05    0478*      ld a,(ix+sysvar_keyascii)
04102E FE 0D       0479*      cp 13
041030 20 F9       0480*      jr nz,@stayhere
041032 3E 80       0481*      ld a,%10000000
041034 CD 3C 12 04 0482*      call multiPurposeDelay
041038 C9          0483*      ret
041039             0484*  
041039             0485*  ; print bytes from an address to the screen in hexidecimal format
041039             0486*  ; inputs: hl = address of first byte to print, a = number of bytes to print
041039             0487*  ; outputs: values of each byte printed to screen separated by spaces
041039             0488*  ; destroys: nothing
041039             0489*  dumpMemoryHex:
041039             0490*  ; save all registers to the stack
041039 F5          0491*      push af
04103A C5          0492*      push bc
04103B D5          0493*      push de
04103C E5          0494*      push hl
04103D DD E5       0495*      push ix
04103F FD E5       0496*      push iy
041041             0497*  
041041             0498*  ; set b to be our loop counter
041041 47          0499*      ld b,a
041042             0500*  @loop:
041042             0501*  ; print the byte
041042 7E          0502*      ld a,(hl)
041043 CD C4 0C 04 0503*      call printHex8
041047             0504*  ; print a space
041047 3E 20       0505*      ld a,' '
041049 5B D7       0506*      rst.lil 10h
04104B 23          0507*      inc hl
04104C 10 F4       0508*      djnz @loop
04104E CD A9 0C 04 0509*      call printNewLine
041052             0510*  
041052             0511*  ; restore everything
041052 FD E1       0512*      pop iy
041054 DD E1       0513*      pop ix
041056 E1          0514*      pop hl
041057 D1          0515*      pop de
041058 C1          0516*      pop bc
041059 F1          0517*      pop af
04105A             0518*  ; all done
04105A C9          0519*      ret
04105B             0520*  
04105B             0521*  
04105B             0522*  ; print bytes from an address to the screen in binary format
04105B             0523*  ; inputs: hl = address of first byte to print, a = number of bytes to print
04105B             0524*  ; outputs: values of each byte printed to screen separated by spaces
04105B             0525*  ; destroys: nothing
04105B             0526*  dumpMemoryBin:
04105B             0527*  ; save all registers to the stack
04105B F5          0528*      push af
04105C C5          0529*      push bc
04105D D5          0530*      push de
04105E E5          0531*      push hl
04105F DD E5       0532*      push ix
041061 FD E5       0533*      push iy
041063             0534*  
041063             0535*  ; set b to be our loop counter
041063 47          0536*      ld b,a
041064             0537*  @loop:
041064             0538*  ; print the byte
041064 7E          0539*      ld a,(hl)
041065 E5          0540*      push hl
041066 C5          0541*      push bc
041067 CD 51 0D 04 0542*      call printBin8
04106B C1          0543*      pop bc
04106C             0544*  ; print a space
04106C 3E 20       0545*      ld a,' '
04106E 5B D7       0546*      rst.lil 10h
041070 E1          0547*      pop hl
041071 23          0548*      inc hl
041072 10 F0       0549*      djnz @loop
041074 CD A9 0C 04 0550*      call printNewLine
041078             0551*  
041078             0552*  ; restore everything
041078 FD E1       0553*      pop iy
04107A DD E1       0554*      pop ix
04107C E1          0555*      pop hl
04107D D1          0556*      pop de
04107E C1          0557*      pop bc
04107F F1          0558*      pop af
041080             0559*  ; all done
041080 C9          0560*      ret
041081             0561*  
041081             0562*  ; print bytes from an address to the screen in binary format
041081             0563*  ; with the bits of each byte in reverse order (lsb first)
041081             0564*  ; inputs: hl = address of first byte to print, a = number of bytes to print
041081             0565*  ; outputs: values of each byte printed to screen separated by spaces
041081             0566*  ; destroys: nothing
041081             0567*  dumpMemoryBinRev:
041081             0568*  ; save all registers to the stack
041081 F5          0569*      push af
041082 C5          0570*      push bc
041083 D5          0571*      push de
041084 E5          0572*      push hl
041085 DD E5       0573*      push ix
041087 FD E5       0574*      push iy
041089             0575*  
041089             0576*  ; set b to be our loop counter
041089 47          0577*      ld b,a
04108A             0578*  @loop:
04108A             0579*  ; print the byte
04108A 7E          0580*      ld a,(hl)
04108B E5          0581*      push hl
04108C C5          0582*      push bc
04108D CD 76 0D 04 0583*      call printBin8Rev
041091 C1          0584*      pop bc
041092             0585*  ; print a space
041092 3E 20       0586*      ld a,' '
041094 5B D7       0587*      rst.lil 10h
041096 E1          0588*      pop hl
041097 23          0589*      inc hl
041098 10 F0       0590*      djnz @loop
04109A CD A9 0C 04 0591*      call printNewLine
04109E             0592*  
04109E             0593*  ; restore everything
04109E FD E1       0594*      pop iy
0410A0 DD E1       0595*      pop ix
0410A2 E1          0596*      pop hl
0410A3 D1          0597*      pop de
0410A4 C1          0598*      pop bc
0410A5 F1          0599*      pop af
0410A6             0600*  ; all done
0410A6 C9          0601*      ret
0410A7             0017   	include "ez80/app/src/asm/maths.asm"
0410A7 00 00 00 00 0001*  add_bcd_arg1: db #00,#00,#00,#00
0410AB 00 00 00 00 0002*  add_bcd_arg2: db #00,#00,#00,#00
0410AF             0003*  
0410AF             0004*  ; set bcd values in a scratch memory address from registers bcde
0410AF             0005*  ; input: hl; scratch address,bcde; 8-place bcd number
0410AF             0006*  ; destroys ; hl
0410AF             0007*  set_bcd:
0410AF 73          0008*      ld (hl),e
0410B0 23          0009*      inc hl
0410B1 72          0010*      ld (hl),d
0410B2 23          0011*      inc hl
0410B3 71          0012*      ld (hl),c
0410B4 23          0013*      inc hl
0410B5 70          0014*      ld (hl),b
0410B6 C9          0015*      ret
0410B7             0016*  
0410B7             0017*  ; load bcd values from a scratch memory address to bcde
0410B7             0018*  ; input: hl; scratch address
0410B7             0019*  ; output: bcde; 8-place bcd number
0410B7             0020*  ; destroys: hl
0410B7             0021*  get_bcd:
0410B7 5E          0022*      ld e,(hl)
0410B8 23          0023*      inc hl
0410B9 56          0024*      ld d,(hl)
0410BA 23          0025*      inc hl
0410BB 4E          0026*      ld c,(hl)
0410BC 23          0027*      inc hl
0410BD 46          0028*      ld b,(hl)
0410BE C9          0029*      ret
0410BF             0030*  
0410BF             0031*  ; BCD addition
0410BF             0032*  ; inputs: (hl) and (de) point to BCD numbers of equal length (divisible by 2)
0410BF             0033*  ;       a is the number of bytes holding each number (number of places/2)
0410BF             0034*  ; outputs: (hl) + (de) --> (hl)
0410BF             0035*  ; destroys: a,b,de,hl
0410BF             0036*  add_bcd:
0410BF 47          0037*      ld b,a ; loop counter
0410C0 AF          0038*      xor a ; reset a, clear carry flag
0410C1             0039*  adcec:
0410C1 1A          0040*      ld a,(de) ; addend to acc
0410C2 8E          0041*      adc a,(hl) ; add (hl) to acc
0410C3 27          0042*      daa ; adjust result to bcd
0410C4 77          0043*      ld (hl),a ; store result
0410C5 23          0044*      inc hl ; advance memory pointers
0410C6 13          0045*      inc de
0410C7 10 F8       0046*      djnz adcec ; loop until b == 0
0410C9 C9          0047*      ret
0410CA             0048*  
0410CA             0049*  ; BCD subtraction
0410CA             0050*  ; inputs: (hl) and (de) point to BCD numbers of equal length (divisible by 2)
0410CA             0051*  ;       a is the number of bytes holding each number (number of places/2)
0410CA             0052*  ; outputs: (hl) - (de) --> (hl)
0410CA             0053*  ; destroys: a,b,de,hl
0410CA             0054*  sub_bcd:
0410CA 47          0055*      ld b,a ; loop counter
0410CB AF          0056*      xor a ; reset a,clear carry flag
0410CC             0057*  subdec:
0410CC 1A          0058*      ld a,(de) ; subtrahend to acc
0410CD 9E          0059*      sbc a,(hl) ; subtract (hl) from acc
0410CE 27          0060*      daa ; adjust result to bcd
0410CF 77          0061*      ld (hl),a ; store result
0410D0 23          0062*      inc hl ; advance memory pointers
0410D1 13          0063*      inc de
0410D2 10 F8       0064*      djnz subdec ; loop until b == 0
0410D4 C9          0065*      ret
0410D5             0066*  
0410D5             0067*  ; http://www.z80.info/pseudo-random.txt
0410D5             0068*  rand_8:
0410D5 C5          0069*      push bc
0410D6 3A E9 10 04 0070*      ld a,(r_seed)
0410DA 4F          0071*      ld c,a
0410DB             0072*  
0410DB 0F          0073*      rrca ; multiply by 32
0410DC 0F          0074*      rrca
0410DD 0F          0075*      rrca
0410DE EE 1F       0076*      xor 0x1f
0410E0             0077*  
0410E0 81          0078*      add a,c
0410E1 DE FF       0079*      sbc a,255 ; carry
0410E3             0080*  
0410E3 32 E9 10 04 0081*      ld (r_seed),a
0410E7 C1          0082*      pop bc
0410E8 C9          0083*      ret
0410E9 50          0084*  r_seed: defb $50
0410EA             0018   	include "ez80/app/src/asm/timer.asm"
0410EA             0001*  ; Table 32. Timer Control Registers
0410EA             0002*  ; this constant is the base address of the timer control registers
0410EA             0003*  ; each timer takes three bytes:
0410EA             0004*  ;   0: control register
0410EA             0005*  ;   1: low byte of timer reset value
0410EA             0006*  ;   2: high byte of timer reset value
0410EA             0007*  ; note that the value is only 8-bits,so we use in0/out0 i/o calls,
0410EA             0008*  ; which correctly force the high and upper bytes of the address bus to zero
0410EA             0009*  TMR_CTL:     equ 80h
0410EA             0010*  
0410EA             0011*  ; Timer Control Register Bit Definitions
0410EA             0012*  PRT_IRQ_0:    equ %00000000 ; The timer does not reach its end-of-count value.
0410EA             0013*                              ; This bit is reset to 0 every time the TMRx_CTL register is read.
0410EA             0014*  PRT_IRQ_1:    equ %10000000 ; The timer reaches its end-of-count value. If IRQ_EN is set to 1,
0410EA             0015*                              ; an interrupt signal is sent to the CPU. This bit remains 1 until
0410EA             0016*                              ; the TMRx_CTL register is read.
0410EA             0017*  
0410EA             0018*  IRQ_EN_0:     equ %00000000 ; Timer interrupt requests are disabled.
0410EA             0019*  IRQ_EN_1:     equ %01000000 ; Timer interrupt requests are enabled.
0410EA             0020*  
0410EA             0021*  PRT_MODE_0:   equ %00000000 ; The timer operates in SINGLE PASS mode. PRT_EN (bit 0) is reset to
0410EA             0022*                              ;  0,and counting stops when the end-of-count value is reached.
0410EA             0023*  PRT_MODE_1:   equ %00010000 ; The timer operates in CONTINUOUS mode. The timer reload value is
0410EA             0024*                              ; written to the counter when the end-of-count value is reached.
0410EA             0025*  
0410EA             0026*  ; CLK_DIV is a 2-bit mask that sets the timer input source clock divider
0410EA             0027*  CLK_DIV_256:  equ %00001100 ;
0410EA             0028*  CLK_DIV_64:   equ %00001000 ;
0410EA             0029*  CLK_DIV_16:   equ %00000100 ;
0410EA             0030*  CLK_DIV_4:    equ %00000000 ;
0410EA             0031*  
0410EA             0032*  RST_EN_0:     equ %00000000 ; The reload and restart function is disabled.
0410EA             0033*  RST_EN_1:     equ %00000010 ; The reload and restart function is enabled.
0410EA             0034*                              ; When a 1 is written to this bit,the values in the reload registers
0410EA             0035*                              ;  are loaded into the downcounter when the timer restarts. The
0410EA             0036*                              ; programmer must ensure that this bit is set to 1 each time
0410EA             0037*                              ; SINGLE-PASS mode is used.
0410EA             0038*  
0410EA             0039*  ; disable/enable the programmable reload timer
0410EA             0040*  PRT_EN_0:     equ %00000000 ;
0410EA             0041*  PRT_EN_1:     equ %00000001 ;
0410EA             0042*  
0410EA             0043*  ; Table 37. Timer Input Source Select Register
0410EA             0044*  ; Each of the 4 timers are allocated two bits of the 8-bit register
0410EA             0045*  ; in little-endian order,with TMR0 using bits 0 and 1,TMR1 using bits 2 and 3,etc.
0410EA             0046*  ;   00: System clock / CLK_DIV
0410EA             0047*  ;   01: RTC / CLK_DIV
0410EA             0048*  ;   NOTE: these are the values given in the manual,but it may be a typo
0410EA             0049*  ;   10: GPIO port B pin 1.
0410EA             0050*  ;   11: GPIO port B pin 1.
0410EA             0051*  TMR_ISS:   equ 92h ; register address
0410EA             0052*  
0410EA             0053*  ; Table 51. Real-Time Clock Control Register
0410EA             0054*  RTC_CTRL: equ EDh ; register address
0410EA             0055*  
0410EA             0056*  ; alarm interrupt disable/enable
0410EA             0057*  RTC_ALARM_0:    equ %00000000
0410EA             0058*  RTC_ALARM_1:    equ %10000000
0410EA             0059*  
0410EA             0060*  ; interrupt on alarm disable/enable
0410EA             0061*  RTC_INT_ENT_0:  equ %00000000
0410EA             0062*  RTC_INT_ENT_1:  equ %01000000
0410EA             0063*  
0410EA             0064*  RTC_BCD_EN_0:   equ %00000000   ; RTC count and alarm registers are binary
0410EA             0065*  RTC_BCD_EN_1:   equ %00100000   ; RTC count and alarm registers are BCD
0410EA             0066*  
0410EA             0067*  RTC_CLK_SEL_0:  equ %00000000   ; RTC clock source is crystal oscillator output (32768 Hz).
0410EA             0068*                                  ; On-chip 32768 Hz oscillator is enabled.
0410EA             0069*  RTC_CLK_SEL_1:  equ %00010000   ; RTC clock source is power line frequency input as set by FREQ_SEL.
0410EA             0070*                                  ; On-chip 32768 Hz oscillator is disabled.
0410EA             0071*  
0410EA             0072*  RTC_FREQ_SEL_0: equ %00000000   ; 60 Hz power line frequency.
0410EA             0073*  RTC_FREQ_SEL_1: equ %00001000   ; 50 Hz power line frequency.
0410EA             0074*  
0410EA             0075*  RTC_SLP_WAKE_0: equ %00000000   ; RTC does not generate a sleep-mode recovery reset.
0410EA             0076*  RTC_SLP_WAKE_1: equ %00000010   ; RTC generates a sleep-mode recovery reset.
0410EA             0077*  
0410EA             0078*  RTC_UNLOCK_0:   equ %00000000   ; RTC count registers are locked to prevent Write access.
0410EA             0079*                                  ; RTC counter is enabled.
0410EA             0080*  RTC_UNLOCK_1:   equ %00000001   ; RTC count registers are unlocked to allow Write access.
0410EA             0081*                                  ; RTC counter is disabled.
0410EA             0082*  
0410EA             0083*  ; prt_reload_emulator: equ 11234 ; 1/102.4 seconds on emulator with 16 clock divider
0410EA             0084*  
0410EA             0085*  prt_reload_emulator: equ 11519 ; 1 centisecond on emulator with 16 clock divider
0410EA             0086*  prt_reload_hardware: equ 11532 ; 1 centisecond on hardware with 16 clock divider
0410EA 00 00 00    0087*  prt_reload: dl 0x000000
0410ED             0088*  
0410ED             0089*  ; set PRT timer
0410ED             0090*  prt_set:
0410ED 21 00 00 00 0091*      ld hl,0
0410F1 22 3B 11 04 0092*      ld (prt_irq_counter),hl
0410F5 2A EA 10 04 0093*      ld hl,(prt_reload)
0410F9 ED 29 84    0094*      out0 ($84),l
0410FC ED 21 85    0095*  	out0 ($85),h
0410FF             0096*  ; disable timer
0410FF 3E 06       0097*      ld a,PRT_IRQ_0 | IRQ_EN_0 | PRT_MODE_0 | CLK_DIV_16 | RST_EN_1 | PRT_EN_0
041101 ED 39 83    0098*  	out0 ($83),a
041104             0099*  ; enable timer,with interrupt and CONTINUOUS mode,clock divider 16
041104 3E 57       0100*      ld a,PRT_IRQ_0 | IRQ_EN_1 | PRT_MODE_1 | CLK_DIV_16 | RST_EN_1 | PRT_EN_1
041106 ED 39 83    0101*  	out0 ($83),a
041109 C9          0102*      ret
04110A             0103*  
04110A             0104*  ; ===============================================
04110A             0105*  ; PRT Timer Interrupt Handling
04110A             0106*  ; https://github.com/tomm/agon-cpu-emulator/blob/main/sdcard/regression_suite/timerirq.asm
04110A             0107*  ; -----------------------------------------------
04110A             0108*  prt_irq_init:
04110A             0109*      ; set up interrupt vector table 2
04110A 21 00 00 00 0110*  	ld hl,0
04110E 3A 0C 01 00 0111*  	ld a,($10c)
041112 6F          0112*  	ld l,a
041113 3A 0D 01 00 0113*  	ld a,($10d)
041117 67          0114*  	ld h,a
041118             0115*  
041118             0116*  	; skip over CALL ($c3)
041118 23          0117*  	inc hl
041119             0118*  	; load address of jump into vector table 2 (in ram)
041119 ED 27       0119*  	ld hl,(hl)
04111B             0120*  
04111B             0121*  	; write CALL prt_irq_handler to vector table 2
04111B 3E C3       0122*  	ld a,$c3
04111D 77          0123*  	ld (hl),a
04111E 23          0124*  	inc hl
04111F 11 26 11 04 0125*  	ld de,prt_irq_handler
041123 ED 1F       0126*  	ld (hl),de
041125             0127*  
041125 C9          0128*      ret
041126             0129*  
041126             0130*  prt_irq_handler:
041126 F3          0131*  	di
041127 F5          0132*  	push af
041128 E5          0133*      push hl
041129 ED 38 83    0134*  	in0 a,($83)
04112C 2A 3B 11 04 0135*  	ld hl,(prt_irq_counter)
041130 23          0136*  	inc hl
041131 22 3B 11 04 0137*  	ld (prt_irq_counter),hl
041135 E1          0138*      pop hl
041136 F1          0139*  	pop af
041137 FB          0140*  	ei
041138 5B ED 4D    0141*  	reti.l
04113B             0142*  
04113B             0143*  prt_irq_counter:
04113B 00 00 00    0144*  	.dl 0
04113E             0145*  prt_irq_counter_saved:
04113E 00 00 00    0146*      .dl 0
041141             0147*  
041141             0148*  prt_loop_reset:
041141 E5          0149*      push hl
041142 21 00 00 00 0150*  	ld hl,0
041146 22 3B 11 04 0151*  	ld (prt_irq_counter),hl
04114A 22 AC 11 04 0152*      ld (prt_loop_counter),hl
04114E 22 AF 11 04 0153*      ld (prt_loops),hl
041152 CD ED 10 04 0154*      call prt_set
041156 E1          0155*      pop hl
041157 C9          0156*      ret
041158             0157*  
041158             0158*  prt_loop_start:
041158 E5          0159*      push hl
041159 21 00 00 00 0160*  	ld hl,0
04115D 22 3B 11 04 0161*  	ld (prt_irq_counter),hl
041161 E1          0162*      pop hl
041162 C9          0163*      ret
041163             0164*  
041163             0165*  prt_loop_stop:
041163 E5          0166*      push hl
041164 D5          0167*      push de
041165 2A 3B 11 04 0168*      ld hl,(prt_irq_counter)
041169 ED 5B AC 11 0169*      ld de,(prt_loop_counter)
       04          
04116E 19          0170*      add hl,de
04116F 22 AC 11 04 0171*      ld (prt_loop_counter),hl
041173 21 00 00 00 0172*      ld hl,0
041177 22 3B 11 04 0173*      ld (prt_irq_counter),hl
04117B 2A AF 11 04 0174*      ld hl,(prt_loops)
04117F 23          0175*      inc hl
041180 22 AF 11 04 0176*      ld (prt_loops),hl
041184 D1          0177*      pop de
041185 E1          0178*      pop hl
041186 C9          0179*      ret
041187             0180*  
041187             0181*  ; inputs: bc = y,x text coordinates to print
041187             0182*  prt_loop_print:
041187 F5          0183*      push af
041188 E5          0184*      push hl
041189 C5          0185*      push bc
04118A D5          0186*      push de
04118B DD E5       0187*      push ix
04118D FD E5       0188*      push iy
04118F CD 8D 03 04 0189*      call vdu_move_cursor
041193             0190*  
041193 2A AC 11 04 0191*      ld hl,(prt_loop_counter)
041197 CD E2 0C 04 0192*      call printDec
04119B             0193*  
04119B 2A AF 11 04 0194*      ld hl,(prt_loops)
04119F CD E2 0C 04 0195*      call printDec
0411A3             0196*  
0411A3 FD E1       0197*      pop iy
0411A5 DD E1       0198*      pop ix
0411A7 D1          0199*      pop de
0411A8 C1          0200*      pop bc
0411A9 E1          0201*      pop hl
0411AA F1          0202*      pop af
0411AB C9          0203*      ret
0411AC             0204*  
0411AC             0205*  prt_loop_counter:
0411AC 00 00 00    0206*      .dl 0
0411AF             0207*  prt_loops:
0411AF 00 00 00    0208*      .dl 0
0411B2             0209*  
0411B2             0210*  ; ===============================================
0411B2             0211*  ; Timer functions
0411B2             0212*  ; -----------------------------------------------
0411B2             0213*  ; set a countdown timer
0411B2             0214*  ; inputs: hl = time to set in 1/120ths of a second; iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
0411B2             0215*  ; returns: hl = current time
0411B2             0216*  tmr_set:
0411B2 FD 2F 03    0217*      ld (iy+3),hl            ; set time remaining
0411B5             0218*      MOSCALL mos_sysvars     ; ix points to syvars table
0411B5 3E 08       0001*M 			LD	A, function
0411B7 5B CF       0002*M 			RST.LIL	08h
0411B9 DD 27 00    0219*      ld hl,(ix+sysvar_time)  ; get current time
0411BC FD 2F 00    0220*      ld (iy+0),hl            ; set start time
0411BF C9          0221*      ret
0411C0             0222*  
0411C0             0223*  ; gets time remaining on a countdown timer
0411C0             0224*  ; inputs: iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
0411C0             0225*  ; returns: hl pos = time remaining in 1/120ths of a second,hl neg = time past expiration
0411C0             0226*  ;          sign flags: pos = time not expired,zero or neg = time expired
0411C0             0227*  tmr_get:
0411C0             0228*      MOSCALL mos_sysvars     ; ix points to syvars table
0411C0 3E 08       0001*M 			LD	A, function
0411C2 5B CF       0002*M 			RST.LIL	08h
0411C4 DD 17 00    0229*      ld de,(ix+sysvar_time)  ; get current time
0411C7 FD 27 00    0230*      ld hl,(iy+0)            ; get start time
0411CA AF          0231*      xor a                   ; clear carry
0411CB ED 52       0232*      sbc hl,de               ; hl = time elapsed (will always be zero or negative)
0411CD FD 17 03    0233*      ld de,(iy+3)            ; get timer set value
0411D0 AF          0234*      xor a                   ; clear carry
0411D1 ED 5A       0235*      adc hl,de               ; hl = time remaining
0411D3             0236*                              ; (we do adc because add hl,rr doesn't set sign or zero flags)
0411D3 C9          0237*      ret
0411D4             0238*  
0411D4             0239*  tmr_test: ds 6 ; example of a buffer to hold timer data
0411DA             0240*  
0411DA 00 00 00    0241*  timestamp_now: dl 0
0411DD 00 00 00    0242*  timestamp_old: dl 0
0411E0 00 00 00    0243*  timestamp_chg: dl 0
0411E3             0244*  
0411E3             0245*  ; update the global timestamp from the system clock
0411E3             0246*  ; inputs: none
0411E3             0247*  ; returns: hl = time elapsed in 1/120ths of a second
0411E3             0248*  ;          de = current time
0411E3             0249*  ;          ix = pointer to syvars table
0411E3             0250*  ; destroys: af,hl,de,ix
0411E3             0251*  timestamp_tick:
0411E3 ED 5B DA 11 0252*      ld de,(timestamp_now)   ; get previous time
       04          
0411E8 ED 53 DD 11 0253*      ld (timestamp_old),de   ; save previous time
       04          
0411ED             0254*      MOSCALL mos_sysvars     ; ix points to syvars table
0411ED 3E 08       0001*M 			LD	A, function
0411EF 5B CF       0002*M 			RST.LIL	08h
0411F1 DD 27 00    0255*      ld hl,(ix+sysvar_time)  ; get current time
0411F4 22 DA 11 04 0256*      ld (timestamp_now),hl   ; save current time
0411F8 AF          0257*      xor a                   ; clear carry
0411F9 ED 52       0258*      sbc hl,de               ; hl = time elapsed
0411FB 22 E0 11 04 0259*      ld (timestamp_chg),hl   ; save elapsed time
0411FF C9          0260*      ret
041200             0261*  
041200             0262*  ; set a countdown timer
041200             0263*  ; inputs: hl = time to set in 1/120ths of a second; iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
041200             0264*  ; requires: timestamp_tick to be called at least once before this function
041200             0265*  ; returns: hl = current time
041200             0266*  ; destroys: hl
041200             0267*  timestamp_tmr_set:
041200 FD 2F 03    0268*      ld (iy+3),hl            ; set time remaining
041203 2A DA 11 04 0269*      ld hl,(timestamp_now)   ; get current timestamp
041207 FD 2F 00    0270*      ld (iy+0),hl            ; set start time
04120A C9          0271*      ret
04120B             0272*  
04120B             0273*  ; gets time remaining on a countdown timer following the global timestamp
04120B             0274*  ; inputs: iy = pointer to 3-byte buffer holding start time,iy+3 = pointer to 3-byte buffer holding timer set value
04120B             0275*  ; requires: timestamp_tick to be called at least once before this function
04120B             0276*  ; returns: hl pos = time remaining in 1/120ths of a second,hl neg = time past expiration
04120B             0277*  ;          sign flags: pos = time not expired,zero or neg = time expired
04120B             0278*  ; destroys: af,hl,de
04120B             0279*  timestamp_tmr_get:
04120B ED 5B DA 11 0280*      ld de,(timestamp_now)   ; get current timestamp
       04          
041210 FD 27 00    0281*      ld hl,(iy+0)            ; get start time
041213 AF          0282*      xor a                   ; clear carry
041214 ED 52       0283*      sbc hl,de               ; hl = time elapsed (will always be zero or negative)
041216 FD 17 03    0284*      ld de,(iy+3)            ; get timer set value
041219 AF          0285*      xor a                   ; clear carry
04121A ED 5A       0286*      adc hl,de               ; hl = time remaining
04121C             0287*                              ; (we do adc because add hl,rr doesn't set sign or zero flags)
04121C C9          0288*      ret
04121D             0289*  
04121D             0290*  ; set a stopwatch
04121D             0291*  ; returns: hl = start time
04121D             0292*  ; destroys: hl,ix
04121D             0293*  stopwatch_set:
04121D             0294*      MOSCALL mos_sysvars     ; ix points to syvars table
04121D 3E 08       0001*M 			LD	A, function
04121F 5B CF       0002*M 			RST.LIL	08h
041221 DD 27 00    0295*      ld hl,(ix+sysvar_time)  ; get current time
041224 22 39 12 04 0296*      ld (stopwatch_started),hl            ; set start time
041228 C9          0297*      ret
041229             0298*  
041229             0299*  ; gets time elapsed on a stopwatch
041229             0300*  ; returns: hl = time elapsed in 1/120ths of a second
041229             0301*  ; destroys: af,hl,de,ix
041229             0302*  stopwatch_get:
041229             0303*      MOSCALL mos_sysvars     ; ix points to syvars table
041229 3E 08       0001*M 			LD	A, function
04122B 5B CF       0002*M 			RST.LIL	08h
04122D DD 27 00    0304*      ld hl,(ix+sysvar_time)  ; get current time
041230 ED 5B 39 12 0305*      ld de,(stopwatch_started)            ; get start time
       04          
041235 AF          0306*      xor a                   ; clear carry
041236 ED 52       0307*      sbc hl,de               ; hl = time elapsed (will always be zero or positive)
041238 C9          0308*      ret
041239             0309*  
041239             0310*  stopwatch_started: ds 3 ; buffer to hold stopwatch start time
04123C             0311*  
04123C             0312*  ; ------------------
04123C             0313*  ; delay routine
04123C             0314*  ; Author: Richard Turrnidge
04123C             0315*  ; https://github.com/richardturnnidge/lessons/blob/main/slowdown.asm
04123C             0316*  ; routine waits a fixed time,then returns
04123C             0317*  ; arrive with A =  the delay byte. One bit to be set only.
04123C             0318*  ; eg. ld A,00000100b
04123C             0319*  
04123C             0320*  multiPurposeDelay:
04123C F5          0321*      push af
04123D C5          0322*      push bc
04123E DD E5       0323*      push ix
041240 47          0324*      ld b,a
041241 3E 08       0325*      ld a,$08
041243 5B CF       0326*      RST.LIL	08h                 ; get IX pointer to sysvars
041245             0327*  
041245             0328*  waitLoop:
041245             0329*  
041245 DD 7E 00    0330*      ld a,(ix + 0)              ; ix+0h is lowest byte of clock timer
041248             0331*  
041248             0332*                                  ;   we check if bit set is same as last time we checked.
041248             0333*                                  ;   bit 0 - don't use
041248             0334*                                  ;   bit 1 - changes 64 times per second
041248             0335*                                  ;   bit 2 - changes 32 times per second
041248             0336*                                  ;   bit 3 - changes 16 times per second
041248             0337*  
041248             0338*                                  ;   bit 4 - changes 8 times per second
041248             0339*                                  ;   bit 5 - changes 4 times per second
041248             0340*                                  ;   bit 6 - changes 2 times per second
041248             0341*                                  ;   bit 7 - changes 1 times per second
041248 A0          0342*      and b
041249 4F          0343*      ld c,a
04124A 3A 5B 12 04 0344*      ld a,(oldTimeStamp)
04124E B9          0345*      cp c                        ; is A same as last value?
04124F 28 F4       0346*      jr z,waitLoop              ; loop here if it is
041251 79          0347*      ld a,c
041252 32 5B 12 04 0348*      ld (oldTimeStamp),a        ; set new value
041256             0349*  
041256 DD E1       0350*      pop ix
041258 C1          0351*      pop bc
041259 F1          0352*      pop af
04125A C9          0353*      ret
04125B             0354*  
04125B 00          0355*  oldTimeStamp:   .db 00h
04125C             0019       include "ez80/app/src/asm/def3d_teapot.asm"
04125C             0001*  teapot_num_vertices: equ 1728
04125C             0002*  
04125C             0003*  teapot_vertices:
04125C 40 34 6E A6 0004*      dw 13376,-22930,0
       00 00       
041262 34 2D 6E A6 0005*      dw 11572,-22930,-6797
       73 E5       
041268 B2 2C 2B A3 0006*      dw 11442,-23765,-6720
       C0 E5       
04126E B2 2C 2B A3 0007*      dw 11442,-23765,-6720
       C0 E5       
041274 A9 33 2B A3 0008*      dw 13225,-23765,0
       00 00       
04127A 40 34 6E A6 0009*      dw 13376,-22930,0
       00 00       
041280 A9 33 2B A3 0010*      dw 13225,-23765,0
       00 00       
041286 B2 2C 2B A3 0011*      dw 11442,-23765,-6720
       C0 E5       
04128C 40 2E 2B A3 0012*      dw 11840,-23765,-6954
       D6 E4       
041292 40 2E 2B A3 0013*      dw 11840,-23765,-6954
       D6 E4       
041298 75 35 2B A3 0014*      dw 13685,-23765,0
       00 00       
04129E A9 33 2B A3 0015*      dw 13225,-23765,0
       00 00       
0412A4 75 35 2B A3 0016*      dw 13685,-23765,0
       00 00       
0412AA 40 2E 2B A3 0017*      dw 11840,-23765,-6954
       D6 E4       
0412B0 6F 30 6E A6 0018*      dw 12399,-22930,-7282
       8E E3       
0412B6 6F 30 6E A6 0019*      dw 12399,-22930,-7282
       8E E3       
0412BC FB 37 6E A6 0020*      dw 14331,-22930,0
       00 00       
0412C2 75 35 2B A3 0021*      dw 13685,-23765,0
       00 00       
0412C8 34 2D 6E A6 0022*      dw 11572,-22930,-6797
       73 E5       
0412CE 8D 1A 6E A6 0023*      dw 6797,-22930,-11572
       CC D2       
0412D4 40 1A 2B A3 0024*      dw 6720,-23765,-11442
       4E D3       
0412DA 40 1A 2B A3 0025*      dw 6720,-23765,-11442
       4E D3       
0412E0 B2 2C 2B A3 0026*      dw 11442,-23765,-6720
       C0 E5       
0412E6 34 2D 6E A6 0027*      dw 11572,-22930,-6797
       73 E5       
0412EC B2 2C 2B A3 0028*      dw 11442,-23765,-6720
       C0 E5       
0412F2 40 1A 2B A3 0029*      dw 6720,-23765,-11442
       4E D3       
0412F8 2A 1B 29 A3 0030*      dw 6954,-23767,-11840
       C0 D1       
0412FE 2A 1B 29 A3 0031*      dw 6954,-23767,-11840
       C0 D1       
041304 40 2E 2B A3 0032*      dw 11840,-23765,-6954
       D6 E4       
04130A B2 2C 2B A3 0033*      dw 11442,-23765,-6720
       C0 E5       
041310 40 2E 2B A3 0034*      dw 11840,-23765,-6954
       D6 E4       
041316 2A 1B 29 A3 0035*      dw 6954,-23767,-11840
       C0 D1       
04131C 72 1C 6E A6 0036*      dw 7282,-22930,-12399
       91 CF       
041322 72 1C 6E A6 0037*      dw 7282,-22930,-12399
       91 CF       
041328 6F 30 6E A6 0038*      dw 12399,-22930,-7282
       8E E3       
04132E 40 2E 2B A3 0039*      dw 11840,-23765,-6954
       D6 E4       
041334 8D 1A 6E A6 0040*      dw 6797,-22930,-11572
       CC D2       
04133A 00 00 6E A6 0041*      dw 0,-22930,-13376
       C0 CB       
041340 00 00 2B A3 0042*      dw 0,-23765,-13225
       57 CC       
041346 00 00 2B A3 0043*      dw 0,-23765,-13225
       57 CC       
04134C 40 1A 2B A3 0044*      dw 6720,-23765,-11442
       4E D3       
041352 8D 1A 6E A6 0045*      dw 6797,-22930,-11572
       CC D2       
041358 40 1A 2B A3 0046*      dw 6720,-23765,-11442
       4E D3       
04135E 00 00 2B A3 0047*      dw 0,-23765,-13225
       57 CC       
041364 00 00 29 A3 0048*      dw 0,-23767,-13685
       8B CA       
04136A 00 00 29 A3 0049*      dw 0,-23767,-13685
       8B CA       
041370 2A 1B 29 A3 0050*      dw 6954,-23767,-11840
       C0 D1       
041376 40 1A 2B A3 0051*      dw 6720,-23765,-11442
       4E D3       
04137C 2A 1B 29 A3 0052*      dw 6954,-23767,-11840
       C0 D1       
041382 00 00 29 A3 0053*      dw 0,-23767,-13685
       8B CA       
041388 00 00 6E A6 0054*      dw 0,-22930,-14331
       05 C8       
04138E 00 00 6E A6 0055*      dw 0,-22930,-14331
       05 C8       
041394 72 1C 6E A6 0056*      dw 7282,-22930,-12399
       91 CF       
04139A 2A 1B 29 A3 0057*      dw 6954,-23767,-11840
       C0 D1       
0413A0 00 00 6E A6 0058*      dw 0,-22930,-13376
       C0 CB       
0413A6 F5 E3 6E A6 0059*      dw -7179,-22930,-11572
       CC D2       
0413AC 4F E5 2B A3 0060*      dw -6833,-23765,-11442
       4E D3       
0413B2 4F E5 2B A3 0061*      dw -6833,-23765,-11442
       4E D3       
0413B8 00 00 2B A3 0062*      dw 0,-23765,-13225
       57 CC       
0413BE 00 00 6E A6 0063*      dw 0,-22930,-13376
       C0 CB       
0413C4 00 00 2B A3 0064*      dw 0,-23765,-13225
       57 CC       
0413CA 4F E5 2B A3 0065*      dw -6833,-23765,-11442
       4E D3       
0413D0 C7 E4 2B A3 0066*      dw -6969,-23765,-11840
       C0 D1       
0413D6 C7 E4 2B A3 0067*      dw -6969,-23765,-11840
       C0 D1       
0413DC 00 00 29 A3 0068*      dw 0,-23767,-13685
       8B CA       
0413E2 00 00 2B A3 0069*      dw 0,-23765,-13225
       57 CC       
0413E8 00 00 29 A3 0070*      dw 0,-23767,-13685
       8B CA       
0413EE C7 E4 2B A3 0071*      dw -6969,-23765,-11840
       C0 D1       
0413F4 8E E3 6E A6 0072*      dw -7282,-22930,-12399
       91 CF       
0413FA 8E E3 6E A6 0073*      dw -7282,-22930,-12399
       91 CF       
041400 00 00 6E A6 0074*      dw 0,-22930,-14331
       05 C8       
041406 00 00 29 A3 0075*      dw 0,-23767,-13685
       8B CA       
04140C F5 E3 6E A6 0076*      dw -7179,-22930,-11572
       CC D2       
041412 0D D2 6E A6 0077*      dw -11763,-22930,-6797
       73 E5       
041418 15 D3 2B A3 0078*      dw -11499,-23765,-6720
       C0 E5       
04141E 15 D3 2B A3 0079*      dw -11499,-23765,-6720
       C0 E5       
041424 4F E5 2B A3 0080*      dw -6833,-23765,-11442
       4E D3       
04142A F5 E3 6E A6 0081*      dw -7179,-22930,-11572
       CC D2       
041430 4F E5 2B A3 0082*      dw -6833,-23765,-11442
       4E D3       
041436 15 D3 2B A3 0083*      dw -11499,-23765,-6720
       C0 E5       
04143C B9 D1 2B A3 0084*      dw -11847,-23765,-6954
       D6 E4       
041442 B9 D1 2B A3 0085*      dw -11847,-23765,-6954
       D6 E4       
041448 C7 E4 2B A3 0086*      dw -6969,-23765,-11840
       C0 D1       
04144E 4F E5 2B A3 0087*      dw -6833,-23765,-11442
       4E D3       
041454 C7 E4 2B A3 0088*      dw -6969,-23765,-11840
       C0 D1       
04145A B9 D1 2B A3 0089*      dw -11847,-23765,-6954
       D6 E4       
041460 91 CF 6E A6 0090*      dw -12399,-22930,-7282
       8E E3       
041466 91 CF 6E A6 0091*      dw -12399,-22930,-7282
       8E E3       
04146C 8E E3 6E A6 0092*      dw -7282,-22930,-12399
       91 CF       
041472 C7 E4 2B A3 0093*      dw -6969,-23765,-11840
       C0 D1       
041478 0D D2 6E A6 0094*      dw -11763,-22930,-6797
       73 E5       
04147E C0 CB 6E A6 0095*      dw -13376,-22930,0
       00 00       
041484 57 CC 2B A3 0096*      dw -13225,-23765,0
       00 00       
04148A 57 CC 2B A3 0097*      dw -13225,-23765,0
       00 00       
041490 15 D3 2B A3 0098*      dw -11499,-23765,-6720
       C0 E5       
041496 0D D2 6E A6 0099*      dw -11763,-22930,-6797
       73 E5       
04149C 15 D3 2B A3 0100*      dw -11499,-23765,-6720
       C0 E5       
0414A2 57 CC 2B A3 0101*      dw -13225,-23765,0
       00 00       
0414A8 8B CA 2B A3 0102*      dw -13685,-23765,0
       00 00       
0414AE 8B CA 2B A3 0103*      dw -13685,-23765,0
       00 00       
0414B4 B9 D1 2B A3 0104*      dw -11847,-23765,-6954
       D6 E4       
0414BA 15 D3 2B A3 0105*      dw -11499,-23765,-6720
       C0 E5       
0414C0 B9 D1 2B A3 0106*      dw -11847,-23765,-6954
       D6 E4       
0414C6 8B CA 2B A3 0107*      dw -13685,-23765,0
       00 00       
0414CC 05 C8 6E A6 0108*      dw -14331,-22930,0
       00 00       
0414D2 05 C8 6E A6 0109*      dw -14331,-22930,0
       00 00       
0414D8 91 CF 6E A6 0110*      dw -12399,-22930,-7282
       8E E3       
0414DE B9 D1 2B A3 0111*      dw -11847,-23765,-6954
       D6 E4       
0414E4 C0 CB 6E A6 0112*      dw -13376,-22930,0
       00 00       
0414EA CC D2 6E A6 0113*      dw -11572,-22930,6797
       8D 1A       
0414F0 4E D3 2B A3 0114*      dw -11442,-23765,6720
       40 1A       
0414F6 4E D3 2B A3 0115*      dw -11442,-23765,6720
       40 1A       
0414FC 57 CC 2B A3 0116*      dw -13225,-23765,0
       00 00       
041502 C0 CB 6E A6 0117*      dw -13376,-22930,0
       00 00       
041508 57 CC 2B A3 0118*      dw -13225,-23765,0
       00 00       
04150E 4E D3 2B A3 0119*      dw -11442,-23765,6720
       40 1A       
041514 C0 D1 2B A3 0120*      dw -11840,-23765,6954
       2A 1B       
04151A C0 D1 2B A3 0121*      dw -11840,-23765,6954
       2A 1B       
041520 8B CA 2B A3 0122*      dw -13685,-23765,0
       00 00       
041526 57 CC 2B A3 0123*      dw -13225,-23765,0
       00 00       
04152C 8B CA 2B A3 0124*      dw -13685,-23765,0
       00 00       
041532 C0 D1 2B A3 0125*      dw -11840,-23765,6954
       2A 1B       
041538 91 CF 6E A6 0126*      dw -12399,-22930,7282
       72 1C       
04153E 91 CF 6E A6 0127*      dw -12399,-22930,7282
       72 1C       
041544 05 C8 6E A6 0128*      dw -14331,-22930,0
       00 00       
04154A 8B CA 2B A3 0129*      dw -13685,-23765,0
       00 00       
041550 CC D2 6E A6 0130*      dw -11572,-22930,6797
       8D 1A       
041556 73 E5 6E A6 0131*      dw -6797,-22930,11572
       34 2D       
04155C C0 E5 2B A3 0132*      dw -6720,-23765,11442
       B2 2C       
041562 C0 E5 2B A3 0133*      dw -6720,-23765,11442
       B2 2C       
041568 4E D3 2B A3 0134*      dw -11442,-23765,6720
       40 1A       
04156E CC D2 6E A6 0135*      dw -11572,-22930,6797
       8D 1A       
041574 4E D3 2B A3 0136*      dw -11442,-23765,6720
       40 1A       
04157A C0 E5 2B A3 0137*      dw -6720,-23765,11442
       B2 2C       
041580 D6 E4 2B A3 0138*      dw -6954,-23765,11840
       40 2E       
041586 D6 E4 2B A3 0139*      dw -6954,-23765,11840
       40 2E       
04158C C0 D1 2B A3 0140*      dw -11840,-23765,6954
       2A 1B       
041592 4E D3 2B A3 0141*      dw -11442,-23765,6720
       40 1A       
041598 C0 D1 2B A3 0142*      dw -11840,-23765,6954
       2A 1B       
04159E D6 E4 2B A3 0143*      dw -6954,-23765,11840
       40 2E       
0415A4 8E E3 6E A6 0144*      dw -7282,-22930,12399
       6F 30       
0415AA 8E E3 6E A6 0145*      dw -7282,-22930,12399
       6F 30       
0415B0 91 CF 6E A6 0146*      dw -12399,-22930,7282
       72 1C       
0415B6 C0 D1 2B A3 0147*      dw -11840,-23765,6954
       2A 1B       
0415BC 73 E5 6E A6 0148*      dw -6797,-22930,11572
       34 2D       
0415C2 00 00 6E A6 0149*      dw 0,-22930,13376
       40 34       
0415C8 00 00 2B A3 0150*      dw 0,-23765,13225
       A9 33       
0415CE 00 00 2B A3 0151*      dw 0,-23765,13225
       A9 33       
0415D4 C0 E5 2B A3 0152*      dw -6720,-23765,11442
       B2 2C       
0415DA 73 E5 6E A6 0153*      dw -6797,-22930,11572
       34 2D       
0415E0 C0 E5 2B A3 0154*      dw -6720,-23765,11442
       B2 2C       
0415E6 00 00 2B A3 0155*      dw 0,-23765,13225
       A9 33       
0415EC 00 00 2B A3 0156*      dw 0,-23765,13685
       75 35       
0415F2 00 00 2B A3 0157*      dw 0,-23765,13685
       75 35       
0415F8 D6 E4 2B A3 0158*      dw -6954,-23765,11840
       40 2E       
0415FE C0 E5 2B A3 0159*      dw -6720,-23765,11442
       B2 2C       
041604 D6 E4 2B A3 0160*      dw -6954,-23765,11840
       40 2E       
04160A 00 00 2B A3 0161*      dw 0,-23765,13685
       75 35       
041610 00 00 6E A6 0162*      dw 0,-22930,14331
       FB 37       
041616 00 00 6E A6 0163*      dw 0,-22930,14331
       FB 37       
04161C 8E E3 6E A6 0164*      dw -7282,-22930,12399
       6F 30       
041622 D6 E4 2B A3 0165*      dw -6954,-23765,11840
       40 2E       
041628 00 00 6E A6 0166*      dw 0,-22930,13376
       40 34       
04162E 8D 1A 6E A6 0167*      dw 6797,-22930,11572
       34 2D       
041634 40 1A 2B A3 0168*      dw 6720,-23765,11442
       B2 2C       
04163A 40 1A 2B A3 0169*      dw 6720,-23765,11442
       B2 2C       
041640 00 00 2B A3 0170*      dw 0,-23765,13225
       A9 33       
041646 00 00 6E A6 0171*      dw 0,-22930,13376
       40 34       
04164C 00 00 2B A3 0172*      dw 0,-23765,13225
       A9 33       
041652 40 1A 2B A3 0173*      dw 6720,-23765,11442
       B2 2C       
041658 2A 1B 2B A3 0174*      dw 6954,-23765,11840
       40 2E       
04165E 2A 1B 2B A3 0175*      dw 6954,-23765,11840
       40 2E       
041664 00 00 2B A3 0176*      dw 0,-23765,13685
       75 35       
04166A 00 00 2B A3 0177*      dw 0,-23765,13225
       A9 33       
041670 00 00 2B A3 0178*      dw 0,-23765,13685
       75 35       
041676 2A 1B 2B A3 0179*      dw 6954,-23765,11840
       40 2E       
04167C 72 1C 6E A6 0180*      dw 7282,-22930,12399
       6F 30       
041682 72 1C 6E A6 0181*      dw 7282,-22930,12399
       6F 30       
041688 00 00 6E A6 0182*      dw 0,-22930,14331
       FB 37       
04168E 00 00 2B A3 0183*      dw 0,-23765,13685
       75 35       
041694 8D 1A 6E A6 0184*      dw 6797,-22930,11572
       34 2D       
04169A 34 2D 6E A6 0185*      dw 11572,-22930,6797
       8D 1A       
0416A0 B2 2C 2B A3 0186*      dw 11442,-23765,6720
       40 1A       
0416A6 B2 2C 2B A3 0187*      dw 11442,-23765,6720
       40 1A       
0416AC 40 1A 2B A3 0188*      dw 6720,-23765,11442
       B2 2C       
0416B2 8D 1A 6E A6 0189*      dw 6797,-22930,11572
       34 2D       
0416B8 40 1A 2B A3 0190*      dw 6720,-23765,11442
       B2 2C       
0416BE B2 2C 2B A3 0191*      dw 11442,-23765,6720
       40 1A       
0416C4 40 2E 2B A3 0192*      dw 11840,-23765,6954
       2A 1B       
0416CA 40 2E 2B A3 0193*      dw 11840,-23765,6954
       2A 1B       
0416D0 2A 1B 2B A3 0194*      dw 6954,-23765,11840
       40 2E       
0416D6 40 1A 2B A3 0195*      dw 6720,-23765,11442
       B2 2C       
0416DC 2A 1B 2B A3 0196*      dw 6954,-23765,11840
       40 2E       
0416E2 40 2E 2B A3 0197*      dw 11840,-23765,6954
       2A 1B       
0416E8 6F 30 6E A6 0198*      dw 12399,-22930,7282
       72 1C       
0416EE 6F 30 6E A6 0199*      dw 12399,-22930,7282
       72 1C       
0416F4 72 1C 6E A6 0200*      dw 7282,-22930,12399
       6F 30       
0416FA 2A 1B 2B A3 0201*      dw 6954,-23765,11840
       40 2E       
041700 34 2D 6E A6 0202*      dw 11572,-22930,6797
       8D 1A       
041706 40 34 6E A6 0203*      dw 13376,-22930,0
       00 00       
04170C A9 33 2B A3 0204*      dw 13225,-23765,0
       00 00       
041712 A9 33 2B A3 0205*      dw 13225,-23765,0
       00 00       
041718 B2 2C 2B A3 0206*      dw 11442,-23765,6720
       40 1A       
04171E 34 2D 6E A6 0207*      dw 11572,-22930,6797
       8D 1A       
041724 B2 2C 2B A3 0208*      dw 11442,-23765,6720
       40 1A       
04172A A9 33 2B A3 0209*      dw 13225,-23765,0
       00 00       
041730 75 35 2B A3 0210*      dw 13685,-23765,0
       00 00       
041736 75 35 2B A3 0211*      dw 13685,-23765,0
       00 00       
04173C 40 2E 2B A3 0212*      dw 11840,-23765,6954
       2A 1B       
041742 B2 2C 2B A3 0213*      dw 11442,-23765,6720
       40 1A       
041748 40 2E 2B A3 0214*      dw 11840,-23765,6954
       2A 1B       
04174E 75 35 2B A3 0215*      dw 13685,-23765,0
       00 00       
041754 FB 37 6E A6 0216*      dw 14331,-22930,0
       00 00       
04175A FB 37 6E A6 0217*      dw 14331,-22930,0
       00 00       
041760 6F 30 6E A6 0218*      dw 12399,-22930,7282
       72 1C       
041766 40 2E 2B A3 0219*      dw 11840,-23765,6954
       2A 1B       
04176C FB 37 6E A6 0220*      dw 14331,-22930,0
       00 00       
041772 6F 30 6E A6 0221*      dw 12399,-22930,-7282
       8E E3       
041778 35 38 EB B9 0222*      dw 14389,-17941,-8452
       FC DE       
04177E 35 38 EB B9 0223*      dw 14389,-17941,-8452
       FC DE       
041784 F8 40 EB B9 0224*      dw 16632,-17941,0
       00 00       
04178A FB 37 6E A6 0225*      dw 14331,-22930,0
       00 00       
041790 F8 40 EB B9 0226*      dw 16632,-17941,0
       00 00       
041796 35 38 EB B9 0227*      dw 14389,-17941,-8452
       FC DE       
04179C 2F 3E CA CC 0228*      dw 15919,-13110,-9350
       7A DB       
0417A2 2F 3E CA CC 0229*      dw 15919,-13110,-9350
       7A DB       
0417A8 E1 47 CA CC 0230*      dw 18401,-13110,0
       00 00       
0417AE F8 40 EB B9 0231*      dw 16632,-17941,0
       00 00       
0417B4 E1 47 CA CC 0232*      dw 18401,-13110,0
       00 00       
0417BA 2F 3E CA CC 0233*      dw 15919,-13110,-9350
       7A DB       
0417C0 95 40 69 DE 0234*      dw 16533,-8599,-9709
       13 DA       
0417C6 95 40 69 DE 0235*      dw 16533,-8599,-9709
       13 DA       
0417CC A4 4A 69 DE 0236*      dw 19108,-8599,0
       00 00       
0417D2 E1 47 CA CC 0237*      dw 18401,-13110,0
       00 00       
0417D8 6F 30 6E A6 0238*      dw 12399,-22930,-7282
       8E E3       
0417DE 72 1C 6E A6 0239*      dw 7282,-22930,-12399
       91 CF       
0417E4 04 21 EB B9 0240*      dw 8452,-17941,-14389
       CB C7       
0417EA 04 21 EB B9 0241*      dw 8452,-17941,-14389
       CB C7       
0417F0 35 38 EB B9 0242*      dw 14389,-17941,-8452
       FC DE       
0417F6 6F 30 6E A6 0243*      dw 12399,-22930,-7282
       8E E3       
0417FC 35 38 EB B9 0244*      dw 14389,-17941,-8452
       FC DE       
041802 04 21 EB B9 0245*      dw 8452,-17941,-14389
       CB C7       
041808 86 24 CA CC 0246*      dw 9350,-13110,-15919
       D1 C1       
04180E 86 24 CA CC 0247*      dw 9350,-13110,-15919
       D1 C1       
041814 2F 3E CA CC 0248*      dw 15919,-13110,-9350
       7A DB       
04181A 35 38 EB B9 0249*      dw 14389,-17941,-8452
       FC DE       
041820 2F 3E CA CC 0250*      dw 15919,-13110,-9350
       7A DB       
041826 86 24 CA CC 0251*      dw 9350,-13110,-15919
       D1 C1       
04182C ED 25 69 DE 0252*      dw 9709,-8599,-16533
       6B BF       
041832 ED 25 69 DE 0253*      dw 9709,-8599,-16533
       6B BF       
041838 95 40 69 DE 0254*      dw 16533,-8599,-9709
       13 DA       
04183E 2F 3E CA CC 0255*      dw 15919,-13110,-9350
       7A DB       
041844 72 1C 6E A6 0256*      dw 7282,-22930,-12399
       91 CF       
04184A 00 00 6E A6 0257*      dw 0,-22930,-14331
       05 C8       
041850 00 00 EB B9 0258*      dw 0,-17941,-16632
       08 BF       
041856 00 00 EB B9 0259*      dw 0,-17941,-16632
       08 BF       
04185C 04 21 EB B9 0260*      dw 8452,-17941,-14389
       CB C7       
041862 72 1C 6E A6 0261*      dw 7282,-22930,-12399
       91 CF       
041868 04 21 EB B9 0262*      dw 8452,-17941,-14389
       CB C7       
04186E 00 00 EB B9 0263*      dw 0,-17941,-16632
       08 BF       
041874 00 00 CA CC 0264*      dw 0,-13110,-18401
       1F B8       
04187A 00 00 CA CC 0265*      dw 0,-13110,-18401
       1F B8       
041880 86 24 CA CC 0266*      dw 9350,-13110,-15919
       D1 C1       
041886 04 21 EB B9 0267*      dw 8452,-17941,-14389
       CB C7       
04188C 86 24 CA CC 0268*      dw 9350,-13110,-15919
       D1 C1       
041892 00 00 CA CC 0269*      dw 0,-13110,-18401
       1F B8       
041898 00 00 69 DE 0270*      dw 0,-8599,-19108
       5C B5       
04189E 00 00 69 DE 0271*      dw 0,-8599,-19108
       5C B5       
0418A4 ED 25 69 DE 0272*      dw 9709,-8599,-16533
       6B BF       
0418AA 86 24 CA CC 0273*      dw 9350,-13110,-15919
       D1 C1       
0418B0 00 00 6E A6 0274*      dw 0,-22930,-14331
       05 C8       
0418B6 8E E3 6E A6 0275*      dw -7282,-22930,-12399
       91 CF       
0418BC FC DE EB B9 0276*      dw -8452,-17941,-14389
       CB C7       
0418C2 FC DE EB B9 0277*      dw -8452,-17941,-14389
       CB C7       
0418C8 00 00 EB B9 0278*      dw 0,-17941,-16632
       08 BF       
0418CE 00 00 6E A6 0279*      dw 0,-22930,-14331
       05 C8       
0418D4 00 00 EB B9 0280*      dw 0,-17941,-16632
       08 BF       
0418DA FC DE EB B9 0281*      dw -8452,-17941,-14389
       CB C7       
0418E0 7A DB CA CC 0282*      dw -9350,-13110,-15919
       D1 C1       
0418E6 7A DB CA CC 0283*      dw -9350,-13110,-15919
       D1 C1       
0418EC 00 00 CA CC 0284*      dw 0,-13110,-18401
       1F B8       
0418F2 00 00 EB B9 0285*      dw 0,-17941,-16632
       08 BF       
0418F8 00 00 CA CC 0286*      dw 0,-13110,-18401
       1F B8       
0418FE 7A DB CA CC 0287*      dw -9350,-13110,-15919
       D1 C1       
041904 13 DA 69 DE 0288*      dw -9709,-8599,-16533
       6B BF       
04190A 13 DA 69 DE 0289*      dw -9709,-8599,-16533
       6B BF       
041910 00 00 69 DE 0290*      dw 0,-8599,-19108
       5C B5       
041916 00 00 CA CC 0291*      dw 0,-13110,-18401
       1F B8       
04191C 8E E3 6E A6 0292*      dw -7282,-22930,-12399
       91 CF       
041922 91 CF 6E A6 0293*      dw -12399,-22930,-7282
       8E E3       
041928 CB C7 EB B9 0294*      dw -14389,-17941,-8452
       FC DE       
04192E CB C7 EB B9 0295*      dw -14389,-17941,-8452
       FC DE       
041934 FC DE EB B9 0296*      dw -8452,-17941,-14389
       CB C7       
04193A 8E E3 6E A6 0297*      dw -7282,-22930,-12399
       91 CF       
041940 FC DE EB B9 0298*      dw -8452,-17941,-14389
       CB C7       
041946 CB C7 EB B9 0299*      dw -14389,-17941,-8452
       FC DE       
04194C D1 C1 CA CC 0300*      dw -15919,-13110,-9350
       7A DB       
041952 D1 C1 CA CC 0301*      dw -15919,-13110,-9350
       7A DB       
041958 7A DB CA CC 0302*      dw -9350,-13110,-15919
       D1 C1       
04195E FC DE EB B9 0303*      dw -8452,-17941,-14389
       CB C7       
041964 7A DB CA CC 0304*      dw -9350,-13110,-15919
       D1 C1       
04196A D1 C1 CA CC 0305*      dw -15919,-13110,-9350
       7A DB       
041970 6B BF 69 DE 0306*      dw -16533,-8599,-9709
       13 DA       
041976 6B BF 69 DE 0307*      dw -16533,-8599,-9709
       13 DA       
04197C 13 DA 69 DE 0308*      dw -9709,-8599,-16533
       6B BF       
041982 7A DB CA CC 0309*      dw -9350,-13110,-15919
       D1 C1       
041988 91 CF 6E A6 0310*      dw -12399,-22930,-7282
       8E E3       
04198E 05 C8 6E A6 0311*      dw -14331,-22930,0
       00 00       
041994 08 BF EB B9 0312*      dw -16632,-17941,0
       00 00       
04199A 08 BF EB B9 0313*      dw -16632,-17941,0
       00 00       
0419A0 CB C7 EB B9 0314*      dw -14389,-17941,-8452
       FC DE       
0419A6 91 CF 6E A6 0315*      dw -12399,-22930,-7282
       8E E3       
0419AC CB C7 EB B9 0316*      dw -14389,-17941,-8452
       FC DE       
0419B2 08 BF EB B9 0317*      dw -16632,-17941,0
       00 00       
0419B8 1F B8 CA CC 0318*      dw -18401,-13110,0
       00 00       
0419BE 1F B8 CA CC 0319*      dw -18401,-13110,0
       00 00       
0419C4 D1 C1 CA CC 0320*      dw -15919,-13110,-9350
       7A DB       
0419CA CB C7 EB B9 0321*      dw -14389,-17941,-8452
       FC DE       
0419D0 D1 C1 CA CC 0322*      dw -15919,-13110,-9350
       7A DB       
0419D6 1F B8 CA CC 0323*      dw -18401,-13110,0
       00 00       
0419DC 5C B5 69 DE 0324*      dw -19108,-8599,0
       00 00       
0419E2 5C B5 69 DE 0325*      dw -19108,-8599,0
       00 00       
0419E8 6B BF 69 DE 0326*      dw -16533,-8599,-9709
       13 DA       
0419EE D1 C1 CA CC 0327*      dw -15919,-13110,-9350
       7A DB       
0419F4 05 C8 6E A6 0328*      dw -14331,-22930,0
       00 00       
0419FA 91 CF 6E A6 0329*      dw -12399,-22930,7282
       72 1C       
041A00 CB C7 EB B9 0330*      dw -14389,-17941,8452
       04 21       
041A06 CB C7 EB B9 0331*      dw -14389,-17941,8452
       04 21       
041A0C 08 BF EB B9 0332*      dw -16632,-17941,0
       00 00       
041A12 05 C8 6E A6 0333*      dw -14331,-22930,0
       00 00       
041A18 08 BF EB B9 0334*      dw -16632,-17941,0
       00 00       
041A1E CB C7 EB B9 0335*      dw -14389,-17941,8452
       04 21       
041A24 D1 C1 CA CC 0336*      dw -15919,-13110,9350
       86 24       
041A2A D1 C1 CA CC 0337*      dw -15919,-13110,9350
       86 24       
041A30 1F B8 CA CC 0338*      dw -18401,-13110,0
       00 00       
041A36 08 BF EB B9 0339*      dw -16632,-17941,0
       00 00       
041A3C 1F B8 CA CC 0340*      dw -18401,-13110,0
       00 00       
041A42 D1 C1 CA CC 0341*      dw -15919,-13110,9350
       86 24       
041A48 6B BF 69 DE 0342*      dw -16533,-8599,9709
       ED 25       
041A4E 6B BF 69 DE 0343*      dw -16533,-8599,9709
       ED 25       
041A54 5C B5 69 DE 0344*      dw -19108,-8599,0
       00 00       
041A5A 1F B8 CA CC 0345*      dw -18401,-13110,0
       00 00       
041A60 91 CF 6E A6 0346*      dw -12399,-22930,7282
       72 1C       
041A66 8E E3 6E A6 0347*      dw -7282,-22930,12399
       6F 30       
041A6C FC DE EB B9 0348*      dw -8452,-17941,14389
       35 38       
041A72 FC DE EB B9 0349*      dw -8452,-17941,14389
       35 38       
041A78 CB C7 EB B9 0350*      dw -14389,-17941,8452
       04 21       
041A7E 91 CF 6E A6 0351*      dw -12399,-22930,7282
       72 1C       
041A84 CB C7 EB B9 0352*      dw -14389,-17941,8452
       04 21       
041A8A FC DE EB B9 0353*      dw -8452,-17941,14389
       35 38       
041A90 7A DB CA CC 0354*      dw -9350,-13110,15919
       2F 3E       
041A96 7A DB CA CC 0355*      dw -9350,-13110,15919
       2F 3E       
041A9C D1 C1 CA CC 0356*      dw -15919,-13110,9350
       86 24       
041AA2 CB C7 EB B9 0357*      dw -14389,-17941,8452
       04 21       
041AA8 D1 C1 CA CC 0358*      dw -15919,-13110,9350
       86 24       
041AAE 7A DB CA CC 0359*      dw -9350,-13110,15919
       2F 3E       
041AB4 13 DA 69 DE 0360*      dw -9709,-8599,16533
       95 40       
041ABA 13 DA 69 DE 0361*      dw -9709,-8599,16533
       95 40       
041AC0 6B BF 69 DE 0362*      dw -16533,-8599,9709
       ED 25       
041AC6 D1 C1 CA CC 0363*      dw -15919,-13110,9350
       86 24       
041ACC 8E E3 6E A6 0364*      dw -7282,-22930,12399
       6F 30       
041AD2 00 00 6E A6 0365*      dw 0,-22930,14331
       FB 37       
041AD8 00 00 EB B9 0366*      dw 0,-17941,16632
       F8 40       
041ADE 00 00 EB B9 0367*      dw 0,-17941,16632
       F8 40       
041AE4 FC DE EB B9 0368*      dw -8452,-17941,14389
       35 38       
041AEA 8E E3 6E A6 0369*      dw -7282,-22930,12399
       6F 30       
041AF0 FC DE EB B9 0370*      dw -8452,-17941,14389
       35 38       
041AF6 00 00 EB B9 0371*      dw 0,-17941,16632
       F8 40       
041AFC 00 00 CA CC 0372*      dw 0,-13110,18401
       E1 47       
041B02 00 00 CA CC 0373*      dw 0,-13110,18401
       E1 47       
041B08 7A DB CA CC 0374*      dw -9350,-13110,15919
       2F 3E       
041B0E FC DE EB B9 0375*      dw -8452,-17941,14389
       35 38       
041B14 7A DB CA CC 0376*      dw -9350,-13110,15919
       2F 3E       
041B1A 00 00 CA CC 0377*      dw 0,-13110,18401
       E1 47       
041B20 00 00 69 DE 0378*      dw 0,-8599,19108
       A4 4A       
041B26 00 00 69 DE 0379*      dw 0,-8599,19108
       A4 4A       
041B2C 13 DA 69 DE 0380*      dw -9709,-8599,16533
       95 40       
041B32 7A DB CA CC 0381*      dw -9350,-13110,15919
       2F 3E       
041B38 00 00 6E A6 0382*      dw 0,-22930,14331
       FB 37       
041B3E 72 1C 6E A6 0383*      dw 7282,-22930,12399
       6F 30       
041B44 04 21 EB B9 0384*      dw 8452,-17941,14389
       35 38       
041B4A 04 21 EB B9 0385*      dw 8452,-17941,14389
       35 38       
041B50 00 00 EB B9 0386*      dw 0,-17941,16632
       F8 40       
041B56 00 00 6E A6 0387*      dw 0,-22930,14331
       FB 37       
041B5C 00 00 EB B9 0388*      dw 0,-17941,16632
       F8 40       
041B62 04 21 EB B9 0389*      dw 8452,-17941,14389
       35 38       
041B68 86 24 CA CC 0390*      dw 9350,-13110,15919
       2F 3E       
041B6E 86 24 CA CC 0391*      dw 9350,-13110,15919
       2F 3E       
041B74 00 00 CA CC 0392*      dw 0,-13110,18401
       E1 47       
041B7A 00 00 EB B9 0393*      dw 0,-17941,16632
       F8 40       
041B80 00 00 CA CC 0394*      dw 0,-13110,18401
       E1 47       
041B86 86 24 CA CC 0395*      dw 9350,-13110,15919
       2F 3E       
041B8C ED 25 69 DE 0396*      dw 9709,-8599,16533
       95 40       
041B92 ED 25 69 DE 0397*      dw 9709,-8599,16533
       95 40       
041B98 00 00 69 DE 0398*      dw 0,-8599,19108
       A4 4A       
041B9E 00 00 CA CC 0399*      dw 0,-13110,18401
       E1 47       
041BA4 72 1C 6E A6 0400*      dw 7282,-22930,12399
       6F 30       
041BAA 6F 30 6E A6 0401*      dw 12399,-22930,7282
       72 1C       
041BB0 35 38 EB B9 0402*      dw 14389,-17941,8452
       04 21       
041BB6 35 38 EB B9 0403*      dw 14389,-17941,8452
       04 21       
041BBC 04 21 EB B9 0404*      dw 8452,-17941,14389
       35 38       
041BC2 72 1C 6E A6 0405*      dw 7282,-22930,12399
       6F 30       
041BC8 04 21 EB B9 0406*      dw 8452,-17941,14389
       35 38       
041BCE 35 38 EB B9 0407*      dw 14389,-17941,8452
       04 21       
041BD4 2F 3E CA CC 0408*      dw 15919,-13110,9350
       86 24       
041BDA 2F 3E CA CC 0409*      dw 15919,-13110,9350
       86 24       
041BE0 86 24 CA CC 0410*      dw 9350,-13110,15919
       2F 3E       
041BE6 04 21 EB B9 0411*      dw 8452,-17941,14389
       35 38       
041BEC 86 24 CA CC 0412*      dw 9350,-13110,15919
       2F 3E       
041BF2 2F 3E CA CC 0413*      dw 15919,-13110,9350
       86 24       
041BF8 95 40 69 DE 0414*      dw 16533,-8599,9709
       ED 25       
041BFE 95 40 69 DE 0415*      dw 16533,-8599,9709
       ED 25       
041C04 ED 25 69 DE 0416*      dw 9709,-8599,16533
       95 40       
041C0A 86 24 CA CC 0417*      dw 9350,-13110,15919
       2F 3E       
041C10 6F 30 6E A6 0418*      dw 12399,-22930,7282
       72 1C       
041C16 FB 37 6E A6 0419*      dw 14331,-22930,0
       00 00       
041C1C F8 40 EB B9 0420*      dw 16632,-17941,0
       00 00       
041C22 F8 40 EB B9 0421*      dw 16632,-17941,0
       00 00       
041C28 35 38 EB B9 0422*      dw 14389,-17941,8452
       04 21       
041C2E 6F 30 6E A6 0423*      dw 12399,-22930,7282
       72 1C       
041C34 35 38 EB B9 0424*      dw 14389,-17941,8452
       04 21       
041C3A F8 40 EB B9 0425*      dw 16632,-17941,0
       00 00       
041C40 E1 47 CA CC 0426*      dw 18401,-13110,0
       00 00       
041C46 E1 47 CA CC 0427*      dw 18401,-13110,0
       00 00       
041C4C 2F 3E CA CC 0428*      dw 15919,-13110,9350
       86 24       
041C52 35 38 EB B9 0429*      dw 14389,-17941,8452
       04 21       
041C58 2F 3E CA CC 0430*      dw 15919,-13110,9350
       86 24       
041C5E E1 47 CA CC 0431*      dw 18401,-13110,0
       00 00       
041C64 A4 4A 69 DE 0432*      dw 19108,-8599,0
       00 00       
041C6A A4 4A 69 DE 0433*      dw 19108,-8599,0
       00 00       
041C70 95 40 69 DE 0434*      dw 16533,-8599,9709
       ED 25       
041C76 2F 3E CA CC 0435*      dw 15919,-13110,9350
       86 24       
041C7C A4 4A 69 DE 0436*      dw 19108,-8599,0
       00 00       
041C82 95 40 69 DE 0437*      dw 16533,-8599,-9709
       13 DA       
041C88 65 3C 83 EC 0438*      dw 15461,-4989,-9080
       88 DC       
041C8E 65 3C 83 EC 0439*      dw 15461,-4989,-9080
       88 DC       
041C94 CE 45 83 EC 0440*      dw 17870,-4989,0
       00 00       
041C9A A4 4A 69 DE 0441*      dw 19108,-8599,0
       00 00       
041CA0 CE 45 83 EC 0442*      dw 17870,-4989,0
       00 00       
041CA6 65 3C 83 EC 0443*      dw 15461,-4989,-9080
       88 DC       
041CAC 9F 34 A2 F5 0444*      dw 13471,-2654,-7911
       19 E1       
041CB2 9F 34 A2 F5 0445*      dw 13471,-2654,-7911
       19 E1       
041CB8 D1 3C A2 F5 0446*      dw 15569,-2654,0
       00 00       
041CBE CE 45 83 EC 0447*      dw 17870,-4989,0
       00 00       
041CC4 D1 3C A2 F5 0448*      dw 15569,-2654,0
       00 00       
041CCA 9F 34 A2 F5 0449*      dw 13471,-2654,-7911
       19 E1       
041CD0 6F 30 67 FA 0450*      dw 12399,-1433,-7282
       8E E3       
041CD6 6F 30 67 FA 0451*      dw 12399,-1433,-7282
       8E E3       
041CDC FB 37 67 FA 0452*      dw 14331,-1433,0
       00 00       
041CE2 D1 3C A2 F5 0453*      dw 15569,-2654,0
       00 00       
041CE8 95 40 69 DE 0454*      dw 16533,-8599,-9709
       13 DA       
041CEE ED 25 69 DE 0455*      dw 9709,-8599,-16533
       6B BF       
041CF4 78 23 83 EC 0456*      dw 9080,-4989,-15461
       9B C3       
041CFA 78 23 83 EC 0457*      dw 9080,-4989,-15461
       9B C3       
041D00 65 3C 83 EC 0458*      dw 15461,-4989,-9080
       88 DC       
041D06 95 40 69 DE 0459*      dw 16533,-8599,-9709
       13 DA       
041D0C 65 3C 83 EC 0460*      dw 15461,-4989,-9080
       88 DC       
041D12 78 23 83 EC 0461*      dw 9080,-4989,-15461
       9B C3       
041D18 E7 1E A2 F5 0462*      dw 7911,-2654,-13471
       61 CB       
041D1E E7 1E A2 F5 0463*      dw 7911,-2654,-13471
       61 CB       
041D24 9F 34 A2 F5 0464*      dw 13471,-2654,-7911
       19 E1       
041D2A 65 3C 83 EC 0465*      dw 15461,-4989,-9080
       88 DC       
041D30 9F 34 A2 F5 0466*      dw 13471,-2654,-7911
       19 E1       
041D36 E7 1E A2 F5 0467*      dw 7911,-2654,-13471
       61 CB       
041D3C 72 1C 67 FA 0468*      dw 7282,-1433,-12399
       91 CF       
041D42 72 1C 67 FA 0469*      dw 7282,-1433,-12399
       91 CF       
041D48 6F 30 67 FA 0470*      dw 12399,-1433,-7282
       8E E3       
041D4E 9F 34 A2 F5 0471*      dw 13471,-2654,-7911
       19 E1       
041D54 ED 25 69 DE 0472*      dw 9709,-8599,-16533
       6B BF       
041D5A 00 00 69 DE 0473*      dw 0,-8599,-19108
       5C B5       
041D60 00 00 83 EC 0474*      dw 0,-4989,-17870
       32 BA       
041D66 00 00 83 EC 0475*      dw 0,-4989,-17870
       32 BA       
041D6C 78 23 83 EC 0476*      dw 9080,-4989,-15461
       9B C3       
041D72 ED 25 69 DE 0477*      dw 9709,-8599,-16533
       6B BF       
041D78 78 23 83 EC 0478*      dw 9080,-4989,-15461
       9B C3       
041D7E 00 00 83 EC 0479*      dw 0,-4989,-17870
       32 BA       
041D84 00 00 A2 F5 0480*      dw 0,-2654,-15569
       2F C3       
041D8A 00 00 A2 F5 0481*      dw 0,-2654,-15569
       2F C3       
041D90 E7 1E A2 F5 0482*      dw 7911,-2654,-13471
       61 CB       
041D96 78 23 83 EC 0483*      dw 9080,-4989,-15461
       9B C3       
041D9C E7 1E A2 F5 0484*      dw 7911,-2654,-13471
       61 CB       
041DA2 00 00 A2 F5 0485*      dw 0,-2654,-15569
       2F C3       
041DA8 00 00 67 FA 0486*      dw 0,-1433,-14331
       05 C8       
041DAE 00 00 67 FA 0487*      dw 0,-1433,-14331
       05 C8       
041DB4 72 1C 67 FA 0488*      dw 7282,-1433,-12399
       91 CF       
041DBA E7 1E A2 F5 0489*      dw 7911,-2654,-13471
       61 CB       
041DC0 00 00 69 DE 0490*      dw 0,-8599,-19108
       5C B5       
041DC6 13 DA 69 DE 0491*      dw -9709,-8599,-16533
       6B BF       
041DCC 88 DC 83 EC 0492*      dw -9080,-4989,-15461
       9B C3       
041DD2 88 DC 83 EC 0493*      dw -9080,-4989,-15461
       9B C3       
041DD8 00 00 83 EC 0494*      dw 0,-4989,-17870
       32 BA       
041DDE 00 00 69 DE 0495*      dw 0,-8599,-19108
       5C B5       
041DE4 00 00 83 EC 0496*      dw 0,-4989,-17870
       32 BA       
041DEA 88 DC 83 EC 0497*      dw -9080,-4989,-15461
       9B C3       
041DF0 19 E1 A2 F5 0498*      dw -7911,-2654,-13471
       61 CB       
041DF6 19 E1 A2 F5 0499*      dw -7911,-2654,-13471
       61 CB       
041DFC 00 00 A2 F5 0500*      dw 0,-2654,-15569
       2F C3       
041E02 00 00 83 EC 0501*      dw 0,-4989,-17870
       32 BA       
041E08 00 00 A2 F5 0502*      dw 0,-2654,-15569
       2F C3       
041E0E 19 E1 A2 F5 0503*      dw -7911,-2654,-13471
       61 CB       
041E14 8E E3 67 FA 0504*      dw -7282,-1433,-12399
       91 CF       
041E1A 8E E3 67 FA 0505*      dw -7282,-1433,-12399
       91 CF       
041E20 00 00 67 FA 0506*      dw 0,-1433,-14331
       05 C8       
041E26 00 00 A2 F5 0507*      dw 0,-2654,-15569
       2F C3       
041E2C 13 DA 69 DE 0508*      dw -9709,-8599,-16533
       6B BF       
041E32 6B BF 69 DE 0509*      dw -16533,-8599,-9709
       13 DA       
041E38 9B C3 83 EC 0510*      dw -15461,-4989,-9080
       88 DC       
041E3E 9B C3 83 EC 0511*      dw -15461,-4989,-9080
       88 DC       
041E44 88 DC 83 EC 0512*      dw -9080,-4989,-15461
       9B C3       
041E4A 13 DA 69 DE 0513*      dw -9709,-8599,-16533
       6B BF       
041E50 88 DC 83 EC 0514*      dw -9080,-4989,-15461
       9B C3       
041E56 9B C3 83 EC 0515*      dw -15461,-4989,-9080
       88 DC       
041E5C 61 CB A2 F5 0516*      dw -13471,-2654,-7911
       19 E1       
041E62 61 CB A2 F5 0517*      dw -13471,-2654,-7911
       19 E1       
041E68 19 E1 A2 F5 0518*      dw -7911,-2654,-13471
       61 CB       
041E6E 88 DC 83 EC 0519*      dw -9080,-4989,-15461
       9B C3       
041E74 19 E1 A2 F5 0520*      dw -7911,-2654,-13471
       61 CB       
041E7A 61 CB A2 F5 0521*      dw -13471,-2654,-7911
       19 E1       
041E80 91 CF 67 FA 0522*      dw -12399,-1433,-7282
       8E E3       
041E86 91 CF 67 FA 0523*      dw -12399,-1433,-7282
       8E E3       
041E8C 8E E3 67 FA 0524*      dw -7282,-1433,-12399
       91 CF       
041E92 19 E1 A2 F5 0525*      dw -7911,-2654,-13471
       61 CB       
041E98 6B BF 69 DE 0526*      dw -16533,-8599,-9709
       13 DA       
041E9E 5C B5 69 DE 0527*      dw -19108,-8599,0
       00 00       
041EA4 32 BA 83 EC 0528*      dw -17870,-4989,0
       00 00       
041EAA 32 BA 83 EC 0529*      dw -17870,-4989,0
       00 00       
041EB0 9B C3 83 EC 0530*      dw -15461,-4989,-9080
       88 DC       
041EB6 6B BF 69 DE 0531*      dw -16533,-8599,-9709
       13 DA       
041EBC 9B C3 83 EC 0532*      dw -15461,-4989,-9080
       88 DC       
041EC2 32 BA 83 EC 0533*      dw -17870,-4989,0
       00 00       
041EC8 2F C3 A2 F5 0534*      dw -15569,-2654,0
       00 00       
041ECE 2F C3 A2 F5 0535*      dw -15569,-2654,0
       00 00       
041ED4 61 CB A2 F5 0536*      dw -13471,-2654,-7911
       19 E1       
041EDA 9B C3 83 EC 0537*      dw -15461,-4989,-9080
       88 DC       
041EE0 61 CB A2 F5 0538*      dw -13471,-2654,-7911
       19 E1       
041EE6 2F C3 A2 F5 0539*      dw -15569,-2654,0
       00 00       
041EEC 05 C8 67 FA 0540*      dw -14331,-1433,0
       00 00       
041EF2 05 C8 67 FA 0541*      dw -14331,-1433,0
       00 00       
041EF8 91 CF 67 FA 0542*      dw -12399,-1433,-7282
       8E E3       
041EFE 61 CB A2 F5 0543*      dw -13471,-2654,-7911
       19 E1       
041F04 5C B5 69 DE 0544*      dw -19108,-8599,0
       00 00       
041F0A 6B BF 69 DE 0545*      dw -16533,-8599,9709
       ED 25       
041F10 9B C3 83 EC 0546*      dw -15461,-4989,9080
       78 23       
041F16 9B C3 83 EC 0547*      dw -15461,-4989,9080
       78 23       
041F1C 32 BA 83 EC 0548*      dw -17870,-4989,0
       00 00       
041F22 5C B5 69 DE 0549*      dw -19108,-8599,0
       00 00       
041F28 32 BA 83 EC 0550*      dw -17870,-4989,0
       00 00       
041F2E 9B C3 83 EC 0551*      dw -15461,-4989,9080
       78 23       
041F34 61 CB A2 F5 0552*      dw -13471,-2654,7911
       E7 1E       
041F3A 61 CB A2 F5 0553*      dw -13471,-2654,7911
       E7 1E       
041F40 2F C3 A2 F5 0554*      dw -15569,-2654,0
       00 00       
041F46 32 BA 83 EC 0555*      dw -17870,-4989,0
       00 00       
041F4C 2F C3 A2 F5 0556*      dw -15569,-2654,0
       00 00       
041F52 61 CB A2 F5 0557*      dw -13471,-2654,7911
       E7 1E       
041F58 91 CF 67 FA 0558*      dw -12399,-1433,7282
       72 1C       
041F5E 91 CF 67 FA 0559*      dw -12399,-1433,7282
       72 1C       
041F64 05 C8 67 FA 0560*      dw -14331,-1433,0
       00 00       
041F6A 2F C3 A2 F5 0561*      dw -15569,-2654,0
       00 00       
041F70 6B BF 69 DE 0562*      dw -16533,-8599,9709
       ED 25       
041F76 13 DA 69 DE 0563*      dw -9709,-8599,16533
       95 40       
041F7C 88 DC 83 EC 0564*      dw -9080,-4989,15461
       65 3C       
041F82 88 DC 83 EC 0565*      dw -9080,-4989,15461
       65 3C       
041F88 9B C3 83 EC 0566*      dw -15461,-4989,9080
       78 23       
041F8E 6B BF 69 DE 0567*      dw -16533,-8599,9709
       ED 25       
041F94 9B C3 83 EC 0568*      dw -15461,-4989,9080
       78 23       
041F9A 88 DC 83 EC 0569*      dw -9080,-4989,15461
       65 3C       
041FA0 19 E1 A2 F5 0570*      dw -7911,-2654,13471
       9F 34       
041FA6 19 E1 A2 F5 0571*      dw -7911,-2654,13471
       9F 34       
041FAC 61 CB A2 F5 0572*      dw -13471,-2654,7911
       E7 1E       
041FB2 9B C3 83 EC 0573*      dw -15461,-4989,9080
       78 23       
041FB8 61 CB A2 F5 0574*      dw -13471,-2654,7911
       E7 1E       
041FBE 19 E1 A2 F5 0575*      dw -7911,-2654,13471
       9F 34       
041FC4 8E E3 67 FA 0576*      dw -7282,-1433,12399
       6F 30       
041FCA 8E E3 67 FA 0577*      dw -7282,-1433,12399
       6F 30       
041FD0 91 CF 67 FA 0578*      dw -12399,-1433,7282
       72 1C       
041FD6 61 CB A2 F5 0579*      dw -13471,-2654,7911
       E7 1E       
041FDC 13 DA 69 DE 0580*      dw -9709,-8599,16533
       95 40       
041FE2 00 00 69 DE 0581*      dw 0,-8599,19108
       A4 4A       
041FE8 00 00 83 EC 0582*      dw 0,-4989,17870
       CE 45       
041FEE 00 00 83 EC 0583*      dw 0,-4989,17870
       CE 45       
041FF4 88 DC 83 EC 0584*      dw -9080,-4989,15461
       65 3C       
041FFA 13 DA 69 DE 0585*      dw -9709,-8599,16533
       95 40       
042000 88 DC 83 EC 0586*      dw -9080,-4989,15461
       65 3C       
042006 00 00 83 EC 0587*      dw 0,-4989,17870
       CE 45       
04200C 00 00 A2 F5 0588*      dw 0,-2654,15569
       D1 3C       
042012 00 00 A2 F5 0589*      dw 0,-2654,15569
       D1 3C       
042018 19 E1 A2 F5 0590*      dw -7911,-2654,13471
       9F 34       
04201E 88 DC 83 EC 0591*      dw -9080,-4989,15461
       65 3C       
042024 19 E1 A2 F5 0592*      dw -7911,-2654,13471
       9F 34       
04202A 00 00 A2 F5 0593*      dw 0,-2654,15569
       D1 3C       
042030 00 00 67 FA 0594*      dw 0,-1433,14331
       FB 37       
042036 00 00 67 FA 0595*      dw 0,-1433,14331
       FB 37       
04203C 8E E3 67 FA 0596*      dw -7282,-1433,12399
       6F 30       
042042 19 E1 A2 F5 0597*      dw -7911,-2654,13471
       9F 34       
042048 00 00 69 DE 0598*      dw 0,-8599,19108
       A4 4A       
04204E ED 25 69 DE 0599*      dw 9709,-8599,16533
       95 40       
042054 78 23 83 EC 0600*      dw 9080,-4989,15461
       65 3C       
04205A 78 23 83 EC 0601*      dw 9080,-4989,15461
       65 3C       
042060 00 00 83 EC 0602*      dw 0,-4989,17870
       CE 45       
042066 00 00 69 DE 0603*      dw 0,-8599,19108
       A4 4A       
04206C 00 00 83 EC 0604*      dw 0,-4989,17870
       CE 45       
042072 78 23 83 EC 0605*      dw 9080,-4989,15461
       65 3C       
042078 E7 1E A2 F5 0606*      dw 7911,-2654,13471
       9F 34       
04207E E7 1E A2 F5 0607*      dw 7911,-2654,13471
       9F 34       
042084 00 00 A2 F5 0608*      dw 0,-2654,15569
       D1 3C       
04208A 00 00 83 EC 0609*      dw 0,-4989,17870
       CE 45       
042090 00 00 A2 F5 0610*      dw 0,-2654,15569
       D1 3C       
042096 E7 1E A2 F5 0611*      dw 7911,-2654,13471
       9F 34       
04209C 72 1C 67 FA 0612*      dw 7282,-1433,12399
       6F 30       
0420A2 72 1C 67 FA 0613*      dw 7282,-1433,12399
       6F 30       
0420A8 00 00 67 FA 0614*      dw 0,-1433,14331
       FB 37       
0420AE 00 00 A2 F5 0615*      dw 0,-2654,15569
       D1 3C       
0420B4 ED 25 69 DE 0616*      dw 9709,-8599,16533
       95 40       
0420BA 95 40 69 DE 0617*      dw 16533,-8599,9709
       ED 25       
0420C0 65 3C 83 EC 0618*      dw 15461,-4989,9080
       78 23       
0420C6 65 3C 83 EC 0619*      dw 15461,-4989,9080
       78 23       
0420CC 78 23 83 EC 0620*      dw 9080,-4989,15461
       65 3C       
0420D2 ED 25 69 DE 0621*      dw 9709,-8599,16533
       95 40       
0420D8 78 23 83 EC 0622*      dw 9080,-4989,15461
       65 3C       
0420DE 65 3C 83 EC 0623*      dw 15461,-4989,9080
       78 23       
0420E4 9F 34 A2 F5 0624*      dw 13471,-2654,7911
       E7 1E       
0420EA 9F 34 A2 F5 0625*      dw 13471,-2654,7911
       E7 1E       
0420F0 E7 1E A2 F5 0626*      dw 7911,-2654,13471
       9F 34       
0420F6 78 23 83 EC 0627*      dw 9080,-4989,15461
       65 3C       
0420FC E7 1E A2 F5 0628*      dw 7911,-2654,13471
       9F 34       
042102 9F 34 A2 F5 0629*      dw 13471,-2654,7911
       E7 1E       
042108 6F 30 67 FA 0630*      dw 12399,-1433,7282
       72 1C       
04210E 6F 30 67 FA 0631*      dw 12399,-1433,7282
       72 1C       
042114 72 1C 67 FA 0632*      dw 7282,-1433,12399
       6F 30       
04211A E7 1E A2 F5 0633*      dw 7911,-2654,13471
       9F 34       
042120 95 40 69 DE 0634*      dw 16533,-8599,9709
       ED 25       
042126 A4 4A 69 DE 0635*      dw 19108,-8599,0
       00 00       
04212C CE 45 83 EC 0636*      dw 17870,-4989,0
       00 00       
042132 CE 45 83 EC 0637*      dw 17870,-4989,0
       00 00       
042138 65 3C 83 EC 0638*      dw 15461,-4989,9080
       78 23       
04213E 95 40 69 DE 0639*      dw 16533,-8599,9709
       ED 25       
042144 65 3C 83 EC 0640*      dw 15461,-4989,9080
       78 23       
04214A CE 45 83 EC 0641*      dw 17870,-4989,0
       00 00       
042150 D1 3C A2 F5 0642*      dw 15569,-2654,0
       00 00       
042156 D1 3C A2 F5 0643*      dw 15569,-2654,0
       00 00       
04215C 9F 34 A2 F5 0644*      dw 13471,-2654,7911
       E7 1E       
042162 65 3C 83 EC 0645*      dw 15461,-4989,9080
       78 23       
042168 9F 34 A2 F5 0646*      dw 13471,-2654,7911
       E7 1E       
04216E D1 3C A2 F5 0647*      dw 15569,-2654,0
       00 00       
042174 FB 37 67 FA 0648*      dw 14331,-1433,0
       00 00       
04217A FB 37 67 FA 0649*      dw 14331,-1433,0
       00 00       
042180 6F 30 67 FA 0650*      dw 12399,-1433,7282
       72 1C       
042186 9F 34 A2 F5 0651*      dw 13471,-2654,7911
       E7 1E       
04218C FB 37 67 FA 0652*      dw 14331,-1433,0
       00 00       
042192 6F 30 67 FA 0653*      dw 12399,-1433,-7282
       8E E3       
042198 19 2E 19 FD 0654*      dw 11801,-743,-6933
       EB E4       
04219E 19 2E 19 FD 0655*      dw 11801,-743,-6933
       EB E4       
0421A4 49 35 19 FD 0656*      dw 13641,-743,0
       00 00       
0421AA FB 37 67 FA 0657*      dw 14331,-1433,0
       00 00       
0421B0 49 35 19 FD 0658*      dw 13641,-743,0
       00 00       
0421B6 19 2E 19 FD 0659*      dw 11801,-743,-6933
       EB E4       
0421BC 02 21 2C FF 0660*      dw 8450,-212,-4962
       9E EC       
0421C2 02 21 2C FF 0661*      dw 8450,-212,-4962
       9E EC       
0421C8 26 26 2C FF 0662*      dw 9766,-212,0
       00 00       
0421CE 49 35 19 FD 0663*      dw 13641,-743,0
       00 00       
0421D4 26 26 2C FF 0664*      dw 9766,-212,0
       00 00       
0421DA 02 21 2C FF 0665*      dw 8450,-212,-4962
       9E EC       
0421E0 00 00 00 00 0666*      dw 0,0,0
       00 00       
0421E6 00 00 00 00 0667*      dw 0,0,0
       00 00       
0421EC 00 00 00 00 0668*      dw 0,0,0
       00 00       
0421F2 26 26 2C FF 0669*      dw 9766,-212,0
       00 00       
0421F8 6F 30 67 FA 0670*      dw 12399,-1433,-7282
       8E E3       
0421FE 72 1C 67 FA 0671*      dw 7282,-1433,-12399
       91 CF       
042204 15 1B 19 FD 0672*      dw 6933,-743,-11801
       E7 D1       
04220A 15 1B 19 FD 0673*      dw 6933,-743,-11801
       E7 D1       
042210 19 2E 19 FD 0674*      dw 11801,-743,-6933
       EB E4       
042216 6F 30 67 FA 0675*      dw 12399,-1433,-7282
       8E E3       
04221C 19 2E 19 FD 0676*      dw 11801,-743,-6933
       EB E4       
042222 15 1B 19 FD 0677*      dw 6933,-743,-11801
       E7 D1       
042228 62 13 2C FF 0678*      dw 4962,-212,-8450
       FE DE       
04222E 62 13 2C FF 0679*      dw 4962,-212,-8450
       FE DE       
042234 02 21 2C FF 0680*      dw 8450,-212,-4962
       9E EC       
04223A 19 2E 19 FD 0681*      dw 11801,-743,-6933
       EB E4       
042240 02 21 2C FF 0682*      dw 8450,-212,-4962
       9E EC       
042246 62 13 2C FF 0683*      dw 4962,-212,-8450
       FE DE       
04224C 00 00 00 00 0684*      dw 0,0,0
       00 00       
042252 00 00 00 00 0685*      dw 0,0,0
       00 00       
042258 00 00 00 00 0686*      dw 0,0,0
       00 00       
04225E 02 21 2C FF 0687*      dw 8450,-212,-4962
       9E EC       
042264 72 1C 67 FA 0688*      dw 7282,-1433,-12399
       91 CF       
04226A 00 00 67 FA 0689*      dw 0,-1433,-14331
       05 C8       
042270 00 00 19 FD 0690*      dw 0,-743,-13641
       B7 CA       
042276 00 00 19 FD 0691*      dw 0,-743,-13641
       B7 CA       
04227C 15 1B 19 FD 0692*      dw 6933,-743,-11801
       E7 D1       
042282 72 1C 67 FA 0693*      dw 7282,-1433,-12399
       91 CF       
042288 15 1B 19 FD 0694*      dw 6933,-743,-11801
       E7 D1       
04228E 00 00 19 FD 0695*      dw 0,-743,-13641
       B7 CA       
042294 00 00 2C FF 0696*      dw 0,-212,-9766
       DA D9       
04229A 00 00 2C FF 0697*      dw 0,-212,-9766
       DA D9       
0422A0 62 13 2C FF 0698*      dw 4962,-212,-8450
       FE DE       
0422A6 15 1B 19 FD 0699*      dw 6933,-743,-11801
       E7 D1       
0422AC 62 13 2C FF 0700*      dw 4962,-212,-8450
       FE DE       
0422B2 00 00 2C FF 0701*      dw 0,-212,-9766
       DA D9       
0422B8 00 00 00 00 0702*      dw 0,0,0
       00 00       
0422BE 00 00 00 00 0703*      dw 0,0,0
       00 00       
0422C4 00 00 00 00 0704*      dw 0,0,0
       00 00       
0422CA 62 13 2C FF 0705*      dw 4962,-212,-8450
       FE DE       
0422D0 00 00 67 FA 0706*      dw 0,-1433,-14331
       05 C8       
0422D6 8E E3 67 FA 0707*      dw -7282,-1433,-12399
       91 CF       
0422DC EB E4 19 FD 0708*      dw -6933,-743,-11801
       E7 D1       
0422E2 EB E4 19 FD 0709*      dw -6933,-743,-11801
       E7 D1       
0422E8 00 00 19 FD 0710*      dw 0,-743,-13641
       B7 CA       
0422EE 00 00 67 FA 0711*      dw 0,-1433,-14331
       05 C8       
0422F4 00 00 19 FD 0712*      dw 0,-743,-13641
       B7 CA       
0422FA EB E4 19 FD 0713*      dw -6933,-743,-11801
       E7 D1       
042300 9E EC 2C FF 0714*      dw -4962,-212,-8450
       FE DE       
042306 9E EC 2C FF 0715*      dw -4962,-212,-8450
       FE DE       
04230C 00 00 2C FF 0716*      dw 0,-212,-9766
       DA D9       
042312 00 00 19 FD 0717*      dw 0,-743,-13641
       B7 CA       
042318 00 00 2C FF 0718*      dw 0,-212,-9766
       DA D9       
04231E 9E EC 2C FF 0719*      dw -4962,-212,-8450
       FE DE       
042324 00 00 00 00 0720*      dw 0,0,0
       00 00       
04232A 00 00 00 00 0721*      dw 0,0,0
       00 00       
042330 00 00 00 00 0722*      dw 0,0,0
       00 00       
042336 00 00 2C FF 0723*      dw 0,-212,-9766
       DA D9       
04233C 8E E3 67 FA 0724*      dw -7282,-1433,-12399
       91 CF       
042342 91 CF 67 FA 0725*      dw -12399,-1433,-7282
       8E E3       
042348 E7 D1 19 FD 0726*      dw -11801,-743,-6933
       EB E4       
04234E E7 D1 19 FD 0727*      dw -11801,-743,-6933
       EB E4       
042354 EB E4 19 FD 0728*      dw -6933,-743,-11801
       E7 D1       
04235A 8E E3 67 FA 0729*      dw -7282,-1433,-12399
       91 CF       
042360 EB E4 19 FD 0730*      dw -6933,-743,-11801
       E7 D1       
042366 E7 D1 19 FD 0731*      dw -11801,-743,-6933
       EB E4       
04236C FE DE 2C FF 0732*      dw -8450,-212,-4962
       9E EC       
042372 FE DE 2C FF 0733*      dw -8450,-212,-4962
       9E EC       
042378 9E EC 2C FF 0734*      dw -4962,-212,-8450
       FE DE       
04237E EB E4 19 FD 0735*      dw -6933,-743,-11801
       E7 D1       
042384 9E EC 2C FF 0736*      dw -4962,-212,-8450
       FE DE       
04238A FE DE 2C FF 0737*      dw -8450,-212,-4962
       9E EC       
042390 00 00 00 00 0738*      dw 0,0,0
       00 00       
042396 00 00 00 00 0739*      dw 0,0,0
       00 00       
04239C 00 00 00 00 0740*      dw 0,0,0
       00 00       
0423A2 9E EC 2C FF 0741*      dw -4962,-212,-8450
       FE DE       
0423A8 91 CF 67 FA 0742*      dw -12399,-1433,-7282
       8E E3       
0423AE 05 C8 67 FA 0743*      dw -14331,-1433,0
       00 00       
0423B4 B7 CA 19 FD 0744*      dw -13641,-743,0
       00 00       
0423BA B7 CA 19 FD 0745*      dw -13641,-743,0
       00 00       
0423C0 E7 D1 19 FD 0746*      dw -11801,-743,-6933
       EB E4       
0423C6 91 CF 67 FA 0747*      dw -12399,-1433,-7282
       8E E3       
0423CC E7 D1 19 FD 0748*      dw -11801,-743,-6933
       EB E4       
0423D2 B7 CA 19 FD 0749*      dw -13641,-743,0
       00 00       
0423D8 DA D9 2C FF 0750*      dw -9766,-212,0
       00 00       
0423DE DA D9 2C FF 0751*      dw -9766,-212,0
       00 00       
0423E4 FE DE 2C FF 0752*      dw -8450,-212,-4962
       9E EC       
0423EA E7 D1 19 FD 0753*      dw -11801,-743,-6933
       EB E4       
0423F0 FE DE 2C FF 0754*      dw -8450,-212,-4962
       9E EC       
0423F6 DA D9 2C FF 0755*      dw -9766,-212,0
       00 00       
0423FC 00 00 00 00 0756*      dw 0,0,0
       00 00       
042402 00 00 00 00 0757*      dw 0,0,0
       00 00       
042408 00 00 00 00 0758*      dw 0,0,0
       00 00       
04240E FE DE 2C FF 0759*      dw -8450,-212,-4962
       9E EC       
042414 05 C8 67 FA 0760*      dw -14331,-1433,0
       00 00       
04241A 91 CF 67 FA 0761*      dw -12399,-1433,7282
       72 1C       
042420 E7 D1 19 FD 0762*      dw -11801,-743,6933
       15 1B       
042426 E7 D1 19 FD 0763*      dw -11801,-743,6933
       15 1B       
04242C B7 CA 19 FD 0764*      dw -13641,-743,0
       00 00       
042432 05 C8 67 FA 0765*      dw -14331,-1433,0
       00 00       
042438 B7 CA 19 FD 0766*      dw -13641,-743,0
       00 00       
04243E E7 D1 19 FD 0767*      dw -11801,-743,6933
       15 1B       
042444 FE DE 2C FF 0768*      dw -8450,-212,4962
       62 13       
04244A FE DE 2C FF 0769*      dw -8450,-212,4962
       62 13       
042450 DA D9 2C FF 0770*      dw -9766,-212,0
       00 00       
042456 B7 CA 19 FD 0771*      dw -13641,-743,0
       00 00       
04245C DA D9 2C FF 0772*      dw -9766,-212,0
       00 00       
042462 FE DE 2C FF 0773*      dw -8450,-212,4962
       62 13       
042468 00 00 00 00 0774*      dw 0,0,0
       00 00       
04246E 00 00 00 00 0775*      dw 0,0,0
       00 00       
042474 00 00 00 00 0776*      dw 0,0,0
       00 00       
04247A DA D9 2C FF 0777*      dw -9766,-212,0
       00 00       
042480 91 CF 67 FA 0778*      dw -12399,-1433,7282
       72 1C       
042486 8E E3 67 FA 0779*      dw -7282,-1433,12399
       6F 30       
04248C EB E4 19 FD 0780*      dw -6933,-743,11801
       19 2E       
042492 EB E4 19 FD 0781*      dw -6933,-743,11801
       19 2E       
042498 E7 D1 19 FD 0782*      dw -11801,-743,6933
       15 1B       
04249E 91 CF 67 FA 0783*      dw -12399,-1433,7282
       72 1C       
0424A4 E7 D1 19 FD 0784*      dw -11801,-743,6933
       15 1B       
0424AA EB E4 19 FD 0785*      dw -6933,-743,11801
       19 2E       
0424B0 9E EC 2C FF 0786*      dw -4962,-212,8450
       02 21       
0424B6 9E EC 2C FF 0787*      dw -4962,-212,8450
       02 21       
0424BC FE DE 2C FF 0788*      dw -8450,-212,4962
       62 13       
0424C2 E7 D1 19 FD 0789*      dw -11801,-743,6933
       15 1B       
0424C8 FE DE 2C FF 0790*      dw -8450,-212,4962
       62 13       
0424CE 9E EC 2C FF 0791*      dw -4962,-212,8450
       02 21       
0424D4 00 00 00 00 0792*      dw 0,0,0
       00 00       
0424DA 00 00 00 00 0793*      dw 0,0,0
       00 00       
0424E0 00 00 00 00 0794*      dw 0,0,0
       00 00       
0424E6 FE DE 2C FF 0795*      dw -8450,-212,4962
       62 13       
0424EC 8E E3 67 FA 0796*      dw -7282,-1433,12399
       6F 30       
0424F2 00 00 67 FA 0797*      dw 0,-1433,14331
       FB 37       
0424F8 00 00 19 FD 0798*      dw 0,-743,13641
       49 35       
0424FE 00 00 19 FD 0799*      dw 0,-743,13641
       49 35       
042504 EB E4 19 FD 0800*      dw -6933,-743,11801
       19 2E       
04250A 8E E3 67 FA 0801*      dw -7282,-1433,12399
       6F 30       
042510 EB E4 19 FD 0802*      dw -6933,-743,11801
       19 2E       
042516 00 00 19 FD 0803*      dw 0,-743,13641
       49 35       
04251C 00 00 2C FF 0804*      dw 0,-212,9766
       26 26       
042522 00 00 2C FF 0805*      dw 0,-212,9766
       26 26       
042528 9E EC 2C FF 0806*      dw -4962,-212,8450
       02 21       
04252E EB E4 19 FD 0807*      dw -6933,-743,11801
       19 2E       
042534 9E EC 2C FF 0808*      dw -4962,-212,8450
       02 21       
04253A 00 00 2C FF 0809*      dw 0,-212,9766
       26 26       
042540 00 00 00 00 0810*      dw 0,0,0
       00 00       
042546 00 00 00 00 0811*      dw 0,0,0
       00 00       
04254C 00 00 00 00 0812*      dw 0,0,0
       00 00       
042552 9E EC 2C FF 0813*      dw -4962,-212,8450
       02 21       
042558 00 00 67 FA 0814*      dw 0,-1433,14331
       FB 37       
04255E 72 1C 67 FA 0815*      dw 7282,-1433,12399
       6F 30       
042564 15 1B 19 FD 0816*      dw 6933,-743,11801
       19 2E       
04256A 15 1B 19 FD 0817*      dw 6933,-743,11801
       19 2E       
042570 00 00 19 FD 0818*      dw 0,-743,13641
       49 35       
042576 00 00 67 FA 0819*      dw 0,-1433,14331
       FB 37       
04257C 00 00 19 FD 0820*      dw 0,-743,13641
       49 35       
042582 15 1B 19 FD 0821*      dw 6933,-743,11801
       19 2E       
042588 62 13 2C FF 0822*      dw 4962,-212,8450
       02 21       
04258E 62 13 2C FF 0823*      dw 4962,-212,8450
       02 21       
042594 00 00 2C FF 0824*      dw 0,-212,9766
       26 26       
04259A 00 00 19 FD 0825*      dw 0,-743,13641
       49 35       
0425A0 00 00 2C FF 0826*      dw 0,-212,9766
       26 26       
0425A6 62 13 2C FF 0827*      dw 4962,-212,8450
       02 21       
0425AC 00 00 00 00 0828*      dw 0,0,0
       00 00       
0425B2 00 00 00 00 0829*      dw 0,0,0
       00 00       
0425B8 00 00 00 00 0830*      dw 0,0,0
       00 00       
0425BE 00 00 2C FF 0831*      dw 0,-212,9766
       26 26       
0425C4 72 1C 67 FA 0832*      dw 7282,-1433,12399
       6F 30       
0425CA 6F 30 67 FA 0833*      dw 12399,-1433,7282
       72 1C       
0425D0 19 2E 19 FD 0834*      dw 11801,-743,6933
       15 1B       
0425D6 19 2E 19 FD 0835*      dw 11801,-743,6933
       15 1B       
0425DC 15 1B 19 FD 0836*      dw 6933,-743,11801
       19 2E       
0425E2 72 1C 67 FA 0837*      dw 7282,-1433,12399
       6F 30       
0425E8 15 1B 19 FD 0838*      dw 6933,-743,11801
       19 2E       
0425EE 19 2E 19 FD 0839*      dw 11801,-743,6933
       15 1B       
0425F4 02 21 2C FF 0840*      dw 8450,-212,4962
       62 13       
0425FA 02 21 2C FF 0841*      dw 8450,-212,4962
       62 13       
042600 62 13 2C FF 0842*      dw 4962,-212,8450
       02 21       
042606 15 1B 19 FD 0843*      dw 6933,-743,11801
       19 2E       
04260C 62 13 2C FF 0844*      dw 4962,-212,8450
       02 21       
042612 02 21 2C FF 0845*      dw 8450,-212,4962
       62 13       
042618 00 00 00 00 0846*      dw 0,0,0
       00 00       
04261E 00 00 00 00 0847*      dw 0,0,0
       00 00       
042624 00 00 00 00 0848*      dw 0,0,0
       00 00       
04262A 62 13 2C FF 0849*      dw 4962,-212,8450
       02 21       
042630 6F 30 67 FA 0850*      dw 12399,-1433,7282
       72 1C       
042636 FB 37 67 FA 0851*      dw 14331,-1433,0
       00 00       
04263C 49 35 19 FD 0852*      dw 13641,-743,0
       00 00       
042642 49 35 19 FD 0853*      dw 13641,-743,0
       00 00       
042648 19 2E 19 FD 0854*      dw 11801,-743,6933
       15 1B       
04264E 6F 30 67 FA 0855*      dw 12399,-1433,7282
       72 1C       
042654 19 2E 19 FD 0856*      dw 11801,-743,6933
       15 1B       
04265A 49 35 19 FD 0857*      dw 13641,-743,0
       00 00       
042660 26 26 2C FF 0858*      dw 9766,-212,0
       00 00       
042666 26 26 2C FF 0859*      dw 9766,-212,0
       00 00       
04266C 02 21 2C FF 0860*      dw 8450,-212,4962
       62 13       
042672 19 2E 19 FD 0861*      dw 11801,-743,6933
       15 1B       
042678 02 21 2C FF 0862*      dw 8450,-212,4962
       62 13       
04267E 26 26 2C FF 0863*      dw 9766,-212,0
       00 00       
042684 00 00 00 00 0864*      dw 0,0,0
       00 00       
04268A 00 00 00 00 0865*      dw 0,0,0
       00 00       
042690 00 00 00 00 0866*      dw 0,0,0
       00 00       
042696 02 21 2C FF 0867*      dw 8450,-212,4962
       62 13       
04269C 49 C4 6D B4 0868*      dw -15287,-19347,0
       00 00       
0426A2 42 C5 3F B2 0869*      dw -15038,-19905,-1911
       89 F8       
0426A8 B5 AC A4 B2 0870*      dw -21323,-19804,-1911
       89 F8       
0426AE B5 AC A4 B2 0871*      dw -21323,-19804,-1911
       89 F8       
0426B4 09 AE BD B4 0872*      dw -20983,-19267,0
       00 00       
0426BA 49 C4 6D B4 0873*      dw -15287,-19347,0
       00 00       
0426C0 09 AE BD B4 0874*      dw -20983,-19267,0
       00 00       
0426C6 B5 AC A4 B2 0875*      dw -21323,-19804,-1911
       89 F8       
0426CC 86 9D 61 B5 0876*      dw -25210,-19103,-1911
       89 F8       
0426D2 86 9D 61 B5 0877*      dw -25210,-19103,-1911
       89 F8       
0426D8 12 A0 E9 B6 0878*      dw -24558,-18711,0
       00 00       
0426DE 09 AE BD B4 0879*      dw -20983,-19267,0
       00 00       
0426E4 12 A0 E9 B6 0880*      dw -24558,-18711,0
       00 00       
0426EA 86 9D 61 B5 0881*      dw -25210,-19103,-1911
       89 F8       
0426F0 54 98 D2 BC 0882*      dw -26540,-17198,-1911
       89 F8       
0426F6 54 98 D2 BC 0883*      dw -26540,-17198,-1911
       89 F8       
0426FC 3C 9B D2 BC 0884*      dw -25796,-17198,0
       00 00       
042702 12 A0 E9 B6 0885*      dw -24558,-18711,0
       00 00       
042708 42 C5 3F B2 0886*      dw -15038,-19905,-1911
       89 F8       
04270E 0C C7 35 AE 0887*      dw -14580,-20939,-1911
       89 F8       
042714 3E AA BF AE 0888*      dw -21954,-20801,-1911
       89 F8       
04271A 3E AA BF AE 0889*      dw -21954,-20801,-1911
       89 F8       
042720 B5 AC A4 B2 0890*      dw -21323,-19804,-1911
       89 F8       
042726 42 C5 3F B2 0891*      dw -15038,-19905,-1911
       89 F8       
04272C B5 AC A4 B2 0892*      dw -21323,-19804,-1911
       89 F8       
042732 3E AA BF AE 0893*      dw -21954,-20801,-1911
       89 F8       
042738 CD 98 89 B2 0894*      dw -26419,-19831,-1911
       89 F8       
04273E CD 98 89 B2 0895*      dw -26419,-19831,-1911
       89 F8       
042744 86 9D 61 B5 0896*      dw -25210,-19103,-1911
       89 F8       
04274A B5 AC A4 B2 0897*      dw -21323,-19804,-1911
       89 F8       
042750 86 9D 61 B5 0898*      dw -25210,-19103,-1911
       89 F8       
042756 CD 98 89 B2 0899*      dw -26419,-19831,-1911
       89 F8       
04275C F1 92 D2 BC 0900*      dw -27919,-17198,-1911
       89 F8       
042762 F1 92 D2 BC 0901*      dw -27919,-17198,-1911
       89 F8       
042768 54 98 D2 BC 0902*      dw -26540,-17198,-1911
       89 F8       
04276E 86 9D 61 B5 0903*      dw -25210,-19103,-1911
       89 F8       
042774 0C C7 35 AE 0904*      dw -14580,-20939,-1911
       89 F8       
04277A 05 C8 07 AC 0905*      dw -14331,-21497,0
       00 00       
042780 EA A8 A6 AC 0906*      dw -22294,-21338,0
       00 00       
042786 EA A8 A6 AC 0907*      dw -22294,-21338,0
       00 00       
04278C 3E AA BF AE 0908*      dw -21954,-20801,-1911
       89 F8       
042792 0C C7 35 AE 0909*      dw -14580,-20939,-1911
       89 F8       
042798 3E AA BF AE 0910*      dw -21954,-20801,-1911
       89 F8       
04279E EA A8 A6 AC 0911*      dw -22294,-21338,0
       00 00       
0427A4 41 96 02 B1 0912*      dw -27071,-20222,0
       00 00       
0427AA 41 96 02 B1 0913*      dw -27071,-20222,0
       00 00       
0427B0 CD 98 89 B2 0914*      dw -26419,-19831,-1911
       89 F8       
0427B6 3E AA BF AE 0915*      dw -21954,-20801,-1911
       89 F8       
0427BC CD 98 89 B2 0916*      dw -26419,-19831,-1911
       89 F8       
0427C2 41 96 02 B1 0917*      dw -27071,-20222,0
       00 00       
0427C8 09 90 D2 BC 0918*      dw -28663,-17198,0
       00 00       
0427CE 09 90 D2 BC 0919*      dw -28663,-17198,0
       00 00       
0427D4 F1 92 D2 BC 0920*      dw -27919,-17198,-1911
       89 F8       
0427DA CD 98 89 B2 0921*      dw -26419,-19831,-1911
       89 F8       
0427E0 05 C8 07 AC 0922*      dw -14331,-21497,0
       00 00       
0427E6 0C C7 35 AE 0923*      dw -14580,-20939,1911
       77 07       
0427EC 3E AA BF AE 0924*      dw -21954,-20801,1911
       77 07       
0427F2 3E AA BF AE 0925*      dw -21954,-20801,1911
       77 07       
0427F8 EA A8 A6 AC 0926*      dw -22294,-21338,0
       00 00       
0427FE 05 C8 07 AC 0927*      dw -14331,-21497,0
       00 00       
042804 EA A8 A6 AC 0928*      dw -22294,-21338,0
       00 00       
04280A 3E AA BF AE 0929*      dw -21954,-20801,1911
       77 07       
042810 CD 98 89 B2 0930*      dw -26419,-19831,1911
       77 07       
042816 CD 98 89 B2 0931*      dw -26419,-19831,1911
       77 07       
04281C 41 96 02 B1 0932*      dw -27071,-20222,0
       00 00       
042822 EA A8 A6 AC 0933*      dw -22294,-21338,0
       00 00       
042828 41 96 02 B1 0934*      dw -27071,-20222,0
       00 00       
04282E CD 98 89 B2 0935*      dw -26419,-19831,1911
       77 07       
042834 F1 92 D2 BC 0936*      dw -27919,-17198,1911
       77 07       
04283A F1 92 D2 BC 0937*      dw -27919,-17198,1911
       77 07       
042840 09 90 D2 BC 0938*      dw -28663,-17198,0
       00 00       
042846 41 96 02 B1 0939*      dw -27071,-20222,0
       00 00       
04284C 0C C7 35 AE 0940*      dw -14580,-20939,1911
       77 07       
042852 42 C5 3F B2 0941*      dw -15038,-19905,1911
       77 07       
042858 B5 AC A4 B2 0942*      dw -21323,-19804,1911
       77 07       
04285E B5 AC A4 B2 0943*      dw -21323,-19804,1911
       77 07       
042864 3E AA BF AE 0944*      dw -21954,-20801,1911
       77 07       
04286A 0C C7 35 AE 0945*      dw -14580,-20939,1911
       77 07       
042870 3E AA BF AE 0946*      dw -21954,-20801,1911
       77 07       
042876 B5 AC A4 B2 0947*      dw -21323,-19804,1911
       77 07       
04287C 86 9D 61 B5 0948*      dw -25210,-19103,1911
       77 07       
042882 86 9D 61 B5 0949*      dw -25210,-19103,1911
       77 07       
042888 CD 98 89 B2 0950*      dw -26419,-19831,1911
       77 07       
04288E 3E AA BF AE 0951*      dw -21954,-20801,1911
       77 07       
042894 CD 98 89 B2 0952*      dw -26419,-19831,1911
       77 07       
04289A 86 9D 61 B5 0953*      dw -25210,-19103,1911
       77 07       
0428A0 54 98 D2 BC 0954*      dw -26540,-17198,1911
       77 07       
0428A6 54 98 D2 BC 0955*      dw -26540,-17198,1911
       77 07       
0428AC F1 92 D2 BC 0956*      dw -27919,-17198,1911
       77 07       
0428B2 CD 98 89 B2 0957*      dw -26419,-19831,1911
       77 07       
0428B8 42 C5 3F B2 0958*      dw -15038,-19905,1911
       77 07       
0428BE 49 C4 6D B4 0959*      dw -15287,-19347,0
       00 00       
0428C4 09 AE BD B4 0960*      dw -20983,-19267,0
       00 00       
0428CA 09 AE BD B4 0961*      dw -20983,-19267,0
       00 00       
0428D0 B5 AC A4 B2 0962*      dw -21323,-19804,1911
       77 07       
0428D6 42 C5 3F B2 0963*      dw -15038,-19905,1911
       77 07       
0428DC B5 AC A4 B2 0964*      dw -21323,-19804,1911
       77 07       
0428E2 09 AE BD B4 0965*      dw -20983,-19267,0
       00 00       
0428E8 12 A0 E9 B6 0966*      dw -24558,-18711,0
       00 00       
0428EE 12 A0 E9 B6 0967*      dw -24558,-18711,0
       00 00       
0428F4 86 9D 61 B5 0968*      dw -25210,-19103,1911
       77 07       
0428FA B5 AC A4 B2 0969*      dw -21323,-19804,1911
       77 07       
042900 86 9D 61 B5 0970*      dw -25210,-19103,1911
       77 07       
042906 12 A0 E9 B6 0971*      dw -24558,-18711,0
       00 00       
04290C 3C 9B D2 BC 0972*      dw -25796,-17198,0
       00 00       
042912 3C 9B D2 BC 0973*      dw -25796,-17198,0
       00 00       
042918 54 98 D2 BC 0974*      dw -26540,-17198,1911
       77 07       
04291E 86 9D 61 B5 0975*      dw -25210,-19103,1911
       77 07       
042924 3C 9B D2 BC 0976*      dw -25796,-17198,0
       00 00       
04292A 54 98 D2 BC 0977*      dw -26540,-17198,-1911
       89 F8       
042930 6B 9B E0 C8 0978*      dw -25749,-14112,-1911
       89 F8       
042936 6B 9B E0 C8 0979*      dw -25749,-14112,-1911
       89 F8       
04293C DC 9D 66 C7 0980*      dw -25124,-14490,0
       00 00       
042942 3C 9B D2 BC 0981*      dw -25796,-17198,0
       00 00       
042948 DC 9D 66 C7 0982*      dw -25124,-14490,0
       00 00       
04294E 6B 9B E0 C8 0983*      dw -25749,-14112,-1911
       89 F8       
042954 2F A5 FC D5 0984*      dw -23249,-10756,-1911
       89 F8       
04295A 2F A5 FC D5 0985*      dw -23249,-10756,-1911
       89 F8       
042960 4A A6 D6 D3 0986*      dw -22966,-11306,0
       00 00       
042966 DC 9D 66 C7 0987*      dw -25124,-14490,0
       00 00       
04296C 4A A6 D6 D3 0988*      dw -22966,-11306,0
       00 00       
042972 2F A5 FC D5 0989*      dw -23249,-10756,-1911
       89 F8       
042978 54 B6 51 E1 0990*      dw -18860,-7855,-1911
       89 F8       
04297E 54 B6 51 E1 0991*      dw -18860,-7855,-1911
       89 F8       
042984 5C B5 69 DE 0992*      dw -19108,-8599,0
       00 00       
04298A 4A A6 D6 D3 0993*      dw -22966,-11306,0
       00 00       
042990 54 98 D2 BC 0994*      dw -26540,-17198,-1911
       89 F8       
042996 F1 92 D2 BC 0995*      dw -27919,-17198,-1911
       89 F8       
04299C E6 96 A0 CB 0996*      dw -26906,-13408,-1911
       89 F8       
0429A2 E6 96 A0 CB 0997*      dw -26906,-13408,-1911
       89 F8       
0429A8 6B 9B E0 C8 0998*      dw -25749,-14112,-1911
       89 F8       
0429AE 54 98 D2 BC 0999*      dw -26540,-17198,-1911
       89 F8       
0429B4 6B 9B E0 C8 1000*      dw -25749,-14112,-1911
       89 F8       
0429BA E6 96 A0 CB 1001*      dw -26906,-13408,-1911
       89 F8       
0429C0 1E A3 FA D9 1002*      dw -23778,-9734,-1911
       89 F8       
0429C6 1E A3 FA D9 1003*      dw -23778,-9734,-1911
       89 F8       
0429CC 2F A5 FC D5 1004*      dw -23249,-10756,-1911
       89 F8       
0429D2 6B 9B E0 C8 1005*      dw -25749,-14112,-1911
       89 F8       
0429D8 2F A5 FC D5 1006*      dw -23249,-10756,-1911
       89 F8       
0429DE 1E A3 FA D9 1007*      dw -23778,-9734,-1911
       89 F8       
0429E4 1F B8 B4 E6 1008*      dw -18401,-6476,-1911
       89 F8       
0429EA 1F B8 B4 E6 1009*      dw -18401,-6476,-1911
       89 F8       
0429F0 54 B6 51 E1 1010*      dw -18860,-7855,-1911
       89 F8       
0429F6 2F A5 FC D5 1011*      dw -23249,-10756,-1911
       89 F8       
0429FC F1 92 D2 BC 1012*      dw -27919,-17198,-1911
       89 F8       
042A02 09 90 D2 BC 1013*      dw -28663,-17198,0
       00 00       
042A08 77 94 1A CD 1014*      dw -27529,-13030,0
       00 00       
042A0E 77 94 1A CD 1015*      dw -27529,-13030,0
       00 00       
042A14 E6 96 A0 CB 1016*      dw -26906,-13408,-1911
       89 F8       
042A1A F1 92 D2 BC 1017*      dw -27919,-17198,-1911
       89 F8       
042A20 E6 96 A0 CB 1018*      dw -26906,-13408,-1911
       89 F8       
042A26 77 94 1A CD 1019*      dw -27529,-13030,0
       00 00       
042A2C 01 A2 21 DC 1020*      dw -24063,-9183,0
       00 00       
042A32 01 A2 21 DC 1021*      dw -24063,-9183,0
       00 00       
042A38 1E A3 FA D9 1022*      dw -23778,-9734,-1911
       89 F8       
042A3E E6 96 A0 CB 1023*      dw -26906,-13408,-1911
       89 F8       
042A44 1E A3 FA D9 1024*      dw -23778,-9734,-1911
       89 F8       
042A4A 01 A2 21 DC 1025*      dw -24063,-9183,0
       00 00       
042A50 17 B9 9B E9 1026*      dw -18153,-5733,0
       00 00       
042A56 17 B9 9B E9 1027*      dw -18153,-5733,0
       00 00       
042A5C 1F B8 B4 E6 1028*      dw -18401,-6476,-1911
       89 F8       
042A62 1E A3 FA D9 1029*      dw -23778,-9734,-1911
       89 F8       
042A68 09 90 D2 BC 1030*      dw -28663,-17198,0
       00 00       
042A6E F1 92 D2 BC 1031*      dw -27919,-17198,1911
       77 07       
042A74 E6 96 A0 CB 1032*      dw -26906,-13408,1911
       77 07       
042A7A E6 96 A0 CB 1033*      dw -26906,-13408,1911
       77 07       
042A80 77 94 1A CD 1034*      dw -27529,-13030,0
       00 00       
042A86 09 90 D2 BC 1035*      dw -28663,-17198,0
       00 00       
042A8C 77 94 1A CD 1036*      dw -27529,-13030,0
       00 00       
042A92 E6 96 A0 CB 1037*      dw -26906,-13408,1911
       77 07       
042A98 1E A3 FA D9 1038*      dw -23778,-9734,1911
       77 07       
042A9E 1E A3 FA D9 1039*      dw -23778,-9734,1911
       77 07       
042AA4 01 A2 21 DC 1040*      dw -24063,-9183,0
       00 00       
042AAA 77 94 1A CD 1041*      dw -27529,-13030,0
       00 00       
042AB0 01 A2 21 DC 1042*      dw -24063,-9183,0
       00 00       
042AB6 1E A3 FA D9 1043*      dw -23778,-9734,1911
       77 07       
042ABC 1F B8 B4 E6 1044*      dw -18401,-6476,1911
       77 07       
042AC2 1F B8 B4 E6 1045*      dw -18401,-6476,1911
       77 07       
042AC8 17 B9 9B E9 1046*      dw -18153,-5733,0
       00 00       
042ACE 01 A2 21 DC 1047*      dw -24063,-9183,0
       00 00       
042AD4 F1 92 D2 BC 1048*      dw -27919,-17198,1911
       77 07       
042ADA 54 98 D2 BC 1049*      dw -26540,-17198,1911
       77 07       
042AE0 6B 9B E0 C8 1050*      dw -25749,-14112,1911
       77 07       
042AE6 6B 9B E0 C8 1051*      dw -25749,-14112,1911
       77 07       
042AEC E6 96 A0 CB 1052*      dw -26906,-13408,1911
       77 07       
042AF2 F1 92 D2 BC 1053*      dw -27919,-17198,1911
       77 07       
042AF8 E6 96 A0 CB 1054*      dw -26906,-13408,1911
       77 07       
042AFE 6B 9B E0 C8 1055*      dw -25749,-14112,1911
       77 07       
042B04 2F A5 FC D5 1056*      dw -23249,-10756,1911
       77 07       
042B0A 2F A5 FC D5 1057*      dw -23249,-10756,1911
       77 07       
042B10 1E A3 FA D9 1058*      dw -23778,-9734,1911
       77 07       
042B16 E6 96 A0 CB 1059*      dw -26906,-13408,1911
       77 07       
042B1C 1E A3 FA D9 1060*      dw -23778,-9734,1911
       77 07       
042B22 2F A5 FC D5 1061*      dw -23249,-10756,1911
       77 07       
042B28 54 B6 51 E1 1062*      dw -18860,-7855,1911
       77 07       
042B2E 54 B6 51 E1 1063*      dw -18860,-7855,1911
       77 07       
042B34 1F B8 B4 E6 1064*      dw -18401,-6476,1911
       77 07       
042B3A 1E A3 FA D9 1065*      dw -23778,-9734,1911
       77 07       
042B40 54 98 D2 BC 1066*      dw -26540,-17198,1911
       77 07       
042B46 3C 9B D2 BC 1067*      dw -25796,-17198,0
       00 00       
042B4C DC 9D 66 C7 1068*      dw -25124,-14490,0
       00 00       
042B52 DC 9D 66 C7 1069*      dw -25124,-14490,0
       00 00       
042B58 6B 9B E0 C8 1070*      dw -25749,-14112,1911
       77 07       
042B5E 54 98 D2 BC 1071*      dw -26540,-17198,1911
       77 07       
042B64 6B 9B E0 C8 1072*      dw -25749,-14112,1911
       77 07       
042B6A DC 9D 66 C7 1073*      dw -25124,-14490,0
       00 00       
042B70 4A A6 D6 D3 1074*      dw -22966,-11306,0
       00 00       
042B76 4A A6 D6 D3 1075*      dw -22966,-11306,0
       00 00       
042B7C 2F A5 FC D5 1076*      dw -23249,-10756,1911
       77 07       
042B82 6B 9B E0 C8 1077*      dw -25749,-14112,1911
       77 07       
042B88 2F A5 FC D5 1078*      dw -23249,-10756,1911
       77 07       
042B8E 4A A6 D6 D3 1079*      dw -22966,-11306,0
       00 00       
042B94 5C B5 69 DE 1080*      dw -19108,-8599,0
       00 00       
042B9A 5C B5 69 DE 1081*      dw -19108,-8599,0
       00 00       
042BA0 54 B6 51 E1 1082*      dw -18860,-7855,1911
       77 07       
042BA6 2F A5 FC D5 1083*      dw -23249,-10756,1911
       77 07       
042BAC 72 3F D1 CA 1084*      dw 16242,-13615,0
       00 00       
042BB2 72 3F CC D2 1085*      dw 16242,-11572,-4204
       94 EF       
042BB8 51 57 FB C8 1086*      dw 22353,-14085,-3527
       39 F2       
042BBE 51 57 FB C8 1087*      dw 22353,-14085,-3527
       39 F2       
042BC4 BC 54 DE C3 1088*      dw 21692,-15394,0
       00 00       
042BCA 72 3F D1 CA 1089*      dw 16242,-13615,0
       00 00       
042BD0 BC 54 DE C3 1090*      dw 21692,-15394,0
       00 00       
042BD6 51 57 FB C8 1091*      dw 22353,-14085,-3527
       39 F2       
042BDC 25 5F BF B6 1092*      dw 24357,-18753,-2270
       22 F7       
042BE2 25 5F BF B6 1093*      dw 24357,-18753,-2270
       22 F7       
042BE8 EC 5B D8 B4 1094*      dw 23532,-19240,0
       00 00       
042BEE BC 54 DE C3 1095*      dw 21692,-15394,0
       00 00       
042BF4 EC 5B D8 B4 1096*      dw 23532,-19240,0
       00 00       
042BFA 25 5F BF B6 1097*      dw 24357,-18753,-2270
       22 F7       
042C00 93 6A 6E A6 1098*      dw 27283,-22930,-1592
       C8 F9       
042C06 93 6A 6E A6 1099*      dw 27283,-22930,-1592
       C8 F9       
042C0C C4 64 6E A6 1100*      dw 25796,-22930,0
       00 00       
042C12 EC 5B D8 B4 1101*      dw 23532,-19240,0
       00 00       
042C18 72 3F CC D2 1102*      dw 16242,-11572,-4204
       94 EF       
042C1E 72 3F A1 E1 1103*      dw 16242,-7775,-4204
       94 EF       
042C24 1C 5C 76 D2 1104*      dw 23580,-11658,-3527
       39 F2       
042C2A 1C 5C 76 D2 1105*      dw 23580,-11658,-3527
       39 F2       
042C30 51 57 FB C8 1106*      dw 22353,-14085,-3527
       39 F2       
042C36 72 3F CC D2 1107*      dw 16242,-11572,-4204
       94 EF       
042C3C 51 57 FB C8 1108*      dw 22353,-14085,-3527
       39 F2       
042C42 1C 5C 76 D2 1109*      dw 23580,-11658,-3527
       39 F2       
042C48 22 65 4B BA 1110*      dw 25890,-17845,-2270
       22 F7       
042C4E 22 65 4B BA 1111*      dw 25890,-17845,-2270
       22 F7       
042C54 25 5F BF B6 1112*      dw 24357,-18753,-2270
       22 F7       
042C5A 51 57 FB C8 1113*      dw 22353,-14085,-3527
       39 F2       
042C60 25 5F BF B6 1114*      dw 24357,-18753,-2270
       22 F7       
042C66 22 65 4B BA 1115*      dw 25890,-17845,-2270
       22 F7       
042C6C 5A 75 6E A6 1116*      dw 30042,-22930,-1592
       C8 F9       
042C72 5A 75 6E A6 1117*      dw 30042,-22930,-1592
       C8 F9       
042C78 93 6A 6E A6 1118*      dw 27283,-22930,-1592
       C8 F9       
042C7E 25 5F BF B6 1119*      dw 24357,-18753,-2270
       22 F7       
042C84 72 3F A1 E1 1120*      dw 16242,-7775,-4204
       94 EF       
042C8A 72 3F 9B E9 1121*      dw 16242,-5733,0
       00 00       
042C90 AF 5E 91 D7 1122*      dw 24239,-10351,0
       00 00       
042C96 AF 5E 91 D7 1123*      dw 24239,-10351,0
       00 00       
042C9C 1C 5C 76 D2 1124*      dw 23580,-11658,-3527
       39 F2       
042CA2 72 3F A1 E1 1125*      dw 16242,-7775,-4204
       94 EF       
042CA8 1C 5C 76 D2 1126*      dw 23580,-11658,-3527
       39 F2       
042CAE AF 5E 91 D7 1127*      dw 24239,-10351,0
       00 00       
042CB4 5B 68 34 BC 1128*      dw 26715,-17356,0
       00 00       
042CBA 5B 68 34 BC 1129*      dw 26715,-17356,0
       00 00       
042CC0 22 65 4B BA 1130*      dw 25890,-17845,-2270
       22 F7       
042CC6 1C 5C 76 D2 1131*      dw 23580,-11658,-3527
       39 F2       
042CCC 22 65 4B BA 1132*      dw 25890,-17845,-2270
       22 F7       
042CD2 5B 68 34 BC 1133*      dw 26715,-17356,0
       00 00       
042CD8 29 7B 6E A6 1134*      dw 31529,-22930,0
       00 00       
042CDE 29 7B 6E A6 1135*      dw 31529,-22930,0
       00 00       
042CE4 5A 75 6E A6 1136*      dw 30042,-22930,-1592
       C8 F9       
042CEA 22 65 4B BA 1137*      dw 25890,-17845,-2270
       22 F7       
042CF0 72 3F 9B E9 1138*      dw 16242,-5733,0
       00 00       
042CF6 72 3F A1 E1 1139*      dw 16242,-7775,4204
       6C 10       
042CFC 1C 5C 76 D2 1140*      dw 23580,-11658,3527
       C7 0D       
042D02 1C 5C 76 D2 1141*      dw 23580,-11658,3527
       C7 0D       
042D08 AF 5E 91 D7 1142*      dw 24239,-10351,0
       00 00       
042D0E 72 3F 9B E9 1143*      dw 16242,-5733,0
       00 00       
042D14 AF 5E 91 D7 1144*      dw 24239,-10351,0
       00 00       
042D1A 1C 5C 76 D2 1145*      dw 23580,-11658,3527
       C7 0D       
042D20 22 65 4B BA 1146*      dw 25890,-17845,2270
       DE 08       
042D26 22 65 4B BA 1147*      dw 25890,-17845,2270
       DE 08       
042D2C 5B 68 34 BC 1148*      dw 26715,-17356,0
       00 00       
042D32 AF 5E 91 D7 1149*      dw 24239,-10351,0
       00 00       
042D38 5B 68 34 BC 1150*      dw 26715,-17356,0
       00 00       
042D3E 22 65 4B BA 1151*      dw 25890,-17845,2270
       DE 08       
042D44 5A 75 6E A6 1152*      dw 30042,-22930,1592
       38 06       
042D4A 5A 75 6E A6 1153*      dw 30042,-22930,1592
       38 06       
042D50 29 7B 6E A6 1154*      dw 31529,-22930,0
       00 00       
042D56 5B 68 34 BC 1155*      dw 26715,-17356,0
       00 00       
042D5C 72 3F A1 E1 1156*      dw 16242,-7775,4204
       6C 10       
042D62 72 3F CC D2 1157*      dw 16242,-11572,4204
       6C 10       
042D68 51 57 FB C8 1158*      dw 22353,-14085,3527
       C7 0D       
042D6E 51 57 FB C8 1159*      dw 22353,-14085,3527
       C7 0D       
042D74 1C 5C 76 D2 1160*      dw 23580,-11658,3527
       C7 0D       
042D7A 72 3F A1 E1 1161*      dw 16242,-7775,4204
       6C 10       
042D80 1C 5C 76 D2 1162*      dw 23580,-11658,3527
       C7 0D       
042D86 51 57 FB C8 1163*      dw 22353,-14085,3527
       C7 0D       
042D8C 25 5F BF B6 1164*      dw 24357,-18753,2270
       DE 08       
042D92 25 5F BF B6 1165*      dw 24357,-18753,2270
       DE 08       
042D98 22 65 4B BA 1166*      dw 25890,-17845,2270
       DE 08       
042D9E 1C 5C 76 D2 1167*      dw 23580,-11658,3527
       C7 0D       
042DA4 22 65 4B BA 1168*      dw 25890,-17845,2270
       DE 08       
042DAA 25 5F BF B6 1169*      dw 24357,-18753,2270
       DE 08       
042DB0 93 6A 6E A6 1170*      dw 27283,-22930,1592
       38 06       
042DB6 93 6A 6E A6 1171*      dw 27283,-22930,1592
       38 06       
042DBC 5A 75 6E A6 1172*      dw 30042,-22930,1592
       38 06       
042DC2 22 65 4B BA 1173*      dw 25890,-17845,2270
       DE 08       
042DC8 72 3F CC D2 1174*      dw 16242,-11572,4204
       6C 10       
042DCE 72 3F D1 CA 1175*      dw 16242,-13615,0
       00 00       
042DD4 BC 54 DE C3 1176*      dw 21692,-15394,0
       00 00       
042DDA BC 54 DE C3 1177*      dw 21692,-15394,0
       00 00       
042DE0 51 57 FB C8 1178*      dw 22353,-14085,3527
       C7 0D       
042DE6 72 3F CC D2 1179*      dw 16242,-11572,4204
       6C 10       
042DEC 51 57 FB C8 1180*      dw 22353,-14085,3527
       C7 0D       
042DF2 BC 54 DE C3 1181*      dw 21692,-15394,0
       00 00       
042DF8 EC 5B D8 B4 1182*      dw 23532,-19240,0
       00 00       
042DFE EC 5B D8 B4 1183*      dw 23532,-19240,0
       00 00       
042E04 25 5F BF B6 1184*      dw 24357,-18753,2270
       DE 08       
042E0A 51 57 FB C8 1185*      dw 22353,-14085,3527
       C7 0D       
042E10 25 5F BF B6 1186*      dw 24357,-18753,2270
       DE 08       
042E16 EC 5B D8 B4 1187*      dw 23532,-19240,0
       00 00       
042E1C C4 64 6E A6 1188*      dw 25796,-22930,0
       00 00       
042E22 C4 64 6E A6 1189*      dw 25796,-22930,0
       00 00       
042E28 93 6A 6E A6 1190*      dw 27283,-22930,1592
       38 06       
042E2E 25 5F BF B6 1191*      dw 24357,-18753,2270
       DE 08       
042E34 C4 64 6E A6 1192*      dw 25796,-22930,0
       00 00       
042E3A 93 6A 6E A6 1193*      dw 27283,-22930,-1592
       C8 F9       
042E40 63 6E 66 A4 1194*      dw 28259,-23450,-1427
       6D FA       
042E46 63 6E 66 A4 1195*      dw 28259,-23450,-1427
       6D FA       
042E4C 39 68 90 A4 1196*      dw 26681,-23408,0
       00 00       
042E52 C4 64 6E A6 1197*      dw 25796,-22930,0
       00 00       
042E58 39 68 90 A4 1198*      dw 26681,-23408,0
       00 00       
042E5E 63 6E 66 A4 1199*      dw 28259,-23450,-1427
       6D FA       
042E64 4E 6F 5D A4 1200*      dw 28494,-23459,-1120
       A0 FB       
042E6A 4E 6F 5D A4 1201*      dw 28494,-23459,-1120
       A0 FB       
042E70 06 6A 90 A4 1202*      dw 27142,-23408,0
       00 00       
042E76 39 68 90 A4 1203*      dw 26681,-23408,0
       00 00       
042E7C 06 6A 90 A4 1204*      dw 27142,-23408,0
       00 00       
042E82 4E 6F 5D A4 1205*      dw 28494,-23459,-1120
       A0 FB       
042E88 5F 6C 6E A6 1206*      dw 27743,-22930,-955
       45 FC       
042E8E 5F 6C 6E A6 1207*      dw 27743,-22930,-955
       45 FC       
042E94 80 68 6E A6 1208*      dw 26752,-22930,0
       00 00       
042E9A 06 6A 90 A4 1209*      dw 27142,-23408,0
       00 00       
042EA0 93 6A 6E A6 1210*      dw 27283,-22930,-1592
       C8 F9       
042EA6 5A 75 6E A6 1211*      dw 30042,-22930,-1592
       C8 F9       
042EAC D5 79 1A A4 1212*      dw 31189,-23526,-1427
       6D FA       
042EB2 D5 79 1A A4 1213*      dw 31189,-23526,-1427
       6D FA       
042EB8 63 6E 66 A4 1214*      dw 28259,-23450,-1427
       6D FA       
042EBE 93 6A 6E A6 1215*      dw 27283,-22930,-1592
       C8 F9       
042EC4 63 6E 66 A4 1216*      dw 28259,-23450,-1427
       6D FA       
042ECA D5 79 1A A4 1217*      dw 31189,-23526,-1427
       6D FA       
042ED0 1F 79 FD A3 1218*      dw 31007,-23555,-1120
       A0 FB       
042ED6 1F 79 FD A3 1219*      dw 31007,-23555,-1120
       A0 FB       
042EDC 4E 6F 5D A4 1220*      dw 28494,-23459,-1120
       A0 FB       
042EE2 63 6E 66 A4 1221*      dw 28259,-23450,-1427
       6D FA       
042EE8 4E 6F 5D A4 1222*      dw 28494,-23459,-1120
       A0 FB       
042EEE 1F 79 FD A3 1223*      dw 31007,-23555,-1120
       A0 FB       
042EF4 8E 73 6E A6 1224*      dw 29582,-22930,-955
       45 FC       
042EFA 8E 73 6E A6 1225*      dw 29582,-22930,-955
       45 FC       
042F00 5F 6C 6E A6 1226*      dw 27743,-22930,-955
       45 FC       
042F06 4E 6F 5D A4 1227*      dw 28494,-23459,-1120
       A0 FB       
042F0C 5A 75 6E A6 1228*      dw 30042,-22930,-1592
       C8 F9       
042F12 29 7B 6E A6 1229*      dw 31529,-22930,0
       00 00       
042F18 FF 7F F2 A3 1230*      dw 32767,-23566,0
       00 00       
042F1E FF 7F F2 A3 1231*      dw 32767,-23566,0
       00 00       
042F24 D5 79 1A A4 1232*      dw 31189,-23526,-1427
       6D FA       
042F2A 5A 75 6E A6 1233*      dw 30042,-22930,-1592
       C8 F9       
042F30 D5 79 1A A4 1234*      dw 31189,-23526,-1427
       6D FA       
042F36 FF 7F F2 A3 1235*      dw 32767,-23566,0
       00 00       
042F3C 68 7E CA A3 1236*      dw 32360,-23606,0
       00 00       
042F42 68 7E CA A3 1237*      dw 32360,-23606,0
       00 00       
042F48 1F 79 FD A3 1238*      dw 31007,-23555,-1120
       A0 FB       
042F4E D5 79 1A A4 1239*      dw 31189,-23526,-1427
       6D FA       
042F54 1F 79 FD A3 1240*      dw 31007,-23555,-1120
       A0 FB       
042F5A 68 7E CA A3 1241*      dw 32360,-23606,0
       00 00       
042F60 6D 77 6E A6 1242*      dw 30573,-22930,0
       00 00       
042F66 6D 77 6E A6 1243*      dw 30573,-22930,0
       00 00       
042F6C 8E 73 6E A6 1244*      dw 29582,-22930,-955
       45 FC       
042F72 1F 79 FD A3 1245*      dw 31007,-23555,-1120
       A0 FB       
042F78 29 7B 6E A6 1246*      dw 31529,-22930,0
       00 00       
042F7E 5A 75 6E A6 1247*      dw 30042,-22930,1592
       38 06       
042F84 D5 79 1A A4 1248*      dw 31189,-23526,1427
       93 05       
042F8A D5 79 1A A4 1249*      dw 31189,-23526,1427
       93 05       
042F90 FF 7F F2 A3 1250*      dw 32767,-23566,0
       00 00       
042F96 29 7B 6E A6 1251*      dw 31529,-22930,0
       00 00       
042F9C FF 7F F2 A3 1252*      dw 32767,-23566,0
       00 00       
042FA2 D5 79 1A A4 1253*      dw 31189,-23526,1427
       93 05       
042FA8 1F 79 FD A3 1254*      dw 31007,-23555,1120
       60 04       
042FAE 1F 79 FD A3 1255*      dw 31007,-23555,1120
       60 04       
042FB4 68 7E CA A3 1256*      dw 32360,-23606,0
       00 00       
042FBA FF 7F F2 A3 1257*      dw 32767,-23566,0
       00 00       
042FC0 68 7E CA A3 1258*      dw 32360,-23606,0
       00 00       
042FC6 1F 79 FD A3 1259*      dw 31007,-23555,1120
       60 04       
042FCC 8E 73 6E A6 1260*      dw 29582,-22930,955
       BB 03       
042FD2 8E 73 6E A6 1261*      dw 29582,-22930,955
       BB 03       
042FD8 6D 77 6E A6 1262*      dw 30573,-22930,0
       00 00       
042FDE 68 7E CA A3 1263*      dw 32360,-23606,0
       00 00       
042FE4 5A 75 6E A6 1264*      dw 30042,-22930,1592
       38 06       
042FEA 93 6A 6E A6 1265*      dw 27283,-22930,1592
       38 06       
042FF0 63 6E 66 A4 1266*      dw 28259,-23450,1427
       93 05       
042FF6 63 6E 66 A4 1267*      dw 28259,-23450,1427
       93 05       
042FFC D5 79 1A A4 1268*      dw 31189,-23526,1427
       93 05       
043002 5A 75 6E A6 1269*      dw 30042,-22930,1592
       38 06       
043008 D5 79 1A A4 1270*      dw 31189,-23526,1427
       93 05       
04300E 63 6E 66 A4 1271*      dw 28259,-23450,1427
       93 05       
043014 4E 6F 5D A4 1272*      dw 28494,-23459,1120
       60 04       
04301A 4E 6F 5D A4 1273*      dw 28494,-23459,1120
       60 04       
043020 1F 79 FD A3 1274*      dw 31007,-23555,1120
       60 04       
043026 D5 79 1A A4 1275*      dw 31189,-23526,1427
       93 05       
04302C 1F 79 FD A3 1276*      dw 31007,-23555,1120
       60 04       
043032 4E 6F 5D A4 1277*      dw 28494,-23459,1120
       60 04       
043038 5F 6C 6E A6 1278*      dw 27743,-22930,955
       BB 03       
04303E 5F 6C 6E A6 1279*      dw 27743,-22930,955
       BB 03       
043044 8E 73 6E A6 1280*      dw 29582,-22930,955
       BB 03       
04304A 1F 79 FD A3 1281*      dw 31007,-23555,1120
       60 04       
043050 93 6A 6E A6 1282*      dw 27283,-22930,1592
       38 06       
043056 C4 64 6E A6 1283*      dw 25796,-22930,0
       00 00       
04305C 39 68 90 A4 1284*      dw 26681,-23408,0
       00 00       
043062 39 68 90 A4 1285*      dw 26681,-23408,0
       00 00       
043068 63 6E 66 A4 1286*      dw 28259,-23450,1427
       93 05       
04306E 93 6A 6E A6 1287*      dw 27283,-22930,1592
       38 06       
043074 63 6E 66 A4 1288*      dw 28259,-23450,1427
       93 05       
04307A 39 68 90 A4 1289*      dw 26681,-23408,0
       00 00       
043080 06 6A 90 A4 1290*      dw 27142,-23408,0
       00 00       
043086 06 6A 90 A4 1291*      dw 27142,-23408,0
       00 00       
04308C 4E 6F 5D A4 1292*      dw 28494,-23459,1120
       60 04       
043092 63 6E 66 A4 1293*      dw 28259,-23450,1427
       93 05       
043098 4E 6F 5D A4 1294*      dw 28494,-23459,1120
       60 04       
04309E 06 6A 90 A4 1295*      dw 27142,-23408,0
       00 00       
0430A4 80 68 6E A6 1296*      dw 26752,-22930,0
       00 00       
0430AA 80 68 6E A6 1297*      dw 26752,-22930,0
       00 00       
0430B0 5F 6C 6E A6 1298*      dw 27743,-22930,955
       BB 03       
0430B6 4E 6F 5D A4 1299*      dw 28494,-23459,1120
       60 04       
0430BC 00 00 70 8A 1300*      dw 0,-30096,0
       00 00       
0430C2 00 00 70 8A 1301*      dw 0,-30096,0
       00 00       
0430C8 BA 0B 8D 8D 1302*      dw 3002,-29299,-1766
       1A F9       
0430CE BA 0B 8D 8D 1303*      dw 3002,-29299,-1766
       1A F9       
0430D4 8C 0D 8D 8D 1304*      dw 3468,-29299,0
       00 00       
0430DA 00 00 70 8A 1305*      dw 0,-30096,0
       00 00       
0430E0 8C 0D 8D 8D 1306*      dw 3468,-29299,0
       00 00       
0430E6 BA 0B 8D 8D 1307*      dw 3002,-29299,-1766
       1A F9       
0430EC A9 07 63 94 1308*      dw 1961,-27549,-1152
       80 FB       
0430F2 A9 07 63 94 1309*      dw 1961,-27549,-1152
       80 FB       
0430F8 D8 08 63 94 1310*      dw 2264,-27549,0
       00 00       
0430FE 8C 0D 8D 8D 1311*      dw 3468,-29299,0
       00 00       
043104 D8 08 63 94 1312*      dw 2264,-27549,0
       00 00       
04310A A9 07 63 94 1313*      dw 1961,-27549,-1152
       80 FB       
043110 75 06 3C 9B 1314*      dw 1653,-25796,-971
       35 FC       
043116 75 06 3C 9B 1315*      dw 1653,-25796,-971
       35 FC       
04311C 77 07 3C 9B 1316*      dw 1911,-25796,0
       00 00       
043122 D8 08 63 94 1317*      dw 2264,-27549,0
       00 00       
043128 00 00 70 8A 1318*      dw 0,-30096,0
       00 00       
04312E 00 00 70 8A 1319*      dw 0,-30096,0
       00 00       
043134 E6 06 8D 8D 1320*      dw 1766,-29299,-3002
       46 F4       
04313A E6 06 8D 8D 1321*      dw 1766,-29299,-3002
       46 F4       
043140 BA 0B 8D 8D 1322*      dw 3002,-29299,-1766
       1A F9       
043146 00 00 70 8A 1323*      dw 0,-30096,0
       00 00       
04314C BA 0B 8D 8D 1324*      dw 3002,-29299,-1766
       1A F9       
043152 E6 06 8D 8D 1325*      dw 1766,-29299,-3002
       46 F4       
043158 80 04 63 94 1326*      dw 1152,-27549,-1961
       57 F8       
04315E 80 04 63 94 1327*      dw 1152,-27549,-1961
       57 F8       
043164 A9 07 63 94 1328*      dw 1961,-27549,-1152
       80 FB       
04316A BA 0B 8D 8D 1329*      dw 3002,-29299,-1766
       1A F9       
043170 A9 07 63 94 1330*      dw 1961,-27549,-1152
       80 FB       
043176 80 04 63 94 1331*      dw 1152,-27549,-1961
       57 F8       
04317C CB 03 3C 9B 1332*      dw 971,-25796,-1653
       8B F9       
043182 CB 03 3C 9B 1333*      dw 971,-25796,-1653
       8B F9       
043188 75 06 3C 9B 1334*      dw 1653,-25796,-971
       35 FC       
04318E A9 07 63 94 1335*      dw 1961,-27549,-1152
       80 FB       
043194 00 00 70 8A 1336*      dw 0,-30096,0
       00 00       
04319A 00 00 70 8A 1337*      dw 0,-30096,0
       00 00       
0431A0 00 00 8D 8D 1338*      dw 0,-29299,-3468
       74 F2       
0431A6 00 00 8D 8D 1339*      dw 0,-29299,-3468
       74 F2       
0431AC E6 06 8D 8D 1340*      dw 1766,-29299,-3002
       46 F4       
0431B2 00 00 70 8A 1341*      dw 0,-30096,0
       00 00       
0431B8 E6 06 8D 8D 1342*      dw 1766,-29299,-3002
       46 F4       
0431BE 00 00 8D 8D 1343*      dw 0,-29299,-3468
       74 F2       
0431C4 00 00 63 94 1344*      dw 0,-27549,-2264
       28 F7       
0431CA 00 00 63 94 1345*      dw 0,-27549,-2264
       28 F7       
0431D0 80 04 63 94 1346*      dw 1152,-27549,-1961
       57 F8       
0431D6 E6 06 8D 8D 1347*      dw 1766,-29299,-3002
       46 F4       
0431DC 80 04 63 94 1348*      dw 1152,-27549,-1961
       57 F8       
0431E2 00 00 63 94 1349*      dw 0,-27549,-2264
       28 F7       
0431E8 00 00 3C 9B 1350*      dw 0,-25796,-1911
       89 F8       
0431EE 00 00 3C 9B 1351*      dw 0,-25796,-1911
       89 F8       
0431F4 CB 03 3C 9B 1352*      dw 971,-25796,-1653
       8B F9       
0431FA 80 04 63 94 1353*      dw 1152,-27549,-1961
       57 F8       
043200 00 00 70 8A 1354*      dw 0,-30096,0
       00 00       
043206 00 00 70 8A 1355*      dw 0,-30096,0
       00 00       
04320C 1A F9 8D 8D 1356*      dw -1766,-29299,-3002
       46 F4       
043212 1A F9 8D 8D 1357*      dw -1766,-29299,-3002
       46 F4       
043218 00 00 8D 8D 1358*      dw 0,-29299,-3468
       74 F2       
04321E 00 00 70 8A 1359*      dw 0,-30096,0
       00 00       
043224 00 00 8D 8D 1360*      dw 0,-29299,-3468
       74 F2       
04322A 1A F9 8D 8D 1361*      dw -1766,-29299,-3002
       46 F4       
043230 80 FB 63 94 1362*      dw -1152,-27549,-1961
       57 F8       
043236 80 FB 63 94 1363*      dw -1152,-27549,-1961
       57 F8       
04323C 00 00 63 94 1364*      dw 0,-27549,-2264
       28 F7       
043242 00 00 8D 8D 1365*      dw 0,-29299,-3468
       74 F2       
043248 00 00 63 94 1366*      dw 0,-27549,-2264
       28 F7       
04324E 80 FB 63 94 1367*      dw -1152,-27549,-1961
       57 F8       
043254 35 FC 3C 9B 1368*      dw -971,-25796,-1653
       8B F9       
04325A 35 FC 3C 9B 1369*      dw -971,-25796,-1653
       8B F9       
043260 00 00 3C 9B 1370*      dw 0,-25796,-1911
       89 F8       
043266 00 00 63 94 1371*      dw 0,-27549,-2264
       28 F7       
04326C 00 00 70 8A 1372*      dw 0,-30096,0
       00 00       
043272 00 00 70 8A 1373*      dw 0,-30096,0
       00 00       
043278 46 F4 8D 8D 1374*      dw -3002,-29299,-1766
       1A F9       
04327E 46 F4 8D 8D 1375*      dw -3002,-29299,-1766
       1A F9       
043284 1A F9 8D 8D 1376*      dw -1766,-29299,-3002
       46 F4       
04328A 00 00 70 8A 1377*      dw 0,-30096,0
       00 00       
043290 1A F9 8D 8D 1378*      dw -1766,-29299,-3002
       46 F4       
043296 46 F4 8D 8D 1379*      dw -3002,-29299,-1766
       1A F9       
04329C 57 F8 63 94 1380*      dw -1961,-27549,-1152
       80 FB       
0432A2 57 F8 63 94 1381*      dw -1961,-27549,-1152
       80 FB       
0432A8 80 FB 63 94 1382*      dw -1152,-27549,-1961
       57 F8       
0432AE 1A F9 8D 8D 1383*      dw -1766,-29299,-3002
       46 F4       
0432B4 80 FB 63 94 1384*      dw -1152,-27549,-1961
       57 F8       
0432BA 57 F8 63 94 1385*      dw -1961,-27549,-1152
       80 FB       
0432C0 8B F9 3C 9B 1386*      dw -1653,-25796,-971
       35 FC       
0432C6 8B F9 3C 9B 1387*      dw -1653,-25796,-971
       35 FC       
0432CC 35 FC 3C 9B 1388*      dw -971,-25796,-1653
       8B F9       
0432D2 80 FB 63 94 1389*      dw -1152,-27549,-1961
       57 F8       
0432D8 00 00 70 8A 1390*      dw 0,-30096,0
       00 00       
0432DE 00 00 70 8A 1391*      dw 0,-30096,0
       00 00       
0432E4 74 F2 8D 8D 1392*      dw -3468,-29299,0
       00 00       
0432EA 74 F2 8D 8D 1393*      dw -3468,-29299,0
       00 00       
0432F0 46 F4 8D 8D 1394*      dw -3002,-29299,-1766
       1A F9       
0432F6 00 00 70 8A 1395*      dw 0,-30096,0
       00 00       
0432FC 46 F4 8D 8D 1396*      dw -3002,-29299,-1766
       1A F9       
043302 74 F2 8D 8D 1397*      dw -3468,-29299,0
       00 00       
043308 28 F7 63 94 1398*      dw -2264,-27549,0
       00 00       
04330E 28 F7 63 94 1399*      dw -2264,-27549,0
       00 00       
043314 57 F8 63 94 1400*      dw -1961,-27549,-1152
       80 FB       
04331A 46 F4 8D 8D 1401*      dw -3002,-29299,-1766
       1A F9       
043320 57 F8 63 94 1402*      dw -1961,-27549,-1152
       80 FB       
043326 28 F7 63 94 1403*      dw -2264,-27549,0
       00 00       
04332C 89 F8 3C 9B 1404*      dw -1911,-25796,0
       00 00       
043332 89 F8 3C 9B 1405*      dw -1911,-25796,0
       00 00       
043338 8B F9 3C 9B 1406*      dw -1653,-25796,-971
       35 FC       
04333E 57 F8 63 94 1407*      dw -1961,-27549,-1152
       80 FB       
043344 00 00 70 8A 1408*      dw 0,-30096,0
       00 00       
04334A 00 00 70 8A 1409*      dw 0,-30096,0
       00 00       
043350 46 F4 8D 8D 1410*      dw -3002,-29299,1766
       E6 06       
043356 46 F4 8D 8D 1411*      dw -3002,-29299,1766
       E6 06       
04335C 74 F2 8D 8D 1412*      dw -3468,-29299,0
       00 00       
043362 00 00 70 8A 1413*      dw 0,-30096,0
       00 00       
043368 74 F2 8D 8D 1414*      dw -3468,-29299,0
       00 00       
04336E 46 F4 8D 8D 1415*      dw -3002,-29299,1766
       E6 06       
043374 57 F8 63 94 1416*      dw -1961,-27549,1152
       80 04       
04337A 57 F8 63 94 1417*      dw -1961,-27549,1152
       80 04       
043380 28 F7 63 94 1418*      dw -2264,-27549,0
       00 00       
043386 74 F2 8D 8D 1419*      dw -3468,-29299,0
       00 00       
04338C 28 F7 63 94 1420*      dw -2264,-27549,0
       00 00       
043392 57 F8 63 94 1421*      dw -1961,-27549,1152
       80 04       
043398 8B F9 3C 9B 1422*      dw -1653,-25796,971
       CB 03       
04339E 8B F9 3C 9B 1423*      dw -1653,-25796,971
       CB 03       
0433A4 89 F8 3C 9B 1424*      dw -1911,-25796,0
       00 00       
0433AA 28 F7 63 94 1425*      dw -2264,-27549,0
       00 00       
0433B0 00 00 70 8A 1426*      dw 0,-30096,0
       00 00       
0433B6 00 00 70 8A 1427*      dw 0,-30096,0
       00 00       
0433BC 1A F9 8D 8D 1428*      dw -1766,-29299,3002
       BA 0B       
0433C2 1A F9 8D 8D 1429*      dw -1766,-29299,3002
       BA 0B       
0433C8 46 F4 8D 8D 1430*      dw -3002,-29299,1766
       E6 06       
0433CE 00 00 70 8A 1431*      dw 0,-30096,0
       00 00       
0433D4 46 F4 8D 8D 1432*      dw -3002,-29299,1766
       E6 06       
0433DA 1A F9 8D 8D 1433*      dw -1766,-29299,3002
       BA 0B       
0433E0 80 FB 63 94 1434*      dw -1152,-27549,1961
       A9 07       
0433E6 80 FB 63 94 1435*      dw -1152,-27549,1961
       A9 07       
0433EC 57 F8 63 94 1436*      dw -1961,-27549,1152
       80 04       
0433F2 46 F4 8D 8D 1437*      dw -3002,-29299,1766
       E6 06       
0433F8 57 F8 63 94 1438*      dw -1961,-27549,1152
       80 04       
0433FE 80 FB 63 94 1439*      dw -1152,-27549,1961
       A9 07       
043404 35 FC 3C 9B 1440*      dw -971,-25796,1653
       75 06       
04340A 35 FC 3C 9B 1441*      dw -971,-25796,1653
       75 06       
043410 8B F9 3C 9B 1442*      dw -1653,-25796,971
       CB 03       
043416 57 F8 63 94 1443*      dw -1961,-27549,1152
       80 04       
04341C 00 00 70 8A 1444*      dw 0,-30096,0
       00 00       
043422 00 00 70 8A 1445*      dw 0,-30096,0
       00 00       
043428 00 00 8D 8D 1446*      dw 0,-29299,3468
       8C 0D       
04342E 00 00 8D 8D 1447*      dw 0,-29299,3468
       8C 0D       
043434 1A F9 8D 8D 1448*      dw -1766,-29299,3002
       BA 0B       
04343A 00 00 70 8A 1449*      dw 0,-30096,0
       00 00       
043440 1A F9 8D 8D 1450*      dw -1766,-29299,3002
       BA 0B       
043446 00 00 8D 8D 1451*      dw 0,-29299,3468
       8C 0D       
04344C 00 00 63 94 1452*      dw 0,-27549,2264
       D8 08       
043452 00 00 63 94 1453*      dw 0,-27549,2264
       D8 08       
043458 80 FB 63 94 1454*      dw -1152,-27549,1961
       A9 07       
04345E 1A F9 8D 8D 1455*      dw -1766,-29299,3002
       BA 0B       
043464 80 FB 63 94 1456*      dw -1152,-27549,1961
       A9 07       
04346A 00 00 63 94 1457*      dw 0,-27549,2264
       D8 08       
043470 00 00 3C 9B 1458*      dw 0,-25796,1911
       77 07       
043476 00 00 3C 9B 1459*      dw 0,-25796,1911
       77 07       
04347C 35 FC 3C 9B 1460*      dw -971,-25796,1653
       75 06       
043482 80 FB 63 94 1461*      dw -1152,-27549,1961
       A9 07       
043488 00 00 70 8A 1462*      dw 0,-30096,0
       00 00       
04348E 00 00 70 8A 1463*      dw 0,-30096,0
       00 00       
043494 E6 06 8D 8D 1464*      dw 1766,-29299,3002
       BA 0B       
04349A E6 06 8D 8D 1465*      dw 1766,-29299,3002
       BA 0B       
0434A0 00 00 8D 8D 1466*      dw 0,-29299,3468
       8C 0D       
0434A6 00 00 70 8A 1467*      dw 0,-30096,0
       00 00       
0434AC 00 00 8D 8D 1468*      dw 0,-29299,3468
       8C 0D       
0434B2 E6 06 8D 8D 1469*      dw 1766,-29299,3002
       BA 0B       
0434B8 80 04 63 94 1470*      dw 1152,-27549,1961
       A9 07       
0434BE 80 04 63 94 1471*      dw 1152,-27549,1961
       A9 07       
0434C4 00 00 63 94 1472*      dw 0,-27549,2264
       D8 08       
0434CA 00 00 8D 8D 1473*      dw 0,-29299,3468
       8C 0D       
0434D0 00 00 63 94 1474*      dw 0,-27549,2264
       D8 08       
0434D6 80 04 63 94 1475*      dw 1152,-27549,1961
       A9 07       
0434DC CB 03 3C 9B 1476*      dw 971,-25796,1653
       75 06       
0434E2 CB 03 3C 9B 1477*      dw 971,-25796,1653
       75 06       
0434E8 00 00 3C 9B 1478*      dw 0,-25796,1911
       77 07       
0434EE 00 00 63 94 1479*      dw 0,-27549,2264
       D8 08       
0434F4 00 00 70 8A 1480*      dw 0,-30096,0
       00 00       
0434FA 00 00 70 8A 1481*      dw 0,-30096,0
       00 00       
043500 BA 0B 8D 8D 1482*      dw 3002,-29299,1766
       E6 06       
043506 BA 0B 8D 8D 1483*      dw 3002,-29299,1766
       E6 06       
04350C E6 06 8D 8D 1484*      dw 1766,-29299,3002
       BA 0B       
043512 00 00 70 8A 1485*      dw 0,-30096,0
       00 00       
043518 E6 06 8D 8D 1486*      dw 1766,-29299,3002
       BA 0B       
04351E BA 0B 8D 8D 1487*      dw 3002,-29299,1766
       E6 06       
043524 A9 07 63 94 1488*      dw 1961,-27549,1152
       80 04       
04352A A9 07 63 94 1489*      dw 1961,-27549,1152
       80 04       
043530 80 04 63 94 1490*      dw 1152,-27549,1961
       A9 07       
043536 E6 06 8D 8D 1491*      dw 1766,-29299,3002
       BA 0B       
04353C 80 04 63 94 1492*      dw 1152,-27549,1961
       A9 07       
043542 A9 07 63 94 1493*      dw 1961,-27549,1152
       80 04       
043548 75 06 3C 9B 1494*      dw 1653,-25796,971
       CB 03       
04354E 75 06 3C 9B 1495*      dw 1653,-25796,971
       CB 03       
043554 CB 03 3C 9B 1496*      dw 971,-25796,1653
       75 06       
04355A 80 04 63 94 1497*      dw 1152,-27549,1961
       A9 07       
043560 00 00 70 8A 1498*      dw 0,-30096,0
       00 00       
043566 00 00 70 8A 1499*      dw 0,-30096,0
       00 00       
04356C 8C 0D 8D 8D 1500*      dw 3468,-29299,0
       00 00       
043572 8C 0D 8D 8D 1501*      dw 3468,-29299,0
       00 00       
043578 BA 0B 8D 8D 1502*      dw 3002,-29299,1766
       E6 06       
04357E 00 00 70 8A 1503*      dw 0,-30096,0
       00 00       
043584 BA 0B 8D 8D 1504*      dw 3002,-29299,1766
       E6 06       
04358A 8C 0D 8D 8D 1505*      dw 3468,-29299,0
       00 00       
043590 D8 08 63 94 1506*      dw 2264,-27549,0
       00 00       
043596 D8 08 63 94 1507*      dw 2264,-27549,0
       00 00       
04359C A9 07 63 94 1508*      dw 1961,-27549,1152
       80 04       
0435A2 BA 0B 8D 8D 1509*      dw 3002,-29299,1766
       E6 06       
0435A8 A9 07 63 94 1510*      dw 1961,-27549,1152
       80 04       
0435AE D8 08 63 94 1511*      dw 2264,-27549,0
       00 00       
0435B4 77 07 3C 9B 1512*      dw 1911,-25796,0
       00 00       
0435BA 77 07 3C 9B 1513*      dw 1911,-25796,0
       00 00       
0435C0 75 06 3C 9B 1514*      dw 1653,-25796,971
       CB 03       
0435C6 A9 07 63 94 1515*      dw 1961,-27549,1152
       80 04       
0435CC 77 07 3C 9B 1516*      dw 1911,-25796,0
       00 00       
0435D2 75 06 3C 9B 1517*      dw 1653,-25796,-971
       35 FC       
0435D8 89 12 62 9F 1518*      dw 4745,-24734,-2788
       1C F5       
0435DE 89 12 62 9F 1519*      dw 4745,-24734,-2788
       1C F5       
0435E4 6C 15 62 9F 1520*      dw 5484,-24734,0
       00 00       
0435EA 77 07 3C 9B 1521*      dw 1911,-25796,0
       00 00       
0435F0 6C 15 62 9F 1522*      dw 5484,-24734,0
       00 00       
0435F6 89 12 62 9F 1523*      dw 4745,-24734,-2788
       1C F5       
0435FC 33 22 48 A2 1524*      dw 8755,-23992,-5142
       EA EB       
043602 33 22 48 A2 1525*      dw 8755,-23992,-5142
       EA EB       
043608 88 27 48 A2 1526*      dw 10120,-23992,0
       00 00       
04360E 6C 15 62 9F 1527*      dw 5484,-24734,0
       00 00       
043614 88 27 48 A2 1528*      dw 10120,-23992,0
       00 00       
04361A 33 22 48 A2 1529*      dw 8755,-23992,-5142
       EA EB       
043620 FB 29 6E A6 1530*      dw 10747,-22930,-6311
       59 E7       
043626 FB 29 6E A6 1531*      dw 10747,-22930,-6311
       59 E7       
04362C 84 30 6E A6 1532*      dw 12420,-22930,0
       00 00       
043632 88 27 48 A2 1533*      dw 10120,-23992,0
       00 00       
043638 75 06 3C 9B 1534*      dw 1653,-25796,-971
       35 FC       
04363E CB 03 3C 9B 1535*      dw 971,-25796,-1653
       8B F9       
043644 E4 0A 62 9F 1536*      dw 2788,-24734,-4745
       77 ED       
04364A E4 0A 62 9F 1537*      dw 2788,-24734,-4745
       77 ED       
043650 89 12 62 9F 1538*      dw 4745,-24734,-2788
       1C F5       
043656 75 06 3C 9B 1539*      dw 1653,-25796,-971
       35 FC       
04365C 89 12 62 9F 1540*      dw 4745,-24734,-2788
       1C F5       
043662 E4 0A 62 9F 1541*      dw 2788,-24734,-4745
       77 ED       
043668 16 14 48 A2 1542*      dw 5142,-23992,-8755
       CD DD       
04366E 16 14 48 A2 1543*      dw 5142,-23992,-8755
       CD DD       
043674 33 22 48 A2 1544*      dw 8755,-23992,-5142
       EA EB       
04367A 89 12 62 9F 1545*      dw 4745,-24734,-2788
       1C F5       
043680 33 22 48 A2 1546*      dw 8755,-23992,-5142
       EA EB       
043686 16 14 48 A2 1547*      dw 5142,-23992,-8755
       CD DD       
04368C A7 18 6E A6 1548*      dw 6311,-22930,-10747
       05 D6       
043692 A7 18 6E A6 1549*      dw 6311,-22930,-10747
       05 D6       
043698 FB 29 6E A6 1550*      dw 10747,-22930,-6311
       59 E7       
04369E 33 22 48 A2 1551*      dw 8755,-23992,-5142
       EA EB       
0436A4 CB 03 3C 9B 1552*      dw 971,-25796,-1653
       8B F9       
0436AA 00 00 3C 9B 1553*      dw 0,-25796,-1911
       89 F8       
0436B0 00 00 62 9F 1554*      dw 0,-24734,-5484
       94 EA       
0436B6 00 00 62 9F 1555*      dw 0,-24734,-5484
       94 EA       
0436BC E4 0A 62 9F 1556*      dw 2788,-24734,-4745
       77 ED       
0436C2 CB 03 3C 9B 1557*      dw 971,-25796,-1653
       8B F9       
0436C8 E4 0A 62 9F 1558*      dw 2788,-24734,-4745
       77 ED       
0436CE 00 00 62 9F 1559*      dw 0,-24734,-5484
       94 EA       
0436D4 00 00 48 A2 1560*      dw 0,-23992,-10120
       78 D8       
0436DA 00 00 48 A2 1561*      dw 0,-23992,-10120
       78 D8       
0436E0 16 14 48 A2 1562*      dw 5142,-23992,-8755
       CD DD       
0436E6 E4 0A 62 9F 1563*      dw 2788,-24734,-4745
       77 ED       
0436EC 16 14 48 A2 1564*      dw 5142,-23992,-8755
       CD DD       
0436F2 00 00 48 A2 1565*      dw 0,-23992,-10120
       78 D8       
0436F8 00 00 6E A6 1566*      dw 0,-22930,-12420
       7C CF       
0436FE 00 00 6E A6 1567*      dw 0,-22930,-12420
       7C CF       
043704 A7 18 6E A6 1568*      dw 6311,-22930,-10747
       05 D6       
04370A 16 14 48 A2 1569*      dw 5142,-23992,-8755
       CD DD       
043710 00 00 3C 9B 1570*      dw 0,-25796,-1911
       89 F8       
043716 35 FC 3C 9B 1571*      dw -971,-25796,-1653
       8B F9       
04371C 1C F5 62 9F 1572*      dw -2788,-24734,-4745
       77 ED       
043722 1C F5 62 9F 1573*      dw -2788,-24734,-4745
       77 ED       
043728 00 00 62 9F 1574*      dw 0,-24734,-5484
       94 EA       
04372E 00 00 3C 9B 1575*      dw 0,-25796,-1911
       89 F8       
043734 00 00 62 9F 1576*      dw 0,-24734,-5484
       94 EA       
04373A 1C F5 62 9F 1577*      dw -2788,-24734,-4745
       77 ED       
043740 EA EB 48 A2 1578*      dw -5142,-23992,-8755
       CD DD       
043746 EA EB 48 A2 1579*      dw -5142,-23992,-8755
       CD DD       
04374C 00 00 48 A2 1580*      dw 0,-23992,-10120
       78 D8       
043752 00 00 62 9F 1581*      dw 0,-24734,-5484
       94 EA       
043758 00 00 48 A2 1582*      dw 0,-23992,-10120
       78 D8       
04375E EA EB 48 A2 1583*      dw -5142,-23992,-8755
       CD DD       
043764 59 E7 6E A6 1584*      dw -6311,-22930,-10747
       05 D6       
04376A 59 E7 6E A6 1585*      dw -6311,-22930,-10747
       05 D6       
043770 00 00 6E A6 1586*      dw 0,-22930,-12420
       7C CF       
043776 00 00 48 A2 1587*      dw 0,-23992,-10120
       78 D8       
04377C 35 FC 3C 9B 1588*      dw -971,-25796,-1653
       8B F9       
043782 8B F9 3C 9B 1589*      dw -1653,-25796,-971
       35 FC       
043788 77 ED 62 9F 1590*      dw -4745,-24734,-2788
       1C F5       
04378E 77 ED 62 9F 1591*      dw -4745,-24734,-2788
       1C F5       
043794 1C F5 62 9F 1592*      dw -2788,-24734,-4745
       77 ED       
04379A 35 FC 3C 9B 1593*      dw -971,-25796,-1653
       8B F9       
0437A0 1C F5 62 9F 1594*      dw -2788,-24734,-4745
       77 ED       
0437A6 77 ED 62 9F 1595*      dw -4745,-24734,-2788
       1C F5       
0437AC CD DD 48 A2 1596*      dw -8755,-23992,-5142
       EA EB       
0437B2 CD DD 48 A2 1597*      dw -8755,-23992,-5142
       EA EB       
0437B8 EA EB 48 A2 1598*      dw -5142,-23992,-8755
       CD DD       
0437BE 1C F5 62 9F 1599*      dw -2788,-24734,-4745
       77 ED       
0437C4 EA EB 48 A2 1600*      dw -5142,-23992,-8755
       CD DD       
0437CA CD DD 48 A2 1601*      dw -8755,-23992,-5142
       EA EB       
0437D0 05 D6 6E A6 1602*      dw -10747,-22930,-6311
       59 E7       
0437D6 05 D6 6E A6 1603*      dw -10747,-22930,-6311
       59 E7       
0437DC 59 E7 6E A6 1604*      dw -6311,-22930,-10747
       05 D6       
0437E2 EA EB 48 A2 1605*      dw -5142,-23992,-8755
       CD DD       
0437E8 8B F9 3C 9B 1606*      dw -1653,-25796,-971
       35 FC       
0437EE 89 F8 3C 9B 1607*      dw -1911,-25796,0
       00 00       
0437F4 94 EA 62 9F 1608*      dw -5484,-24734,0
       00 00       
0437FA 94 EA 62 9F 1609*      dw -5484,-24734,0
       00 00       
043800 77 ED 62 9F 1610*      dw -4745,-24734,-2788
       1C F5       
043806 8B F9 3C 9B 1611*      dw -1653,-25796,-971
       35 FC       
04380C 77 ED 62 9F 1612*      dw -4745,-24734,-2788
       1C F5       
043812 94 EA 62 9F 1613*      dw -5484,-24734,0
       00 00       
043818 78 D8 48 A2 1614*      dw -10120,-23992,0
       00 00       
04381E 78 D8 48 A2 1615*      dw -10120,-23992,0
       00 00       
043824 CD DD 48 A2 1616*      dw -8755,-23992,-5142
       EA EB       
04382A 77 ED 62 9F 1617*      dw -4745,-24734,-2788
       1C F5       
043830 CD DD 48 A2 1618*      dw -8755,-23992,-5142
       EA EB       
043836 78 D8 48 A2 1619*      dw -10120,-23992,0
       00 00       
04383C 7C CF 6E A6 1620*      dw -12420,-22930,0
       00 00       
043842 7C CF 6E A6 1621*      dw -12420,-22930,0
       00 00       
043848 05 D6 6E A6 1622*      dw -10747,-22930,-6311
       59 E7       
04384E CD DD 48 A2 1623*      dw -8755,-23992,-5142
       EA EB       
043854 89 F8 3C 9B 1624*      dw -1911,-25796,0
       00 00       
04385A 8B F9 3C 9B 1625*      dw -1653,-25796,971
       CB 03       
043860 77 ED 62 9F 1626*      dw -4745,-24734,2788
       E4 0A       
043866 77 ED 62 9F 1627*      dw -4745,-24734,2788
       E4 0A       
04386C 94 EA 62 9F 1628*      dw -5484,-24734,0
       00 00       
043872 89 F8 3C 9B 1629*      dw -1911,-25796,0
       00 00       
043878 94 EA 62 9F 1630*      dw -5484,-24734,0
       00 00       
04387E 77 ED 62 9F 1631*      dw -4745,-24734,2788
       E4 0A       
043884 CD DD 48 A2 1632*      dw -8755,-23992,5142
       16 14       
04388A CD DD 48 A2 1633*      dw -8755,-23992,5142
       16 14       
043890 78 D8 48 A2 1634*      dw -10120,-23992,0
       00 00       
043896 94 EA 62 9F 1635*      dw -5484,-24734,0
       00 00       
04389C 78 D8 48 A2 1636*      dw -10120,-23992,0
       00 00       
0438A2 CD DD 48 A2 1637*      dw -8755,-23992,5142
       16 14       
0438A8 05 D6 6E A6 1638*      dw -10747,-22930,6311
       A7 18       
0438AE 05 D6 6E A6 1639*      dw -10747,-22930,6311
       A7 18       
0438B4 7C CF 6E A6 1640*      dw -12420,-22930,0
       00 00       
0438BA 78 D8 48 A2 1641*      dw -10120,-23992,0
       00 00       
0438C0 8B F9 3C 9B 1642*      dw -1653,-25796,971
       CB 03       
0438C6 35 FC 3C 9B 1643*      dw -971,-25796,1653
       75 06       
0438CC 1C F5 62 9F 1644*      dw -2788,-24734,4745
       89 12       
0438D2 1C F5 62 9F 1645*      dw -2788,-24734,4745
       89 12       
0438D8 77 ED 62 9F 1646*      dw -4745,-24734,2788
       E4 0A       
0438DE 8B F9 3C 9B 1647*      dw -1653,-25796,971
       CB 03       
0438E4 77 ED 62 9F 1648*      dw -4745,-24734,2788
       E4 0A       
0438EA 1C F5 62 9F 1649*      dw -2788,-24734,4745
       89 12       
0438F0 EA EB 48 A2 1650*      dw -5142,-23992,8755
       33 22       
0438F6 EA EB 48 A2 1651*      dw -5142,-23992,8755
       33 22       
0438FC CD DD 48 A2 1652*      dw -8755,-23992,5142
       16 14       
043902 77 ED 62 9F 1653*      dw -4745,-24734,2788
       E4 0A       
043908 CD DD 48 A2 1654*      dw -8755,-23992,5142
       16 14       
04390E EA EB 48 A2 1655*      dw -5142,-23992,8755
       33 22       
043914 59 E7 6E A6 1656*      dw -6311,-22930,10747
       FB 29       
04391A 59 E7 6E A6 1657*      dw -6311,-22930,10747
       FB 29       
043920 05 D6 6E A6 1658*      dw -10747,-22930,6311
       A7 18       
043926 CD DD 48 A2 1659*      dw -8755,-23992,5142
       16 14       
04392C 35 FC 3C 9B 1660*      dw -971,-25796,1653
       75 06       
043932 00 00 3C 9B 1661*      dw 0,-25796,1911
       77 07       
043938 00 00 62 9F 1662*      dw 0,-24734,5484
       6C 15       
04393E 00 00 62 9F 1663*      dw 0,-24734,5484
       6C 15       
043944 1C F5 62 9F 1664*      dw -2788,-24734,4745
       89 12       
04394A 35 FC 3C 9B 1665*      dw -971,-25796,1653
       75 06       
043950 1C F5 62 9F 1666*      dw -2788,-24734,4745
       89 12       
043956 00 00 62 9F 1667*      dw 0,-24734,5484
       6C 15       
04395C 00 00 48 A2 1668*      dw 0,-23992,10120
       88 27       
043962 00 00 48 A2 1669*      dw 0,-23992,10120
       88 27       
043968 EA EB 48 A2 1670*      dw -5142,-23992,8755
       33 22       
04396E 1C F5 62 9F 1671*      dw -2788,-24734,4745
       89 12       
043974 EA EB 48 A2 1672*      dw -5142,-23992,8755
       33 22       
04397A 00 00 48 A2 1673*      dw 0,-23992,10120
       88 27       
043980 00 00 6E A6 1674*      dw 0,-22930,12420
       84 30       
043986 00 00 6E A6 1675*      dw 0,-22930,12420
       84 30       
04398C 59 E7 6E A6 1676*      dw -6311,-22930,10747
       FB 29       
043992 EA EB 48 A2 1677*      dw -5142,-23992,8755
       33 22       
043998 00 00 3C 9B 1678*      dw 0,-25796,1911
       77 07       
04399E CB 03 3C 9B 1679*      dw 971,-25796,1653
       75 06       
0439A4 E4 0A 62 9F 1680*      dw 2788,-24734,4745
       89 12       
0439AA E4 0A 62 9F 1681*      dw 2788,-24734,4745
       89 12       
0439B0 00 00 62 9F 1682*      dw 0,-24734,5484
       6C 15       
0439B6 00 00 3C 9B 1683*      dw 0,-25796,1911
       77 07       
0439BC 00 00 62 9F 1684*      dw 0,-24734,5484
       6C 15       
0439C2 E4 0A 62 9F 1685*      dw 2788,-24734,4745
       89 12       
0439C8 16 14 48 A2 1686*      dw 5142,-23992,8755
       33 22       
0439CE 16 14 48 A2 1687*      dw 5142,-23992,8755
       33 22       
0439D4 00 00 48 A2 1688*      dw 0,-23992,10120
       88 27       
0439DA 00 00 62 9F 1689*      dw 0,-24734,5484
       6C 15       
0439E0 00 00 48 A2 1690*      dw 0,-23992,10120
       88 27       
0439E6 16 14 48 A2 1691*      dw 5142,-23992,8755
       33 22       
0439EC A7 18 6E A6 1692*      dw 6311,-22930,10747
       FB 29       
0439F2 A7 18 6E A6 1693*      dw 6311,-22930,10747
       FB 29       
0439F8 00 00 6E A6 1694*      dw 0,-22930,12420
       84 30       
0439FE 00 00 48 A2 1695*      dw 0,-23992,10120
       88 27       
043A04 CB 03 3C 9B 1696*      dw 971,-25796,1653
       75 06       
043A0A 75 06 3C 9B 1697*      dw 1653,-25796,971
       CB 03       
043A10 89 12 62 9F 1698*      dw 4745,-24734,2788
       E4 0A       
043A16 89 12 62 9F 1699*      dw 4745,-24734,2788
       E4 0A       
043A1C E4 0A 62 9F 1700*      dw 2788,-24734,4745
       89 12       
043A22 CB 03 3C 9B 1701*      dw 971,-25796,1653
       75 06       
043A28 E4 0A 62 9F 1702*      dw 2788,-24734,4745
       89 12       
043A2E 89 12 62 9F 1703*      dw 4745,-24734,2788
       E4 0A       
043A34 33 22 48 A2 1704*      dw 8755,-23992,5142
       16 14       
043A3A 33 22 48 A2 1705*      dw 8755,-23992,5142
       16 14       
043A40 16 14 48 A2 1706*      dw 5142,-23992,8755
       33 22       
043A46 E4 0A 62 9F 1707*      dw 2788,-24734,4745
       89 12       
043A4C 16 14 48 A2 1708*      dw 5142,-23992,8755
       33 22       
043A52 33 22 48 A2 1709*      dw 8755,-23992,5142
       16 14       
043A58 FB 29 6E A6 1710*      dw 10747,-22930,6311
       A7 18       
043A5E FB 29 6E A6 1711*      dw 10747,-22930,6311
       A7 18       
043A64 A7 18 6E A6 1712*      dw 6311,-22930,10747
       FB 29       
043A6A 16 14 48 A2 1713*      dw 5142,-23992,8755
       33 22       
043A70 75 06 3C 9B 1714*      dw 1653,-25796,971
       CB 03       
043A76 77 07 3C 9B 1715*      dw 1911,-25796,0
       00 00       
043A7C 6C 15 62 9F 1716*      dw 5484,-24734,0
       00 00       
043A82 6C 15 62 9F 1717*      dw 5484,-24734,0
       00 00       
043A88 89 12 62 9F 1718*      dw 4745,-24734,2788
       E4 0A       
043A8E 75 06 3C 9B 1719*      dw 1653,-25796,971
       CB 03       
043A94 89 12 62 9F 1720*      dw 4745,-24734,2788
       E4 0A       
043A9A 6C 15 62 9F 1721*      dw 5484,-24734,0
       00 00       
043AA0 88 27 48 A2 1722*      dw 10120,-23992,0
       00 00       
043AA6 88 27 48 A2 1723*      dw 10120,-23992,0
       00 00       
043AAC 33 22 48 A2 1724*      dw 8755,-23992,5142
       16 14       
043AB2 89 12 62 9F 1725*      dw 4745,-24734,2788
       E4 0A       
043AB8 33 22 48 A2 1726*      dw 8755,-23992,5142
       16 14       
043ABE 88 27 48 A2 1727*      dw 10120,-23992,0
       00 00       
043AC4 84 30 6E A6 1728*      dw 12420,-22930,0
       00 00       
043ACA 84 30 6E A6 1729*      dw 12420,-22930,0
       00 00       
043AD0 FB 29 6E A6 1730*      dw 10747,-22930,6311
       A7 18       
043AD6 33 22 48 A2 1731*      dw 8755,-23992,5142
       16 14       
043ADC             1732*  
043ADC             1733*  teapot_vertex_indices:
043ADC 00 00       1734*      dw 0
043ADE 01 00       1735*      dw 1
043AE0 02 00       1736*      dw 2
043AE2 03 00       1737*      dw 3
043AE4 04 00       1738*      dw 4
043AE6 05 00       1739*      dw 5
043AE8 06 00       1740*      dw 6
043AEA 07 00       1741*      dw 7
043AEC 08 00       1742*      dw 8
043AEE 09 00       1743*      dw 9
043AF0 0A 00       1744*      dw 10
043AF2 0B 00       1745*      dw 11
043AF4 0C 00       1746*      dw 12
043AF6 0D 00       1747*      dw 13
043AF8 0E 00       1748*      dw 14
043AFA 0F 00       1749*      dw 15
043AFC 10 00       1750*      dw 16
043AFE 11 00       1751*      dw 17
043B00 12 00       1752*      dw 18
043B02 13 00       1753*      dw 19
043B04 14 00       1754*      dw 20
043B06 15 00       1755*      dw 21
043B08 16 00       1756*      dw 22
043B0A 17 00       1757*      dw 23
043B0C 18 00       1758*      dw 24
043B0E 19 00       1759*      dw 25
043B10 1A 00       1760*      dw 26
043B12 1B 00       1761*      dw 27
043B14 1C 00       1762*      dw 28
043B16 1D 00       1763*      dw 29
043B18 1E 00       1764*      dw 30
043B1A 1F 00       1765*      dw 31
043B1C 20 00       1766*      dw 32
043B1E 21 00       1767*      dw 33
043B20 22 00       1768*      dw 34
043B22 23 00       1769*      dw 35
043B24 24 00       1770*      dw 36
043B26 25 00       1771*      dw 37
043B28 26 00       1772*      dw 38
043B2A 27 00       1773*      dw 39
043B2C 28 00       1774*      dw 40
043B2E 29 00       1775*      dw 41
043B30 2A 00       1776*      dw 42
043B32 2B 00       1777*      dw 43
043B34 2C 00       1778*      dw 44
043B36 2D 00       1779*      dw 45
043B38 2E 00       1780*      dw 46
043B3A 2F 00       1781*      dw 47
043B3C 30 00       1782*      dw 48
043B3E 31 00       1783*      dw 49
043B40 32 00       1784*      dw 50
043B42 33 00       1785*      dw 51
043B44 34 00       1786*      dw 52
043B46 35 00       1787*      dw 53
043B48 36 00       1788*      dw 54
043B4A 37 00       1789*      dw 55
043B4C 38 00       1790*      dw 56
043B4E 39 00       1791*      dw 57
043B50 3A 00       1792*      dw 58
043B52 3B 00       1793*      dw 59
043B54 3C 00       1794*      dw 60
043B56 3D 00       1795*      dw 61
043B58 3E 00       1796*      dw 62
043B5A 3F 00       1797*      dw 63
043B5C 40 00       1798*      dw 64
043B5E 41 00       1799*      dw 65
043B60 42 00       1800*      dw 66
043B62 43 00       1801*      dw 67
043B64 44 00       1802*      dw 68
043B66 45 00       1803*      dw 69
043B68 46 00       1804*      dw 70
043B6A 47 00       1805*      dw 71
043B6C 48 00       1806*      dw 72
043B6E 49 00       1807*      dw 73
043B70 4A 00       1808*      dw 74
043B72 4B 00       1809*      dw 75
043B74 4C 00       1810*      dw 76
043B76 4D 00       1811*      dw 77
043B78 4E 00       1812*      dw 78
043B7A 4F 00       1813*      dw 79
043B7C 50 00       1814*      dw 80
043B7E 51 00       1815*      dw 81
043B80 52 00       1816*      dw 82
043B82 53 00       1817*      dw 83
043B84 54 00       1818*      dw 84
043B86 55 00       1819*      dw 85
043B88 56 00       1820*      dw 86
043B8A 57 00       1821*      dw 87
043B8C 58 00       1822*      dw 88
043B8E 59 00       1823*      dw 89
043B90 5A 00       1824*      dw 90
043B92 5B 00       1825*      dw 91
043B94 5C 00       1826*      dw 92
043B96 5D 00       1827*      dw 93
043B98 5E 00       1828*      dw 94
043B9A 5F 00       1829*      dw 95
043B9C 60 00       1830*      dw 96
043B9E 61 00       1831*      dw 97
043BA0 62 00       1832*      dw 98
043BA2 63 00       1833*      dw 99
043BA4 64 00       1834*      dw 100
043BA6 65 00       1835*      dw 101
043BA8 66 00       1836*      dw 102
043BAA 67 00       1837*      dw 103
043BAC 68 00       1838*      dw 104
043BAE 69 00       1839*      dw 105
043BB0 6A 00       1840*      dw 106
043BB2 6B 00       1841*      dw 107
043BB4 6C 00       1842*      dw 108
043BB6 6D 00       1843*      dw 109
043BB8 6E 00       1844*      dw 110
043BBA 6F 00       1845*      dw 111
043BBC 70 00       1846*      dw 112
043BBE 71 00       1847*      dw 113
043BC0 72 00       1848*      dw 114
043BC2 73 00       1849*      dw 115
043BC4 74 00       1850*      dw 116
043BC6 75 00       1851*      dw 117
043BC8 76 00       1852*      dw 118
043BCA 77 00       1853*      dw 119
043BCC 78 00       1854*      dw 120
043BCE 79 00       1855*      dw 121
043BD0 7A 00       1856*      dw 122
043BD2 7B 00       1857*      dw 123
043BD4 7C 00       1858*      dw 124
043BD6 7D 00       1859*      dw 125
043BD8 7E 00       1860*      dw 126
043BDA 7F 00       1861*      dw 127
043BDC 80 00       1862*      dw 128
043BDE 81 00       1863*      dw 129
043BE0 82 00       1864*      dw 130
043BE2 83 00       1865*      dw 131
043BE4 84 00       1866*      dw 132
043BE6 85 00       1867*      dw 133
043BE8 86 00       1868*      dw 134
043BEA 87 00       1869*      dw 135
043BEC 88 00       1870*      dw 136
043BEE 89 00       1871*      dw 137
043BF0 8A 00       1872*      dw 138
043BF2 8B 00       1873*      dw 139
043BF4 8C 00       1874*      dw 140
043BF6 8D 00       1875*      dw 141
043BF8 8E 00       1876*      dw 142
043BFA 8F 00       1877*      dw 143
043BFC 90 00       1878*      dw 144
043BFE 91 00       1879*      dw 145
043C00 92 00       1880*      dw 146
043C02 93 00       1881*      dw 147
043C04 94 00       1882*      dw 148
043C06 95 00       1883*      dw 149
043C08 96 00       1884*      dw 150
043C0A 97 00       1885*      dw 151
043C0C 98 00       1886*      dw 152
043C0E 99 00       1887*      dw 153
043C10 9A 00       1888*      dw 154
043C12 9B 00       1889*      dw 155
043C14 9C 00       1890*      dw 156
043C16 9D 00       1891*      dw 157
043C18 9E 00       1892*      dw 158
043C1A 9F 00       1893*      dw 159
043C1C A0 00       1894*      dw 160
043C1E A1 00       1895*      dw 161
043C20 A2 00       1896*      dw 162
043C22 A3 00       1897*      dw 163
043C24 A4 00       1898*      dw 164
043C26 A5 00       1899*      dw 165
043C28 A6 00       1900*      dw 166
043C2A A7 00       1901*      dw 167
043C2C A8 00       1902*      dw 168
043C2E A9 00       1903*      dw 169
043C30 AA 00       1904*      dw 170
043C32 AB 00       1905*      dw 171
043C34 AC 00       1906*      dw 172
043C36 AD 00       1907*      dw 173
043C38 AE 00       1908*      dw 174
043C3A AF 00       1909*      dw 175
043C3C B0 00       1910*      dw 176
043C3E B1 00       1911*      dw 177
043C40 B2 00       1912*      dw 178
043C42 B3 00       1913*      dw 179
043C44 B4 00       1914*      dw 180
043C46 B5 00       1915*      dw 181
043C48 B6 00       1916*      dw 182
043C4A B7 00       1917*      dw 183
043C4C B8 00       1918*      dw 184
043C4E B9 00       1919*      dw 185
043C50 BA 00       1920*      dw 186
043C52 BB 00       1921*      dw 187
043C54 BC 00       1922*      dw 188
043C56 BD 00       1923*      dw 189
043C58 BE 00       1924*      dw 190
043C5A BF 00       1925*      dw 191
043C5C C0 00       1926*      dw 192
043C5E C1 00       1927*      dw 193
043C60 C2 00       1928*      dw 194
043C62 C3 00       1929*      dw 195
043C64 C4 00       1930*      dw 196
043C66 C5 00       1931*      dw 197
043C68 C6 00       1932*      dw 198
043C6A C7 00       1933*      dw 199
043C6C C8 00       1934*      dw 200
043C6E C9 00       1935*      dw 201
043C70 CA 00       1936*      dw 202
043C72 CB 00       1937*      dw 203
043C74 CC 00       1938*      dw 204
043C76 CD 00       1939*      dw 205
043C78 CE 00       1940*      dw 206
043C7A CF 00       1941*      dw 207
043C7C D0 00       1942*      dw 208
043C7E D1 00       1943*      dw 209
043C80 D2 00       1944*      dw 210
043C82 D3 00       1945*      dw 211
043C84 D4 00       1946*      dw 212
043C86 D5 00       1947*      dw 213
043C88 D6 00       1948*      dw 214
043C8A D7 00       1949*      dw 215
043C8C D8 00       1950*      dw 216
043C8E D9 00       1951*      dw 217
043C90 DA 00       1952*      dw 218
043C92 DB 00       1953*      dw 219
043C94 DC 00       1954*      dw 220
043C96 DD 00       1955*      dw 221
043C98 DE 00       1956*      dw 222
043C9A DF 00       1957*      dw 223
043C9C E0 00       1958*      dw 224
043C9E E1 00       1959*      dw 225
043CA0 E2 00       1960*      dw 226
043CA2 E3 00       1961*      dw 227
043CA4 E4 00       1962*      dw 228
043CA6 E5 00       1963*      dw 229
043CA8 E6 00       1964*      dw 230
043CAA E7 00       1965*      dw 231
043CAC E8 00       1966*      dw 232
043CAE E9 00       1967*      dw 233
043CB0 EA 00       1968*      dw 234
043CB2 EB 00       1969*      dw 235
043CB4 EC 00       1970*      dw 236
043CB6 ED 00       1971*      dw 237
043CB8 EE 00       1972*      dw 238
043CBA EF 00       1973*      dw 239
043CBC F0 00       1974*      dw 240
043CBE F1 00       1975*      dw 241
043CC0 F2 00       1976*      dw 242
043CC2 F3 00       1977*      dw 243
043CC4 F4 00       1978*      dw 244
043CC6 F5 00       1979*      dw 245
043CC8 F6 00       1980*      dw 246
043CCA F7 00       1981*      dw 247
043CCC F8 00       1982*      dw 248
043CCE F9 00       1983*      dw 249
043CD0 FA 00       1984*      dw 250
043CD2 FB 00       1985*      dw 251
043CD4 FC 00       1986*      dw 252
043CD6 FD 00       1987*      dw 253
043CD8 FE 00       1988*      dw 254
043CDA FF 00       1989*      dw 255
043CDC 00 01       1990*      dw 256
043CDE 01 01       1991*      dw 257
043CE0 02 01       1992*      dw 258
043CE2 03 01       1993*      dw 259
043CE4 04 01       1994*      dw 260
043CE6 05 01       1995*      dw 261
043CE8 06 01       1996*      dw 262
043CEA 07 01       1997*      dw 263
043CEC 08 01       1998*      dw 264
043CEE 09 01       1999*      dw 265
043CF0 0A 01       2000*      dw 266
043CF2 0B 01       2001*      dw 267
043CF4 0C 01       2002*      dw 268
043CF6 0D 01       2003*      dw 269
043CF8 0E 01       2004*      dw 270
043CFA 0F 01       2005*      dw 271
043CFC 10 01       2006*      dw 272
043CFE 11 01       2007*      dw 273
043D00 12 01       2008*      dw 274
043D02 13 01       2009*      dw 275
043D04 14 01       2010*      dw 276
043D06 15 01       2011*      dw 277
043D08 16 01       2012*      dw 278
043D0A 17 01       2013*      dw 279
043D0C 18 01       2014*      dw 280
043D0E 19 01       2015*      dw 281
043D10 1A 01       2016*      dw 282
043D12 1B 01       2017*      dw 283
043D14 1C 01       2018*      dw 284
043D16 1D 01       2019*      dw 285
043D18 1E 01       2020*      dw 286
043D1A 1F 01       2021*      dw 287
043D1C 20 01       2022*      dw 288
043D1E 21 01       2023*      dw 289
043D20 22 01       2024*      dw 290
043D22 23 01       2025*      dw 291
043D24 24 01       2026*      dw 292
043D26 25 01       2027*      dw 293
043D28 26 01       2028*      dw 294
043D2A 27 01       2029*      dw 295
043D2C 28 01       2030*      dw 296
043D2E 29 01       2031*      dw 297
043D30 2A 01       2032*      dw 298
043D32 2B 01       2033*      dw 299
043D34 2C 01       2034*      dw 300
043D36 2D 01       2035*      dw 301
043D38 2E 01       2036*      dw 302
043D3A 2F 01       2037*      dw 303
043D3C 30 01       2038*      dw 304
043D3E 31 01       2039*      dw 305
043D40 32 01       2040*      dw 306
043D42 33 01       2041*      dw 307
043D44 34 01       2042*      dw 308
043D46 35 01       2043*      dw 309
043D48 36 01       2044*      dw 310
043D4A 37 01       2045*      dw 311
043D4C 38 01       2046*      dw 312
043D4E 39 01       2047*      dw 313
043D50 3A 01       2048*      dw 314
043D52 3B 01       2049*      dw 315
043D54 3C 01       2050*      dw 316
043D56 3D 01       2051*      dw 317
043D58 3E 01       2052*      dw 318
043D5A 3F 01       2053*      dw 319
043D5C 40 01       2054*      dw 320
043D5E 41 01       2055*      dw 321
043D60 42 01       2056*      dw 322
043D62 43 01       2057*      dw 323
043D64 44 01       2058*      dw 324
043D66 45 01       2059*      dw 325
043D68 46 01       2060*      dw 326
043D6A 47 01       2061*      dw 327
043D6C 48 01       2062*      dw 328
043D6E 49 01       2063*      dw 329
043D70 4A 01       2064*      dw 330
043D72 4B 01       2065*      dw 331
043D74 4C 01       2066*      dw 332
043D76 4D 01       2067*      dw 333
043D78 4E 01       2068*      dw 334
043D7A 4F 01       2069*      dw 335
043D7C 50 01       2070*      dw 336
043D7E 51 01       2071*      dw 337
043D80 52 01       2072*      dw 338
043D82 53 01       2073*      dw 339
043D84 54 01       2074*      dw 340
043D86 55 01       2075*      dw 341
043D88 56 01       2076*      dw 342
043D8A 57 01       2077*      dw 343
043D8C 58 01       2078*      dw 344
043D8E 59 01       2079*      dw 345
043D90 5A 01       2080*      dw 346
043D92 5B 01       2081*      dw 347
043D94 5C 01       2082*      dw 348
043D96 5D 01       2083*      dw 349
043D98 5E 01       2084*      dw 350
043D9A 5F 01       2085*      dw 351
043D9C 60 01       2086*      dw 352
043D9E 61 01       2087*      dw 353
043DA0 62 01       2088*      dw 354
043DA2 63 01       2089*      dw 355
043DA4 64 01       2090*      dw 356
043DA6 65 01       2091*      dw 357
043DA8 66 01       2092*      dw 358
043DAA 67 01       2093*      dw 359
043DAC 68 01       2094*      dw 360
043DAE 69 01       2095*      dw 361
043DB0 6A 01       2096*      dw 362
043DB2 6B 01       2097*      dw 363
043DB4 6C 01       2098*      dw 364
043DB6 6D 01       2099*      dw 365
043DB8 6E 01       2100*      dw 366
043DBA 6F 01       2101*      dw 367
043DBC 70 01       2102*      dw 368
043DBE 71 01       2103*      dw 369
043DC0 72 01       2104*      dw 370
043DC2 73 01       2105*      dw 371
043DC4 74 01       2106*      dw 372
043DC6 75 01       2107*      dw 373
043DC8 76 01       2108*      dw 374
043DCA 77 01       2109*      dw 375
043DCC 78 01       2110*      dw 376
043DCE 79 01       2111*      dw 377
043DD0 7A 01       2112*      dw 378
043DD2 7B 01       2113*      dw 379
043DD4 7C 01       2114*      dw 380
043DD6 7D 01       2115*      dw 381
043DD8 7E 01       2116*      dw 382
043DDA 7F 01       2117*      dw 383
043DDC 80 01       2118*      dw 384
043DDE 81 01       2119*      dw 385
043DE0 82 01       2120*      dw 386
043DE2 83 01       2121*      dw 387
043DE4 84 01       2122*      dw 388
043DE6 85 01       2123*      dw 389
043DE8 86 01       2124*      dw 390
043DEA 87 01       2125*      dw 391
043DEC 88 01       2126*      dw 392
043DEE 89 01       2127*      dw 393
043DF0 8A 01       2128*      dw 394
043DF2 8B 01       2129*      dw 395
043DF4 8C 01       2130*      dw 396
043DF6 8D 01       2131*      dw 397
043DF8 8E 01       2132*      dw 398
043DFA 8F 01       2133*      dw 399
043DFC 90 01       2134*      dw 400
043DFE 91 01       2135*      dw 401
043E00 92 01       2136*      dw 402
043E02 93 01       2137*      dw 403
043E04 94 01       2138*      dw 404
043E06 95 01       2139*      dw 405
043E08 96 01       2140*      dw 406
043E0A 97 01       2141*      dw 407
043E0C 98 01       2142*      dw 408
043E0E 99 01       2143*      dw 409
043E10 9A 01       2144*      dw 410
043E12 9B 01       2145*      dw 411
043E14 9C 01       2146*      dw 412
043E16 9D 01       2147*      dw 413
043E18 9E 01       2148*      dw 414
043E1A 9F 01       2149*      dw 415
043E1C A0 01       2150*      dw 416
043E1E A1 01       2151*      dw 417
043E20 A2 01       2152*      dw 418
043E22 A3 01       2153*      dw 419
043E24 A4 01       2154*      dw 420
043E26 A5 01       2155*      dw 421
043E28 A6 01       2156*      dw 422
043E2A A7 01       2157*      dw 423
043E2C A8 01       2158*      dw 424
043E2E A9 01       2159*      dw 425
043E30 AA 01       2160*      dw 426
043E32 AB 01       2161*      dw 427
043E34 AC 01       2162*      dw 428
043E36 AD 01       2163*      dw 429
043E38 AE 01       2164*      dw 430
043E3A AF 01       2165*      dw 431
043E3C B0 01       2166*      dw 432
043E3E B1 01       2167*      dw 433
043E40 B2 01       2168*      dw 434
043E42 B3 01       2169*      dw 435
043E44 B4 01       2170*      dw 436
043E46 B5 01       2171*      dw 437
043E48 B6 01       2172*      dw 438
043E4A B7 01       2173*      dw 439
043E4C B8 01       2174*      dw 440
043E4E B9 01       2175*      dw 441
043E50 BA 01       2176*      dw 442
043E52 BB 01       2177*      dw 443
043E54 BC 01       2178*      dw 444
043E56 BD 01       2179*      dw 445
043E58 BE 01       2180*      dw 446
043E5A BF 01       2181*      dw 447
043E5C C0 01       2182*      dw 448
043E5E C1 01       2183*      dw 449
043E60 C2 01       2184*      dw 450
043E62 C3 01       2185*      dw 451
043E64 C4 01       2186*      dw 452
043E66 C5 01       2187*      dw 453
043E68 C6 01       2188*      dw 454
043E6A C7 01       2189*      dw 455
043E6C C8 01       2190*      dw 456
043E6E C9 01       2191*      dw 457
043E70 CA 01       2192*      dw 458
043E72 CB 01       2193*      dw 459
043E74 CC 01       2194*      dw 460
043E76 CD 01       2195*      dw 461
043E78 CE 01       2196*      dw 462
043E7A CF 01       2197*      dw 463
043E7C D0 01       2198*      dw 464
043E7E D1 01       2199*      dw 465
043E80 D2 01       2200*      dw 466
043E82 D3 01       2201*      dw 467
043E84 D4 01       2202*      dw 468
043E86 D5 01       2203*      dw 469
043E88 D6 01       2204*      dw 470
043E8A D7 01       2205*      dw 471
043E8C D8 01       2206*      dw 472
043E8E D9 01       2207*      dw 473
043E90 DA 01       2208*      dw 474
043E92 DB 01       2209*      dw 475
043E94 DC 01       2210*      dw 476
043E96 DD 01       2211*      dw 477
043E98 DE 01       2212*      dw 478
043E9A DF 01       2213*      dw 479
043E9C E0 01       2214*      dw 480
043E9E E1 01       2215*      dw 481
043EA0 E2 01       2216*      dw 482
043EA2 E3 01       2217*      dw 483
043EA4 E4 01       2218*      dw 484
043EA6 E5 01       2219*      dw 485
043EA8 E6 01       2220*      dw 486
043EAA E7 01       2221*      dw 487
043EAC E8 01       2222*      dw 488
043EAE E9 01       2223*      dw 489
043EB0 EA 01       2224*      dw 490
043EB2 EB 01       2225*      dw 491
043EB4 EC 01       2226*      dw 492
043EB6 ED 01       2227*      dw 493
043EB8 EE 01       2228*      dw 494
043EBA EF 01       2229*      dw 495
043EBC F0 01       2230*      dw 496
043EBE F1 01       2231*      dw 497
043EC0 F2 01       2232*      dw 498
043EC2 F3 01       2233*      dw 499
043EC4 F4 01       2234*      dw 500
043EC6 F5 01       2235*      dw 501
043EC8 F6 01       2236*      dw 502
043ECA F7 01       2237*      dw 503
043ECC F8 01       2238*      dw 504
043ECE F9 01       2239*      dw 505
043ED0 FA 01       2240*      dw 506
043ED2 FB 01       2241*      dw 507
043ED4 FC 01       2242*      dw 508
043ED6 FD 01       2243*      dw 509
043ED8 FE 01       2244*      dw 510
043EDA FF 01       2245*      dw 511
043EDC 00 02       2246*      dw 512
043EDE 01 02       2247*      dw 513
043EE0 02 02       2248*      dw 514
043EE2 03 02       2249*      dw 515
043EE4 04 02       2250*      dw 516
043EE6 05 02       2251*      dw 517
043EE8 06 02       2252*      dw 518
043EEA 07 02       2253*      dw 519
043EEC 08 02       2254*      dw 520
043EEE 09 02       2255*      dw 521
043EF0 0A 02       2256*      dw 522
043EF2 0B 02       2257*      dw 523
043EF4 0C 02       2258*      dw 524
043EF6 0D 02       2259*      dw 525
043EF8 0E 02       2260*      dw 526
043EFA 0F 02       2261*      dw 527
043EFC 10 02       2262*      dw 528
043EFE 11 02       2263*      dw 529
043F00 12 02       2264*      dw 530
043F02 13 02       2265*      dw 531
043F04 14 02       2266*      dw 532
043F06 15 02       2267*      dw 533
043F08 16 02       2268*      dw 534
043F0A 17 02       2269*      dw 535
043F0C 18 02       2270*      dw 536
043F0E 19 02       2271*      dw 537
043F10 1A 02       2272*      dw 538
043F12 1B 02       2273*      dw 539
043F14 1C 02       2274*      dw 540
043F16 1D 02       2275*      dw 541
043F18 1E 02       2276*      dw 542
043F1A 1F 02       2277*      dw 543
043F1C 20 02       2278*      dw 544
043F1E 21 02       2279*      dw 545
043F20 22 02       2280*      dw 546
043F22 23 02       2281*      dw 547
043F24 24 02       2282*      dw 548
043F26 25 02       2283*      dw 549
043F28 26 02       2284*      dw 550
043F2A 27 02       2285*      dw 551
043F2C 28 02       2286*      dw 552
043F2E 29 02       2287*      dw 553
043F30 2A 02       2288*      dw 554
043F32 2B 02       2289*      dw 555
043F34 2C 02       2290*      dw 556
043F36 2D 02       2291*      dw 557
043F38 2E 02       2292*      dw 558
043F3A 2F 02       2293*      dw 559
043F3C 30 02       2294*      dw 560
043F3E 31 02       2295*      dw 561
043F40 32 02       2296*      dw 562
043F42 33 02       2297*      dw 563
043F44 34 02       2298*      dw 564
043F46 35 02       2299*      dw 565
043F48 36 02       2300*      dw 566
043F4A 37 02       2301*      dw 567
043F4C 38 02       2302*      dw 568
043F4E 39 02       2303*      dw 569
043F50 3A 02       2304*      dw 570
043F52 3B 02       2305*      dw 571
043F54 3C 02       2306*      dw 572
043F56 3D 02       2307*      dw 573
043F58 3E 02       2308*      dw 574
043F5A 3F 02       2309*      dw 575
043F5C 40 02       2310*      dw 576
043F5E 41 02       2311*      dw 577
043F60 42 02       2312*      dw 578
043F62 43 02       2313*      dw 579
043F64 44 02       2314*      dw 580
043F66 45 02       2315*      dw 581
043F68 46 02       2316*      dw 582
043F6A 47 02       2317*      dw 583
043F6C 48 02       2318*      dw 584
043F6E 49 02       2319*      dw 585
043F70 4A 02       2320*      dw 586
043F72 4B 02       2321*      dw 587
043F74 4C 02       2322*      dw 588
043F76 4D 02       2323*      dw 589
043F78 4E 02       2324*      dw 590
043F7A 4F 02       2325*      dw 591
043F7C 50 02       2326*      dw 592
043F7E 51 02       2327*      dw 593
043F80 52 02       2328*      dw 594
043F82 53 02       2329*      dw 595
043F84 54 02       2330*      dw 596
043F86 55 02       2331*      dw 597
043F88 56 02       2332*      dw 598
043F8A 57 02       2333*      dw 599
043F8C 58 02       2334*      dw 600
043F8E 59 02       2335*      dw 601
043F90 5A 02       2336*      dw 602
043F92 5B 02       2337*      dw 603
043F94 5C 02       2338*      dw 604
043F96 5D 02       2339*      dw 605
043F98 5E 02       2340*      dw 606
043F9A 5F 02       2341*      dw 607
043F9C 60 02       2342*      dw 608
043F9E 61 02       2343*      dw 609
043FA0 62 02       2344*      dw 610
043FA2 63 02       2345*      dw 611
043FA4 64 02       2346*      dw 612
043FA6 65 02       2347*      dw 613
043FA8 66 02       2348*      dw 614
043FAA 67 02       2349*      dw 615
043FAC 68 02       2350*      dw 616
043FAE 69 02       2351*      dw 617
043FB0 6A 02       2352*      dw 618
043FB2 6B 02       2353*      dw 619
043FB4 6C 02       2354*      dw 620
043FB6 6D 02       2355*      dw 621
043FB8 6E 02       2356*      dw 622
043FBA 6F 02       2357*      dw 623
043FBC 70 02       2358*      dw 624
043FBE 71 02       2359*      dw 625
043FC0 72 02       2360*      dw 626
043FC2 73 02       2361*      dw 627
043FC4 74 02       2362*      dw 628
043FC6 75 02       2363*      dw 629
043FC8 76 02       2364*      dw 630
043FCA 77 02       2365*      dw 631
043FCC 78 02       2366*      dw 632
043FCE 79 02       2367*      dw 633
043FD0 7A 02       2368*      dw 634
043FD2 7B 02       2369*      dw 635
043FD4 7C 02       2370*      dw 636
043FD6 7D 02       2371*      dw 637
043FD8 7E 02       2372*      dw 638
043FDA 7F 02       2373*      dw 639
043FDC 80 02       2374*      dw 640
043FDE 81 02       2375*      dw 641
043FE0 82 02       2376*      dw 642
043FE2 83 02       2377*      dw 643
043FE4 84 02       2378*      dw 644
043FE6 85 02       2379*      dw 645
043FE8 86 02       2380*      dw 646
043FEA 87 02       2381*      dw 647
043FEC 88 02       2382*      dw 648
043FEE 89 02       2383*      dw 649
043FF0 8A 02       2384*      dw 650
043FF2 8B 02       2385*      dw 651
043FF4 8C 02       2386*      dw 652
043FF6 8D 02       2387*      dw 653
043FF8 8E 02       2388*      dw 654
043FFA 8F 02       2389*      dw 655
043FFC 90 02       2390*      dw 656
043FFE 91 02       2391*      dw 657
044000 92 02       2392*      dw 658
044002 93 02       2393*      dw 659
044004 94 02       2394*      dw 660
044006 95 02       2395*      dw 661
044008 96 02       2396*      dw 662
04400A 97 02       2397*      dw 663
04400C 98 02       2398*      dw 664
04400E 99 02       2399*      dw 665
044010 9A 02       2400*      dw 666
044012 9B 02       2401*      dw 667
044014 9C 02       2402*      dw 668
044016 9D 02       2403*      dw 669
044018 9E 02       2404*      dw 670
04401A 9F 02       2405*      dw 671
04401C A0 02       2406*      dw 672
04401E A1 02       2407*      dw 673
044020 A2 02       2408*      dw 674
044022 A3 02       2409*      dw 675
044024 A4 02       2410*      dw 676
044026 A5 02       2411*      dw 677
044028 A6 02       2412*      dw 678
04402A A7 02       2413*      dw 679
04402C A8 02       2414*      dw 680
04402E A9 02       2415*      dw 681
044030 AA 02       2416*      dw 682
044032 AB 02       2417*      dw 683
044034 AC 02       2418*      dw 684
044036 AD 02       2419*      dw 685
044038 AE 02       2420*      dw 686
04403A AF 02       2421*      dw 687
04403C B0 02       2422*      dw 688
04403E B1 02       2423*      dw 689
044040 B2 02       2424*      dw 690
044042 B3 02       2425*      dw 691
044044 B4 02       2426*      dw 692
044046 B5 02       2427*      dw 693
044048 B6 02       2428*      dw 694
04404A B7 02       2429*      dw 695
04404C B8 02       2430*      dw 696
04404E B9 02       2431*      dw 697
044050 BA 02       2432*      dw 698
044052 BB 02       2433*      dw 699
044054 BC 02       2434*      dw 700
044056 BD 02       2435*      dw 701
044058 BE 02       2436*      dw 702
04405A BF 02       2437*      dw 703
04405C C0 02       2438*      dw 704
04405E C1 02       2439*      dw 705
044060 C2 02       2440*      dw 706
044062 C3 02       2441*      dw 707
044064 C4 02       2442*      dw 708
044066 C5 02       2443*      dw 709
044068 C6 02       2444*      dw 710
04406A C7 02       2445*      dw 711
04406C C8 02       2446*      dw 712
04406E C9 02       2447*      dw 713
044070 CA 02       2448*      dw 714
044072 CB 02       2449*      dw 715
044074 CC 02       2450*      dw 716
044076 CD 02       2451*      dw 717
044078 CE 02       2452*      dw 718
04407A CF 02       2453*      dw 719
04407C D0 02       2454*      dw 720
04407E D1 02       2455*      dw 721
044080 D2 02       2456*      dw 722
044082 D3 02       2457*      dw 723
044084 D4 02       2458*      dw 724
044086 D5 02       2459*      dw 725
044088 D6 02       2460*      dw 726
04408A D7 02       2461*      dw 727
04408C D8 02       2462*      dw 728
04408E D9 02       2463*      dw 729
044090 DA 02       2464*      dw 730
044092 DB 02       2465*      dw 731
044094 DC 02       2466*      dw 732
044096 DD 02       2467*      dw 733
044098 DE 02       2468*      dw 734
04409A DF 02       2469*      dw 735
04409C E0 02       2470*      dw 736
04409E E1 02       2471*      dw 737
0440A0 E2 02       2472*      dw 738
0440A2 E3 02       2473*      dw 739
0440A4 E4 02       2474*      dw 740
0440A6 E5 02       2475*      dw 741
0440A8 E6 02       2476*      dw 742
0440AA E7 02       2477*      dw 743
0440AC E8 02       2478*      dw 744
0440AE E9 02       2479*      dw 745
0440B0 EA 02       2480*      dw 746
0440B2 EB 02       2481*      dw 747
0440B4 EC 02       2482*      dw 748
0440B6 ED 02       2483*      dw 749
0440B8 EE 02       2484*      dw 750
0440BA EF 02       2485*      dw 751
0440BC F0 02       2486*      dw 752
0440BE F1 02       2487*      dw 753
0440C0 F2 02       2488*      dw 754
0440C2 F3 02       2489*      dw 755
0440C4 F4 02       2490*      dw 756
0440C6 F5 02       2491*      dw 757
0440C8 F6 02       2492*      dw 758
0440CA F7 02       2493*      dw 759
0440CC F8 02       2494*      dw 760
0440CE F9 02       2495*      dw 761
0440D0 FA 02       2496*      dw 762
0440D2 FB 02       2497*      dw 763
0440D4 FC 02       2498*      dw 764
0440D6 FD 02       2499*      dw 765
0440D8 FE 02       2500*      dw 766
0440DA FF 02       2501*      dw 767
0440DC 00 03       2502*      dw 768
0440DE 01 03       2503*      dw 769
0440E0 02 03       2504*      dw 770
0440E2 03 03       2505*      dw 771
0440E4 04 03       2506*      dw 772
0440E6 05 03       2507*      dw 773
0440E8 06 03       2508*      dw 774
0440EA 07 03       2509*      dw 775
0440EC 08 03       2510*      dw 776
0440EE 09 03       2511*      dw 777
0440F0 0A 03       2512*      dw 778
0440F2 0B 03       2513*      dw 779
0440F4 0C 03       2514*      dw 780
0440F6 0D 03       2515*      dw 781
0440F8 0E 03       2516*      dw 782
0440FA 0F 03       2517*      dw 783
0440FC 10 03       2518*      dw 784
0440FE 11 03       2519*      dw 785
044100 12 03       2520*      dw 786
044102 13 03       2521*      dw 787
044104 14 03       2522*      dw 788
044106 15 03       2523*      dw 789
044108 16 03       2524*      dw 790
04410A 17 03       2525*      dw 791
04410C 18 03       2526*      dw 792
04410E 19 03       2527*      dw 793
044110 1A 03       2528*      dw 794
044112 1B 03       2529*      dw 795
044114 1C 03       2530*      dw 796
044116 1D 03       2531*      dw 797
044118 1E 03       2532*      dw 798
04411A 1F 03       2533*      dw 799
04411C 20 03       2534*      dw 800
04411E 21 03       2535*      dw 801
044120 22 03       2536*      dw 802
044122 23 03       2537*      dw 803
044124 24 03       2538*      dw 804
044126 25 03       2539*      dw 805
044128 26 03       2540*      dw 806
04412A 27 03       2541*      dw 807
04412C 28 03       2542*      dw 808
04412E 29 03       2543*      dw 809
044130 2A 03       2544*      dw 810
044132 2B 03       2545*      dw 811
044134 2C 03       2546*      dw 812
044136 2D 03       2547*      dw 813
044138 2E 03       2548*      dw 814
04413A 2F 03       2549*      dw 815
04413C 30 03       2550*      dw 816
04413E 31 03       2551*      dw 817
044140 32 03       2552*      dw 818
044142 33 03       2553*      dw 819
044144 34 03       2554*      dw 820
044146 35 03       2555*      dw 821
044148 36 03       2556*      dw 822
04414A 37 03       2557*      dw 823
04414C 38 03       2558*      dw 824
04414E 39 03       2559*      dw 825
044150 3A 03       2560*      dw 826
044152 3B 03       2561*      dw 827
044154 3C 03       2562*      dw 828
044156 3D 03       2563*      dw 829
044158 3E 03       2564*      dw 830
04415A 3F 03       2565*      dw 831
04415C 40 03       2566*      dw 832
04415E 41 03       2567*      dw 833
044160 42 03       2568*      dw 834
044162 43 03       2569*      dw 835
044164 44 03       2570*      dw 836
044166 45 03       2571*      dw 837
044168 46 03       2572*      dw 838
04416A 47 03       2573*      dw 839
04416C 48 03       2574*      dw 840
04416E 49 03       2575*      dw 841
044170 4A 03       2576*      dw 842
044172 4B 03       2577*      dw 843
044174 4C 03       2578*      dw 844
044176 4D 03       2579*      dw 845
044178 4E 03       2580*      dw 846
04417A 4F 03       2581*      dw 847
04417C 50 03       2582*      dw 848
04417E 51 03       2583*      dw 849
044180 52 03       2584*      dw 850
044182 53 03       2585*      dw 851
044184 54 03       2586*      dw 852
044186 55 03       2587*      dw 853
044188 56 03       2588*      dw 854
04418A 57 03       2589*      dw 855
04418C 58 03       2590*      dw 856
04418E 59 03       2591*      dw 857
044190 5A 03       2592*      dw 858
044192 5B 03       2593*      dw 859
044194 5C 03       2594*      dw 860
044196 5D 03       2595*      dw 861
044198 5E 03       2596*      dw 862
04419A 5F 03       2597*      dw 863
04419C 60 03       2598*      dw 864
04419E 61 03       2599*      dw 865
0441A0 62 03       2600*      dw 866
0441A2 63 03       2601*      dw 867
0441A4 64 03       2602*      dw 868
0441A6 65 03       2603*      dw 869
0441A8 66 03       2604*      dw 870
0441AA 67 03       2605*      dw 871
0441AC 68 03       2606*      dw 872
0441AE 69 03       2607*      dw 873
0441B0 6A 03       2608*      dw 874
0441B2 6B 03       2609*      dw 875
0441B4 6C 03       2610*      dw 876
0441B6 6D 03       2611*      dw 877
0441B8 6E 03       2612*      dw 878
0441BA 6F 03       2613*      dw 879
0441BC 70 03       2614*      dw 880
0441BE 71 03       2615*      dw 881
0441C0 72 03       2616*      dw 882
0441C2 73 03       2617*      dw 883
0441C4 74 03       2618*      dw 884
0441C6 75 03       2619*      dw 885
0441C8 76 03       2620*      dw 886
0441CA 77 03       2621*      dw 887
0441CC 78 03       2622*      dw 888
0441CE 79 03       2623*      dw 889
0441D0 7A 03       2624*      dw 890
0441D2 7B 03       2625*      dw 891
0441D4 7C 03       2626*      dw 892
0441D6 7D 03       2627*      dw 893
0441D8 7E 03       2628*      dw 894
0441DA 7F 03       2629*      dw 895
0441DC 80 03       2630*      dw 896
0441DE 81 03       2631*      dw 897
0441E0 82 03       2632*      dw 898
0441E2 83 03       2633*      dw 899
0441E4 84 03       2634*      dw 900
0441E6 85 03       2635*      dw 901
0441E8 86 03       2636*      dw 902
0441EA 87 03       2637*      dw 903
0441EC 88 03       2638*      dw 904
0441EE 89 03       2639*      dw 905
0441F0 8A 03       2640*      dw 906
0441F2 8B 03       2641*      dw 907
0441F4 8C 03       2642*      dw 908
0441F6 8D 03       2643*      dw 909
0441F8 8E 03       2644*      dw 910
0441FA 8F 03       2645*      dw 911
0441FC 90 03       2646*      dw 912
0441FE 91 03       2647*      dw 913
044200 92 03       2648*      dw 914
044202 93 03       2649*      dw 915
044204 94 03       2650*      dw 916
044206 95 03       2651*      dw 917
044208 96 03       2652*      dw 918
04420A 97 03       2653*      dw 919
04420C 98 03       2654*      dw 920
04420E 99 03       2655*      dw 921
044210 9A 03       2656*      dw 922
044212 9B 03       2657*      dw 923
044214 9C 03       2658*      dw 924
044216 9D 03       2659*      dw 925
044218 9E 03       2660*      dw 926
04421A 9F 03       2661*      dw 927
04421C A0 03       2662*      dw 928
04421E A1 03       2663*      dw 929
044220 A2 03       2664*      dw 930
044222 A3 03       2665*      dw 931
044224 A4 03       2666*      dw 932
044226 A5 03       2667*      dw 933
044228 A6 03       2668*      dw 934
04422A A7 03       2669*      dw 935
04422C A8 03       2670*      dw 936
04422E A9 03       2671*      dw 937
044230 AA 03       2672*      dw 938
044232 AB 03       2673*      dw 939
044234 AC 03       2674*      dw 940
044236 AD 03       2675*      dw 941
044238 AE 03       2676*      dw 942
04423A AF 03       2677*      dw 943
04423C B0 03       2678*      dw 944
04423E B1 03       2679*      dw 945
044240 B2 03       2680*      dw 946
044242 B3 03       2681*      dw 947
044244 B4 03       2682*      dw 948
044246 B5 03       2683*      dw 949
044248 B6 03       2684*      dw 950
04424A B7 03       2685*      dw 951
04424C B8 03       2686*      dw 952
04424E B9 03       2687*      dw 953
044250 BA 03       2688*      dw 954
044252 BB 03       2689*      dw 955
044254 BC 03       2690*      dw 956
044256 BD 03       2691*      dw 957
044258 BE 03       2692*      dw 958
04425A BF 03       2693*      dw 959
04425C C0 03       2694*      dw 960
04425E C1 03       2695*      dw 961
044260 C2 03       2696*      dw 962
044262 C3 03       2697*      dw 963
044264 C4 03       2698*      dw 964
044266 C5 03       2699*      dw 965
044268 C6 03       2700*      dw 966
04426A C7 03       2701*      dw 967
04426C C8 03       2702*      dw 968
04426E C9 03       2703*      dw 969
044270 CA 03       2704*      dw 970
044272 CB 03       2705*      dw 971
044274 CC 03       2706*      dw 972
044276 CD 03       2707*      dw 973
044278 CE 03       2708*      dw 974
04427A CF 03       2709*      dw 975
04427C D0 03       2710*      dw 976
04427E D1 03       2711*      dw 977
044280 D2 03       2712*      dw 978
044282 D3 03       2713*      dw 979
044284 D4 03       2714*      dw 980
044286 D5 03       2715*      dw 981
044288 D6 03       2716*      dw 982
04428A D7 03       2717*      dw 983
04428C D8 03       2718*      dw 984
04428E D9 03       2719*      dw 985
044290 DA 03       2720*      dw 986
044292 DB 03       2721*      dw 987
044294 DC 03       2722*      dw 988
044296 DD 03       2723*      dw 989
044298 DE 03       2724*      dw 990
04429A DF 03       2725*      dw 991
04429C E0 03       2726*      dw 992
04429E E1 03       2727*      dw 993
0442A0 E2 03       2728*      dw 994
0442A2 E3 03       2729*      dw 995
0442A4 E4 03       2730*      dw 996
0442A6 E5 03       2731*      dw 997
0442A8 E6 03       2732*      dw 998
0442AA E7 03       2733*      dw 999
0442AC E8 03       2734*      dw 1000
0442AE E9 03       2735*      dw 1001
0442B0 EA 03       2736*      dw 1002
0442B2 EB 03       2737*      dw 1003
0442B4 EC 03       2738*      dw 1004
0442B6 ED 03       2739*      dw 1005
0442B8 EE 03       2740*      dw 1006
0442BA EF 03       2741*      dw 1007
0442BC F0 03       2742*      dw 1008
0442BE F1 03       2743*      dw 1009
0442C0 F2 03       2744*      dw 1010
0442C2 F3 03       2745*      dw 1011
0442C4 F4 03       2746*      dw 1012
0442C6 F5 03       2747*      dw 1013
0442C8 F6 03       2748*      dw 1014
0442CA F7 03       2749*      dw 1015
0442CC F8 03       2750*      dw 1016
0442CE F9 03       2751*      dw 1017
0442D0 FA 03       2752*      dw 1018
0442D2 FB 03       2753*      dw 1019
0442D4 FC 03       2754*      dw 1020
0442D6 FD 03       2755*      dw 1021
0442D8 FE 03       2756*      dw 1022
0442DA FF 03       2757*      dw 1023
0442DC 00 04       2758*      dw 1024
0442DE 01 04       2759*      dw 1025
0442E0 02 04       2760*      dw 1026
0442E2 03 04       2761*      dw 1027
0442E4 04 04       2762*      dw 1028
0442E6 05 04       2763*      dw 1029
0442E8 06 04       2764*      dw 1030
0442EA 07 04       2765*      dw 1031
0442EC 08 04       2766*      dw 1032
0442EE 09 04       2767*      dw 1033
0442F0 0A 04       2768*      dw 1034
0442F2 0B 04       2769*      dw 1035
0442F4 0C 04       2770*      dw 1036
0442F6 0D 04       2771*      dw 1037
0442F8 0E 04       2772*      dw 1038
0442FA 0F 04       2773*      dw 1039
0442FC 10 04       2774*      dw 1040
0442FE 11 04       2775*      dw 1041
044300 12 04       2776*      dw 1042
044302 13 04       2777*      dw 1043
044304 14 04       2778*      dw 1044
044306 15 04       2779*      dw 1045
044308 16 04       2780*      dw 1046
04430A 17 04       2781*      dw 1047
04430C 18 04       2782*      dw 1048
04430E 19 04       2783*      dw 1049
044310 1A 04       2784*      dw 1050
044312 1B 04       2785*      dw 1051
044314 1C 04       2786*      dw 1052
044316 1D 04       2787*      dw 1053
044318 1E 04       2788*      dw 1054
04431A 1F 04       2789*      dw 1055
04431C 20 04       2790*      dw 1056
04431E 21 04       2791*      dw 1057
044320 22 04       2792*      dw 1058
044322 23 04       2793*      dw 1059
044324 24 04       2794*      dw 1060
044326 25 04       2795*      dw 1061
044328 26 04       2796*      dw 1062
04432A 27 04       2797*      dw 1063
04432C 28 04       2798*      dw 1064
04432E 29 04       2799*      dw 1065
044330 2A 04       2800*      dw 1066
044332 2B 04       2801*      dw 1067
044334 2C 04       2802*      dw 1068
044336 2D 04       2803*      dw 1069
044338 2E 04       2804*      dw 1070
04433A 2F 04       2805*      dw 1071
04433C 30 04       2806*      dw 1072
04433E 31 04       2807*      dw 1073
044340 32 04       2808*      dw 1074
044342 33 04       2809*      dw 1075
044344 34 04       2810*      dw 1076
044346 35 04       2811*      dw 1077
044348 36 04       2812*      dw 1078
04434A 37 04       2813*      dw 1079
04434C 38 04       2814*      dw 1080
04434E 39 04       2815*      dw 1081
044350 3A 04       2816*      dw 1082
044352 3B 04       2817*      dw 1083
044354 3C 04       2818*      dw 1084
044356 3D 04       2819*      dw 1085
044358 3E 04       2820*      dw 1086
04435A 3F 04       2821*      dw 1087
04435C 40 04       2822*      dw 1088
04435E 41 04       2823*      dw 1089
044360 42 04       2824*      dw 1090
044362 43 04       2825*      dw 1091
044364 44 04       2826*      dw 1092
044366 45 04       2827*      dw 1093
044368 46 04       2828*      dw 1094
04436A 47 04       2829*      dw 1095
04436C 48 04       2830*      dw 1096
04436E 49 04       2831*      dw 1097
044370 4A 04       2832*      dw 1098
044372 4B 04       2833*      dw 1099
044374 4C 04       2834*      dw 1100
044376 4D 04       2835*      dw 1101
044378 4E 04       2836*      dw 1102
04437A 4F 04       2837*      dw 1103
04437C 50 04       2838*      dw 1104
04437E 51 04       2839*      dw 1105
044380 52 04       2840*      dw 1106
044382 53 04       2841*      dw 1107
044384 54 04       2842*      dw 1108
044386 55 04       2843*      dw 1109
044388 56 04       2844*      dw 1110
04438A 57 04       2845*      dw 1111
04438C 58 04       2846*      dw 1112
04438E 59 04       2847*      dw 1113
044390 5A 04       2848*      dw 1114
044392 5B 04       2849*      dw 1115
044394 5C 04       2850*      dw 1116
044396 5D 04       2851*      dw 1117
044398 5E 04       2852*      dw 1118
04439A 5F 04       2853*      dw 1119
04439C 60 04       2854*      dw 1120
04439E 61 04       2855*      dw 1121
0443A0 62 04       2856*      dw 1122
0443A2 63 04       2857*      dw 1123
0443A4 64 04       2858*      dw 1124
0443A6 65 04       2859*      dw 1125
0443A8 66 04       2860*      dw 1126
0443AA 67 04       2861*      dw 1127
0443AC 68 04       2862*      dw 1128
0443AE 69 04       2863*      dw 1129
0443B0 6A 04       2864*      dw 1130
0443B2 6B 04       2865*      dw 1131
0443B4 6C 04       2866*      dw 1132
0443B6 6D 04       2867*      dw 1133
0443B8 6E 04       2868*      dw 1134
0443BA 6F 04       2869*      dw 1135
0443BC 70 04       2870*      dw 1136
0443BE 71 04       2871*      dw 1137
0443C0 72 04       2872*      dw 1138
0443C2 73 04       2873*      dw 1139
0443C4 74 04       2874*      dw 1140
0443C6 75 04       2875*      dw 1141
0443C8 76 04       2876*      dw 1142
0443CA 77 04       2877*      dw 1143
0443CC 78 04       2878*      dw 1144
0443CE 79 04       2879*      dw 1145
0443D0 7A 04       2880*      dw 1146
0443D2 7B 04       2881*      dw 1147
0443D4 7C 04       2882*      dw 1148
0443D6 7D 04       2883*      dw 1149
0443D8 7E 04       2884*      dw 1150
0443DA 7F 04       2885*      dw 1151
0443DC 80 04       2886*      dw 1152
0443DE 81 04       2887*      dw 1153
0443E0 82 04       2888*      dw 1154
0443E2 83 04       2889*      dw 1155
0443E4 84 04       2890*      dw 1156
0443E6 85 04       2891*      dw 1157
0443E8 86 04       2892*      dw 1158
0443EA 87 04       2893*      dw 1159
0443EC 88 04       2894*      dw 1160
0443EE 89 04       2895*      dw 1161
0443F0 8A 04       2896*      dw 1162
0443F2 8B 04       2897*      dw 1163
0443F4 8C 04       2898*      dw 1164
0443F6 8D 04       2899*      dw 1165
0443F8 8E 04       2900*      dw 1166
0443FA 8F 04       2901*      dw 1167
0443FC 90 04       2902*      dw 1168
0443FE 91 04       2903*      dw 1169
044400 92 04       2904*      dw 1170
044402 93 04       2905*      dw 1171
044404 94 04       2906*      dw 1172
044406 95 04       2907*      dw 1173
044408 96 04       2908*      dw 1174
04440A 97 04       2909*      dw 1175
04440C 98 04       2910*      dw 1176
04440E 99 04       2911*      dw 1177
044410 9A 04       2912*      dw 1178
044412 9B 04       2913*      dw 1179
044414 9C 04       2914*      dw 1180
044416 9D 04       2915*      dw 1181
044418 9E 04       2916*      dw 1182
04441A 9F 04       2917*      dw 1183
04441C A0 04       2918*      dw 1184
04441E A1 04       2919*      dw 1185
044420 A2 04       2920*      dw 1186
044422 A3 04       2921*      dw 1187
044424 A4 04       2922*      dw 1188
044426 A5 04       2923*      dw 1189
044428 A6 04       2924*      dw 1190
04442A A7 04       2925*      dw 1191
04442C A8 04       2926*      dw 1192
04442E A9 04       2927*      dw 1193
044430 AA 04       2928*      dw 1194
044432 AB 04       2929*      dw 1195
044434 AC 04       2930*      dw 1196
044436 AD 04       2931*      dw 1197
044438 AE 04       2932*      dw 1198
04443A AF 04       2933*      dw 1199
04443C B0 04       2934*      dw 1200
04443E B1 04       2935*      dw 1201
044440 B2 04       2936*      dw 1202
044442 B3 04       2937*      dw 1203
044444 B4 04       2938*      dw 1204
044446 B5 04       2939*      dw 1205
044448 B6 04       2940*      dw 1206
04444A B7 04       2941*      dw 1207
04444C B8 04       2942*      dw 1208
04444E B9 04       2943*      dw 1209
044450 BA 04       2944*      dw 1210
044452 BB 04       2945*      dw 1211
044454 BC 04       2946*      dw 1212
044456 BD 04       2947*      dw 1213
044458 BE 04       2948*      dw 1214
04445A BF 04       2949*      dw 1215
04445C C0 04       2950*      dw 1216
04445E C1 04       2951*      dw 1217
044460 C2 04       2952*      dw 1218
044462 C3 04       2953*      dw 1219
044464 C4 04       2954*      dw 1220
044466 C5 04       2955*      dw 1221
044468 C6 04       2956*      dw 1222
04446A C7 04       2957*      dw 1223
04446C C8 04       2958*      dw 1224
04446E C9 04       2959*      dw 1225
044470 CA 04       2960*      dw 1226
044472 CB 04       2961*      dw 1227
044474 CC 04       2962*      dw 1228
044476 CD 04       2963*      dw 1229
044478 CE 04       2964*      dw 1230
04447A CF 04       2965*      dw 1231
04447C D0 04       2966*      dw 1232
04447E D1 04       2967*      dw 1233
044480 D2 04       2968*      dw 1234
044482 D3 04       2969*      dw 1235
044484 D4 04       2970*      dw 1236
044486 D5 04       2971*      dw 1237
044488 D6 04       2972*      dw 1238
04448A D7 04       2973*      dw 1239
04448C D8 04       2974*      dw 1240
04448E D9 04       2975*      dw 1241
044490 DA 04       2976*      dw 1242
044492 DB 04       2977*      dw 1243
044494 DC 04       2978*      dw 1244
044496 DD 04       2979*      dw 1245
044498 DE 04       2980*      dw 1246
04449A DF 04       2981*      dw 1247
04449C E0 04       2982*      dw 1248
04449E E1 04       2983*      dw 1249
0444A0 E2 04       2984*      dw 1250
0444A2 E3 04       2985*      dw 1251
0444A4 E4 04       2986*      dw 1252
0444A6 E5 04       2987*      dw 1253
0444A8 E6 04       2988*      dw 1254
0444AA E7 04       2989*      dw 1255
0444AC E8 04       2990*      dw 1256
0444AE E9 04       2991*      dw 1257
0444B0 EA 04       2992*      dw 1258
0444B2 EB 04       2993*      dw 1259
0444B4 EC 04       2994*      dw 1260
0444B6 ED 04       2995*      dw 1261
0444B8 EE 04       2996*      dw 1262
0444BA EF 04       2997*      dw 1263
0444BC F0 04       2998*      dw 1264
0444BE F1 04       2999*      dw 1265
0444C0 F2 04       3000*      dw 1266
0444C2 F3 04       3001*      dw 1267
0444C4 F4 04       3002*      dw 1268
0444C6 F5 04       3003*      dw 1269
0444C8 F6 04       3004*      dw 1270
0444CA F7 04       3005*      dw 1271
0444CC F8 04       3006*      dw 1272
0444CE F9 04       3007*      dw 1273
0444D0 FA 04       3008*      dw 1274
0444D2 FB 04       3009*      dw 1275
0444D4 FC 04       3010*      dw 1276
0444D6 FD 04       3011*      dw 1277
0444D8 FE 04       3012*      dw 1278
0444DA FF 04       3013*      dw 1279
0444DC 00 05       3014*      dw 1280
0444DE 01 05       3015*      dw 1281
0444E0 02 05       3016*      dw 1282
0444E2 03 05       3017*      dw 1283
0444E4 04 05       3018*      dw 1284
0444E6 05 05       3019*      dw 1285
0444E8 06 05       3020*      dw 1286
0444EA 07 05       3021*      dw 1287
0444EC 08 05       3022*      dw 1288
0444EE 09 05       3023*      dw 1289
0444F0 0A 05       3024*      dw 1290
0444F2 0B 05       3025*      dw 1291
0444F4 0C 05       3026*      dw 1292
0444F6 0D 05       3027*      dw 1293
0444F8 0E 05       3028*      dw 1294
0444FA 0F 05       3029*      dw 1295
0444FC 10 05       3030*      dw 1296
0444FE 11 05       3031*      dw 1297
044500 12 05       3032*      dw 1298
044502 13 05       3033*      dw 1299
044504 14 05       3034*      dw 1300
044506 15 05       3035*      dw 1301
044508 16 05       3036*      dw 1302
04450A 17 05       3037*      dw 1303
04450C 18 05       3038*      dw 1304
04450E 19 05       3039*      dw 1305
044510 1A 05       3040*      dw 1306
044512 1B 05       3041*      dw 1307
044514 1C 05       3042*      dw 1308
044516 1D 05       3043*      dw 1309
044518 1E 05       3044*      dw 1310
04451A 1F 05       3045*      dw 1311
04451C 20 05       3046*      dw 1312
04451E 21 05       3047*      dw 1313
044520 22 05       3048*      dw 1314
044522 23 05       3049*      dw 1315
044524 24 05       3050*      dw 1316
044526 25 05       3051*      dw 1317
044528 26 05       3052*      dw 1318
04452A 27 05       3053*      dw 1319
04452C 28 05       3054*      dw 1320
04452E 29 05       3055*      dw 1321
044530 2A 05       3056*      dw 1322
044532 2B 05       3057*      dw 1323
044534 2C 05       3058*      dw 1324
044536 2D 05       3059*      dw 1325
044538 2E 05       3060*      dw 1326
04453A 2F 05       3061*      dw 1327
04453C 30 05       3062*      dw 1328
04453E 31 05       3063*      dw 1329
044540 32 05       3064*      dw 1330
044542 33 05       3065*      dw 1331
044544 34 05       3066*      dw 1332
044546 35 05       3067*      dw 1333
044548 36 05       3068*      dw 1334
04454A 37 05       3069*      dw 1335
04454C 38 05       3070*      dw 1336
04454E 39 05       3071*      dw 1337
044550 3A 05       3072*      dw 1338
044552 3B 05       3073*      dw 1339
044554 3C 05       3074*      dw 1340
044556 3D 05       3075*      dw 1341
044558 3E 05       3076*      dw 1342
04455A 3F 05       3077*      dw 1343
04455C 40 05       3078*      dw 1344
04455E 41 05       3079*      dw 1345
044560 42 05       3080*      dw 1346
044562 43 05       3081*      dw 1347
044564 44 05       3082*      dw 1348
044566 45 05       3083*      dw 1349
044568 46 05       3084*      dw 1350
04456A 47 05       3085*      dw 1351
04456C 48 05       3086*      dw 1352
04456E 49 05       3087*      dw 1353
044570 4A 05       3088*      dw 1354
044572 4B 05       3089*      dw 1355
044574 4C 05       3090*      dw 1356
044576 4D 05       3091*      dw 1357
044578 4E 05       3092*      dw 1358
04457A 4F 05       3093*      dw 1359
04457C 50 05       3094*      dw 1360
04457E 51 05       3095*      dw 1361
044580 52 05       3096*      dw 1362
044582 53 05       3097*      dw 1363
044584 54 05       3098*      dw 1364
044586 55 05       3099*      dw 1365
044588 56 05       3100*      dw 1366
04458A 57 05       3101*      dw 1367
04458C 58 05       3102*      dw 1368
04458E 59 05       3103*      dw 1369
044590 5A 05       3104*      dw 1370
044592 5B 05       3105*      dw 1371
044594 5C 05       3106*      dw 1372
044596 5D 05       3107*      dw 1373
044598 5E 05       3108*      dw 1374
04459A 5F 05       3109*      dw 1375
04459C 60 05       3110*      dw 1376
04459E 61 05       3111*      dw 1377
0445A0 62 05       3112*      dw 1378
0445A2 63 05       3113*      dw 1379
0445A4 64 05       3114*      dw 1380
0445A6 65 05       3115*      dw 1381
0445A8 66 05       3116*      dw 1382
0445AA 67 05       3117*      dw 1383
0445AC 68 05       3118*      dw 1384
0445AE 69 05       3119*      dw 1385
0445B0 6A 05       3120*      dw 1386
0445B2 6B 05       3121*      dw 1387
0445B4 6C 05       3122*      dw 1388
0445B6 6D 05       3123*      dw 1389
0445B8 6E 05       3124*      dw 1390
0445BA 6F 05       3125*      dw 1391
0445BC 70 05       3126*      dw 1392
0445BE 71 05       3127*      dw 1393
0445C0 72 05       3128*      dw 1394
0445C2 73 05       3129*      dw 1395
0445C4 74 05       3130*      dw 1396
0445C6 75 05       3131*      dw 1397
0445C8 76 05       3132*      dw 1398
0445CA 77 05       3133*      dw 1399
0445CC 78 05       3134*      dw 1400
0445CE 79 05       3135*      dw 1401
0445D0 7A 05       3136*      dw 1402
0445D2 7B 05       3137*      dw 1403
0445D4 7C 05       3138*      dw 1404
0445D6 7D 05       3139*      dw 1405
0445D8 7E 05       3140*      dw 1406
0445DA 7F 05       3141*      dw 1407
0445DC 80 05       3142*      dw 1408
0445DE 81 05       3143*      dw 1409
0445E0 82 05       3144*      dw 1410
0445E2 83 05       3145*      dw 1411
0445E4 84 05       3146*      dw 1412
0445E6 85 05       3147*      dw 1413
0445E8 86 05       3148*      dw 1414
0445EA 87 05       3149*      dw 1415
0445EC 88 05       3150*      dw 1416
0445EE 89 05       3151*      dw 1417
0445F0 8A 05       3152*      dw 1418
0445F2 8B 05       3153*      dw 1419
0445F4 8C 05       3154*      dw 1420
0445F6 8D 05       3155*      dw 1421
0445F8 8E 05       3156*      dw 1422
0445FA 8F 05       3157*      dw 1423
0445FC 90 05       3158*      dw 1424
0445FE 91 05       3159*      dw 1425
044600 92 05       3160*      dw 1426
044602 93 05       3161*      dw 1427
044604 94 05       3162*      dw 1428
044606 95 05       3163*      dw 1429
044608 96 05       3164*      dw 1430
04460A 97 05       3165*      dw 1431
04460C 98 05       3166*      dw 1432
04460E 99 05       3167*      dw 1433
044610 9A 05       3168*      dw 1434
044612 9B 05       3169*      dw 1435
044614 9C 05       3170*      dw 1436
044616 9D 05       3171*      dw 1437
044618 9E 05       3172*      dw 1438
04461A 9F 05       3173*      dw 1439
04461C A0 05       3174*      dw 1440
04461E A1 05       3175*      dw 1441
044620 A2 05       3176*      dw 1442
044622 A3 05       3177*      dw 1443
044624 A4 05       3178*      dw 1444
044626 A5 05       3179*      dw 1445
044628 A6 05       3180*      dw 1446
04462A A7 05       3181*      dw 1447
04462C A8 05       3182*      dw 1448
04462E A9 05       3183*      dw 1449
044630 AA 05       3184*      dw 1450
044632 AB 05       3185*      dw 1451
044634 AC 05       3186*      dw 1452
044636 AD 05       3187*      dw 1453
044638 AE 05       3188*      dw 1454
04463A AF 05       3189*      dw 1455
04463C B0 05       3190*      dw 1456
04463E B1 05       3191*      dw 1457
044640 B2 05       3192*      dw 1458
044642 B3 05       3193*      dw 1459
044644 B4 05       3194*      dw 1460
044646 B5 05       3195*      dw 1461
044648 B6 05       3196*      dw 1462
04464A B7 05       3197*      dw 1463
04464C B8 05       3198*      dw 1464
04464E B9 05       3199*      dw 1465
044650 BA 05       3200*      dw 1466
044652 BB 05       3201*      dw 1467
044654 BC 05       3202*      dw 1468
044656 BD 05       3203*      dw 1469
044658 BE 05       3204*      dw 1470
04465A BF 05       3205*      dw 1471
04465C C0 05       3206*      dw 1472
04465E C1 05       3207*      dw 1473
044660 C2 05       3208*      dw 1474
044662 C3 05       3209*      dw 1475
044664 C4 05       3210*      dw 1476
044666 C5 05       3211*      dw 1477
044668 C6 05       3212*      dw 1478
04466A C7 05       3213*      dw 1479
04466C C8 05       3214*      dw 1480
04466E C9 05       3215*      dw 1481
044670 CA 05       3216*      dw 1482
044672 CB 05       3217*      dw 1483
044674 CC 05       3218*      dw 1484
044676 CD 05       3219*      dw 1485
044678 CE 05       3220*      dw 1486
04467A CF 05       3221*      dw 1487
04467C D0 05       3222*      dw 1488
04467E D1 05       3223*      dw 1489
044680 D2 05       3224*      dw 1490
044682 D3 05       3225*      dw 1491
044684 D4 05       3226*      dw 1492
044686 D5 05       3227*      dw 1493
044688 D6 05       3228*      dw 1494
04468A D7 05       3229*      dw 1495
04468C D8 05       3230*      dw 1496
04468E D9 05       3231*      dw 1497
044690 DA 05       3232*      dw 1498
044692 DB 05       3233*      dw 1499
044694 DC 05       3234*      dw 1500
044696 DD 05       3235*      dw 1501
044698 DE 05       3236*      dw 1502
04469A DF 05       3237*      dw 1503
04469C E0 05       3238*      dw 1504
04469E E1 05       3239*      dw 1505
0446A0 E2 05       3240*      dw 1506
0446A2 E3 05       3241*      dw 1507
0446A4 E4 05       3242*      dw 1508
0446A6 E5 05       3243*      dw 1509
0446A8 E6 05       3244*      dw 1510
0446AA E7 05       3245*      dw 1511
0446AC E8 05       3246*      dw 1512
0446AE E9 05       3247*      dw 1513
0446B0 EA 05       3248*      dw 1514
0446B2 EB 05       3249*      dw 1515
0446B4 EC 05       3250*      dw 1516
0446B6 ED 05       3251*      dw 1517
0446B8 EE 05       3252*      dw 1518
0446BA EF 05       3253*      dw 1519
0446BC F0 05       3254*      dw 1520
0446BE F1 05       3255*      dw 1521
0446C0 F2 05       3256*      dw 1522
0446C2 F3 05       3257*      dw 1523
0446C4 F4 05       3258*      dw 1524
0446C6 F5 05       3259*      dw 1525
0446C8 F6 05       3260*      dw 1526
0446CA F7 05       3261*      dw 1527
0446CC F8 05       3262*      dw 1528
0446CE F9 05       3263*      dw 1529
0446D0 FA 05       3264*      dw 1530
0446D2 FB 05       3265*      dw 1531
0446D4 FC 05       3266*      dw 1532
0446D6 FD 05       3267*      dw 1533
0446D8 FE 05       3268*      dw 1534
0446DA FF 05       3269*      dw 1535
0446DC 00 06       3270*      dw 1536
0446DE 01 06       3271*      dw 1537
0446E0 02 06       3272*      dw 1538
0446E2 03 06       3273*      dw 1539
0446E4 04 06       3274*      dw 1540
0446E6 05 06       3275*      dw 1541
0446E8 06 06       3276*      dw 1542
0446EA 07 06       3277*      dw 1543
0446EC 08 06       3278*      dw 1544
0446EE 09 06       3279*      dw 1545
0446F0 0A 06       3280*      dw 1546
0446F2 0B 06       3281*      dw 1547
0446F4 0C 06       3282*      dw 1548
0446F6 0D 06       3283*      dw 1549
0446F8 0E 06       3284*      dw 1550
0446FA 0F 06       3285*      dw 1551
0446FC 10 06       3286*      dw 1552
0446FE 11 06       3287*      dw 1553
044700 12 06       3288*      dw 1554
044702 13 06       3289*      dw 1555
044704 14 06       3290*      dw 1556
044706 15 06       3291*      dw 1557
044708 16 06       3292*      dw 1558
04470A 17 06       3293*      dw 1559
04470C 18 06       3294*      dw 1560
04470E 19 06       3295*      dw 1561
044710 1A 06       3296*      dw 1562
044712 1B 06       3297*      dw 1563
044714 1C 06       3298*      dw 1564
044716 1D 06       3299*      dw 1565
044718 1E 06       3300*      dw 1566
04471A 1F 06       3301*      dw 1567
04471C 20 06       3302*      dw 1568
04471E 21 06       3303*      dw 1569
044720 22 06       3304*      dw 1570
044722 23 06       3305*      dw 1571
044724 24 06       3306*      dw 1572
044726 25 06       3307*      dw 1573
044728 26 06       3308*      dw 1574
04472A 27 06       3309*      dw 1575
04472C 28 06       3310*      dw 1576
04472E 29 06       3311*      dw 1577
044730 2A 06       3312*      dw 1578
044732 2B 06       3313*      dw 1579
044734 2C 06       3314*      dw 1580
044736 2D 06       3315*      dw 1581
044738 2E 06       3316*      dw 1582
04473A 2F 06       3317*      dw 1583
04473C 30 06       3318*      dw 1584
04473E 31 06       3319*      dw 1585
044740 32 06       3320*      dw 1586
044742 33 06       3321*      dw 1587
044744 34 06       3322*      dw 1588
044746 35 06       3323*      dw 1589
044748 36 06       3324*      dw 1590
04474A 37 06       3325*      dw 1591
04474C 38 06       3326*      dw 1592
04474E 39 06       3327*      dw 1593
044750 3A 06       3328*      dw 1594
044752 3B 06       3329*      dw 1595
044754 3C 06       3330*      dw 1596
044756 3D 06       3331*      dw 1597
044758 3E 06       3332*      dw 1598
04475A 3F 06       3333*      dw 1599
04475C 40 06       3334*      dw 1600
04475E 41 06       3335*      dw 1601
044760 42 06       3336*      dw 1602
044762 43 06       3337*      dw 1603
044764 44 06       3338*      dw 1604
044766 45 06       3339*      dw 1605
044768 46 06       3340*      dw 1606
04476A 47 06       3341*      dw 1607
04476C 48 06       3342*      dw 1608
04476E 49 06       3343*      dw 1609
044770 4A 06       3344*      dw 1610
044772 4B 06       3345*      dw 1611
044774 4C 06       3346*      dw 1612
044776 4D 06       3347*      dw 1613
044778 4E 06       3348*      dw 1614
04477A 4F 06       3349*      dw 1615
04477C 50 06       3350*      dw 1616
04477E 51 06       3351*      dw 1617
044780 52 06       3352*      dw 1618
044782 53 06       3353*      dw 1619
044784 54 06       3354*      dw 1620
044786 55 06       3355*      dw 1621
044788 56 06       3356*      dw 1622
04478A 57 06       3357*      dw 1623
04478C 58 06       3358*      dw 1624
04478E 59 06       3359*      dw 1625
044790 5A 06       3360*      dw 1626
044792 5B 06       3361*      dw 1627
044794 5C 06       3362*      dw 1628
044796 5D 06       3363*      dw 1629
044798 5E 06       3364*      dw 1630
04479A 5F 06       3365*      dw 1631
04479C 60 06       3366*      dw 1632
04479E 61 06       3367*      dw 1633
0447A0 62 06       3368*      dw 1634
0447A2 63 06       3369*      dw 1635
0447A4 64 06       3370*      dw 1636
0447A6 65 06       3371*      dw 1637
0447A8 66 06       3372*      dw 1638
0447AA 67 06       3373*      dw 1639
0447AC 68 06       3374*      dw 1640
0447AE 69 06       3375*      dw 1641
0447B0 6A 06       3376*      dw 1642
0447B2 6B 06       3377*      dw 1643
0447B4 6C 06       3378*      dw 1644
0447B6 6D 06       3379*      dw 1645
0447B8 6E 06       3380*      dw 1646
0447BA 6F 06       3381*      dw 1647
0447BC 70 06       3382*      dw 1648
0447BE 71 06       3383*      dw 1649
0447C0 72 06       3384*      dw 1650
0447C2 73 06       3385*      dw 1651
0447C4 74 06       3386*      dw 1652
0447C6 75 06       3387*      dw 1653
0447C8 76 06       3388*      dw 1654
0447CA 77 06       3389*      dw 1655
0447CC 78 06       3390*      dw 1656
0447CE 79 06       3391*      dw 1657
0447D0 7A 06       3392*      dw 1658
0447D2 7B 06       3393*      dw 1659
0447D4 7C 06       3394*      dw 1660
0447D6 7D 06       3395*      dw 1661
0447D8 7E 06       3396*      dw 1662
0447DA 7F 06       3397*      dw 1663
0447DC 80 06       3398*      dw 1664
0447DE 81 06       3399*      dw 1665
0447E0 82 06       3400*      dw 1666
0447E2 83 06       3401*      dw 1667
0447E4 84 06       3402*      dw 1668
0447E6 85 06       3403*      dw 1669
0447E8 86 06       3404*      dw 1670
0447EA 87 06       3405*      dw 1671
0447EC 88 06       3406*      dw 1672
0447EE 89 06       3407*      dw 1673
0447F0 8A 06       3408*      dw 1674
0447F2 8B 06       3409*      dw 1675
0447F4 8C 06       3410*      dw 1676
0447F6 8D 06       3411*      dw 1677
0447F8 8E 06       3412*      dw 1678
0447FA 8F 06       3413*      dw 1679
0447FC 90 06       3414*      dw 1680
0447FE 91 06       3415*      dw 1681
044800 92 06       3416*      dw 1682
044802 93 06       3417*      dw 1683
044804 94 06       3418*      dw 1684
044806 95 06       3419*      dw 1685
044808 96 06       3420*      dw 1686
04480A 97 06       3421*      dw 1687
04480C 98 06       3422*      dw 1688
04480E 99 06       3423*      dw 1689
044810 9A 06       3424*      dw 1690
044812 9B 06       3425*      dw 1691
044814 9C 06       3426*      dw 1692
044816 9D 06       3427*      dw 1693
044818 9E 06       3428*      dw 1694
04481A 9F 06       3429*      dw 1695
04481C A0 06       3430*      dw 1696
04481E A1 06       3431*      dw 1697
044820 A2 06       3432*      dw 1698
044822 A3 06       3433*      dw 1699
044824 A4 06       3434*      dw 1700
044826 A5 06       3435*      dw 1701
044828 A6 06       3436*      dw 1702
04482A A7 06       3437*      dw 1703
04482C A8 06       3438*      dw 1704
04482E A9 06       3439*      dw 1705
044830 AA 06       3440*      dw 1706
044832 AB 06       3441*      dw 1707
044834 AC 06       3442*      dw 1708
044836 AD 06       3443*      dw 1709
044838 AE 06       3444*      dw 1710
04483A AF 06       3445*      dw 1711
04483C B0 06       3446*      dw 1712
04483E B1 06       3447*      dw 1713
044840 B2 06       3448*      dw 1714
044842 B3 06       3449*      dw 1715
044844 B4 06       3450*      dw 1716
044846 B5 06       3451*      dw 1717
044848 B6 06       3452*      dw 1718
04484A B7 06       3453*      dw 1719
04484C B8 06       3454*      dw 1720
04484E B9 06       3455*      dw 1721
044850 BA 06       3456*      dw 1722
044852 BB 06       3457*      dw 1723
044854 BC 06       3458*      dw 1724
044856 BD 06       3459*      dw 1725
044858 BE 06       3460*      dw 1726
04485A BF 06       3461*      dw 1727
04485C             3462*  
04485C             3463*  teapot_texture_coordinates:
04485C 00 80 00 80 3464*      dw 32768, 32768
044860             0020   
044860             0021   
044860             0022   start:
044860 F5          0023       push af
044861 C5          0024       push bc
044862 D5          0025       push de
044863 DD E5       0026       push ix
044865 FD E5       0027       push iy
044867             0028   
044867 CD 7B 48 04 0029   	call init ; Initialization code
04486B CD 45 00 04 0030       call main ; Call the main function
04486F             0031   
04486F             0032   exit:
04486F             0033   
04486F FD E1       0034       pop iy
044871 DD E1       0035       pop ix
044873 D1          0036       pop de
044874 C1          0037       pop bc
044875 F1          0038       pop af
044876 21 00 00 00 0039       ld hl,0
04487A             0040   
04487A C9          0041       ret
04487B             0042   
04487B             0043   init:
04487B             0044   ; clear all buffers
04487B CD 8E 07 04 0045       call vdu_clear_all_buffers
04487F             0046   
04487F             0047   ; ; set up the display
04487F             0048   ;     ld a,8;+128 ; 320x240x64 double-buffered
04487F             0049   ;     call vdu_set_screen_mode
04487F             0050   ;     xor a
04487F             0051   ;     call vdu_set_scaling
04487F             0052   
04487F             0053   ; enable additional audio channels
04487F             0054   	; call vdu_enable_channels
04487F             0055   
04487F             0056   ; set the cursor off
04487F CD 9C 04 04 0057   	call cursor_off
044883             0058   
044883             0059   ; set text background color
044883 3E 84       0060   	ld a,4 + 128
044885 CD 69 02 04 0061   	call vdu_colour_text
044889             0062   
044889             0063   ; set text foreground color
044889 3E 2F       0064   	ld a,47 ; aaaaff lavenderish
04488B CD 69 02 04 0065   	call vdu_colour_text
04488F             0066   
04488F             0067   ; set gfx bg color
04488F AF          0068   	xor a ; plotting mode 0
044890 0E 04       0069   	ld c,4 ; dark blue
044892 CD 91 02 04 0070   	call vdu_gcol_bg
044896             0071   	; call vdu_cls
044896             0072   
044896             0073   ; set the cursor off again since we changed screen modes
044896 CD 9C 04 04 0074   	call cursor_off
04489A             0075   
04489A             0076   ; ; VDU 28, left, bottom, right, top: Set text viewport **
04489A             0077   ; ; MIND THE LITTLE-ENDIANESS
04489A             0078   ; ; inputs: c=left,b=bottom,e=right,d=top
04489A             0079   ; 	ld c,0 ; left
04489A             0080   ; 	ld d,20 ; top
04489A             0081   ; 	ld e,39 ; right
04489A             0082   ; 	ld b,29; bottom
04489A             0083   ; ;	call vdu_set_txt_viewport
04489A             0084   
04489A             0085   	; call vdu_cls
04489A 21 A3 48 04 0086   	ld hl,str_hello_world
04489E CD 94 0C 04 0087   	call printString
0448A2             0088   	; call vdu_flip
0448A2             0089       ; call waitReturn
0448A2             0090   
0448A2             0091   ; initialization done
0448A2 C9          0092   	ret
0448A3             0093   
0448A3 57 65 6C 6F 0094   str_hello_world: db "Welocome to the Pingo 3D Teapot Demo!\r\ncontinue.",0
       63 6F 6D 65 
       20 74 6F 20 
       74 68 65 20 
       50 69 6E 67 
       6F 20 33 44 
       20 54 65 61 
       70 6F 74 20 
       44 65 6D 6F 
       21 0D 0A 63 
       6F 6E 74 69 
       6E 75 65 2E 
       00          
0448D4             0095   ; str_rd_verts: db "Reading vertices.",0
0448D4 43 72 65 61 0096   str_ccs: db "Creating control structure.\r\n",0
       74 69 6E 67 
       20 63 6F 6E 
       74 72 6F 6C 
       20 73 74 72 
       75 63 74 75 
       72 65 2E 0D 
       0A 00       
0448F2 53 65 74 74 0097   str_set_cam_trans: db "Setting camera translation distances.\r\n"
       69 6E 67 20 
       63 61 6D 65 
       72 61 20 74 
       72 61 6E 73 
       6C 61 74 69 
       6F 6E 20 64 
       69 73 74 61 
       6E 63 65 73 
       2E 0D 0A    
044919 53 65 74 74 0098   str_set_cam_rot: db "Setting camera rotation angles.\r\n",0
       69 6E 67 20 
       63 61 6D 65 
       72 61 20 72 
       6F 74 61 74 
       69 6F 6E 20 
       61 6E 67 6C 
       65 73 2E 0D 
       0A 00       
04493B 53 65 6E 64 0099   str_sd_verts: db "Sending vertices.\r\n",0
       69 6E 67 20 
       76 65 72 74 
       69 63 65 73 
       2E 0D 0A 00 
04494F 53 65 6E 64 0100   str_vert_idxs: db "Sending vertex indices.\r\n",0
       69 6E 67 20 
       76 65 72 74 
       65 78 20 69 
       6E 64 69 63 
       65 73 2E 0D 
       0A 00       
044969 53 65 6E 64 0101   str_tex_coord_idxs: db  "Sending texture coordinate indices.\r\n",0
       69 6E 67 20 
       74 65 78 74 
       75 72 65 20 
       63 6F 6F 72 
       64 69 6E 61 
       74 65 20 69 
       6E 64 69 63 
       65 73 2E 0D 
       0A 00       
04498F 43 72 65 61 0102   str_crt_tex_bmp: db "Creating texture bitmap.\r\n",0
       74 69 6E 67 
       20 74 65 78 
       74 75 72 65 
       20 62 69 74 
       6D 61 70 2E 
       0D 0A 00    
0449AA 53 65 6E 64 0103   str_set_tex_pix: db "Sending texture pixel.\r\n",0
       69 6E 67 20 
       74 65 78 74 
       75 72 65 20 
       70 69 78 65 
       6C 2E 0D 0A 
       00          
0449C3 43 72 65 61 0104   str_crt_3d_obj: db "Creating 3D object.\r\n",0
       74 69 6E 67 
       20 33 44 20 
       6F 62 6A 65 
       63 74 2E 0D 
       0A 00       
0449D9 73 63 61 6C 0105   str_scl_3d_obj: db "scale 3D object.\r\n",0
       65 20 33 44 
       20 6F 62 6A 
       65 63 74 2E 
       0D 0A 00    
0449EC 43 72 65 61 0106   str_crt_tgt_bmp: db "Creating target bitmap.\r\n",0
       74 69 6E 67 
       20 74 61 72 
       67 65 74 20 
       62 69 74 6D 
       61 70 2E 0D 
       0A 00       
044A06 52 65 6E 64 0107   str_crt_rnd_3d_obj: db "Rendering 3D object.\r\n",0
       65 72 69 6E 
       67 20 33 44 
       20 6F 62 6A 
       65 63 74 2E 
       0D 0A 00    
044A1D             0108   
044A1D             0109   ; files.asm must go here so that filedata doesn't stomp on program data
044A1D             0110   	include "ez80/app/src/asm/files.asm"
044A1D             0001*  ; WARNING: this routine must be the last one loaded in the main program so that filedata doesn't stomp on any program code
044A1D             0002*  ; inputs: hl = bufferId, ix = file size
044A1D             0003*  vdu_load_buffer_from_file:
044A1D             0004*  	; load buffer ids
044A1D 22 5A 4A 04 0005*  		ld (@id0),hl
044A21 22 60 4A 04 0006*  		ld (@id1),hl
044A25 22 65 4A 04 0007*  		ld (@id2),hl
044A29             0008*  	; clean up bytes that got stomped on by the ID loads
044A29 3E 02       0009*  		ld a,2
044A2B 32 5C 4A 04 0010*  		ld (@id0+2),a
044A2F 3E 17       0011*  		ld a,23
044A31 32 62 4A 04 0012*  		ld (@id1+2),a
044A35 AF          0013*  		xor a
044A36 32 67 4A 04 0014*  		ld (@id2+2),a
044A3A             0015*  	; read size from ix
044A3A DD 7D       0016*  		ld a,ixl
044A3C 32 68 4A 04 0017*  		ld (@size),a
044A40 DD 7C       0018*  		ld a,ixh
044A42 32 69 4A 04 0019*  		ld (@size+1),a
044A46             0020*  	; get all the ducks in a row for the vdu call
044A46 01 13 00 00 0021*  		ld bc,filedata-@start
044A4A DD 09       0022*  		add ix,bc
044A4C DD 44       0023*  		ld b,ixh
044A4E DD 4D       0024*  		ld c,ixl
044A50 21 57 4A 04 0025*  		ld hl,@start
044A54             0026*  	; push the button
044A54 5B DF       0027*  		rst.lil $18
044A56             0028*  	; back to caller
044A56 C9          0029*  		ret
044A57             0030*  ; vdp command string:
044A57 17 00 A0    0031*  @start: db 23,0,0xA0 ; Clear buffer
044A5A 00 00       0032*  @id0:	dw 0x0000 ; bufferId
044A5C 02          0033*  		db 2
044A5D             0034*  	; select buffer VDU 23, 27, &20, bufferId;
044A5D 17 1B 20    0035*  		db 23,27,0x20
044A60 00 00       0036*  @id1:	dw 0x0000 ; bufferId
044A62             0037*  	; Upload data :: VDU 23, 0 &A0, bufferId; 0, length; <buffer-data>
044A62 17 00 A0    0038*  		db 23,0,0xA0
044A65 00 00       0039*  @id2:	dw 0x0000 ; bufferId
044A67 00          0040*  		db 0
044A68             0041*  		; CAUTION: the size argument is a 16-bit value, so the max number of bytes we can load in one chunk is 64KiB!! This corresponds to an rgba2 image size of 320x204.
044A68 00 00       0042*  @size:	dw 0x0000 ; length of data in bytes
044A6A             0043*  filedata: ; no need to allocate space here if this is the final include of the application
044A6A             0044*  	; ds 65536 ; placeholder for file data	DEBUG

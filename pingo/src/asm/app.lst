PC     Output      Line
040000             0001       include "pingo/src/asm/mos_api.asm"
040000             0001*  ; https://github.com/envenomator/Agon/blob/master/ez80asm%20examples%20(annotated)/mos_api.asm
040000             0002*  ; Title:	AGON MOS - API for user projects
040000             0003*  ; Author:	Dean Belfield
040000             0004*  ;			Adapted for agon-ez80asm by Jeroen Venema
040000             0005*  ;			Added MOS error codes for return in HL
040000             0006*  ; Created:	03/08/2022
040000             0007*  ; Last Updated:	10/08/2023
040000             0008*  ;
040000             0009*  ; Modinfo:
040000             0010*  ; 05/08/2022:	Added mos_feof
040000             0011*  ; 09/08/2022:	Added system variables: cursorX, cursorY
040000             0012*  ; 18/08/2022:	Added system variables: scrchar, scrpixel, audioChannel, audioSuccess, vpd_pflags
040000             0013*  ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
040000             0014*  ; 24/09/2022:	Added mos_getError, mos_mkdir
040000             0015*  ; 13/10/2022:	Added mos_oscli
040000             0016*  ; 23/02/2023:	Added more sysvars, fixed typo in sysvar_audioSuccess, offsets for sysvar_scrCols, sysvar_scrRows
040000             0017*  ; 04/03/2023:	Added sysvar_scrpixelIndex
040000             0018*  ; 08/03/2023:	Renamed sysvar_keycode to sysvar_keyascii, added sysvar_vkeycode
040000             0019*  ; 15/03/2023:	Added mos_copy, mos_getrtc, mos_setrtc, rtc, vdp_pflag_rtc
040000             0020*  ; 21/03/2023:	Added mos_setintvector, sysvars for keyboard status, vdu codes for vdp
040000             0021*  ; 22/03/2023:	The VDP commands are now indexed from 0x80
040000             0022*  ; 29/03/2023:	Added mos_uopen, mos_uclose, mos_ugetc, mos_uputc
040000             0023*  ; 13/04/2023:	Added FatFS file structures (FFOBJID, FIL, DIR, FILINFO)
040000             0024*  ; 15/04/2023:	Added mos_getfil, mos_fread, mos_fwrite and mos_flseek
040000             0025*  ; 19/05/2023:	Added sysvar_scrMode
040000             0026*  ; 05/06/2023:	Added sysvar_rtcEnable
040000             0027*  ; 03/08/2023:	Added mos_setkbvector
040000             0028*  ; 10/08/2023:	Added mos_getkbmap
040000             0029*  
040000             0030*  ; VDP control (VDU 23, 0, n)
040000             0031*  ;
040000             0032*  vdp_gp:				EQU 80h
040000             0033*  vdp_keycode:		EQU 81h
040000             0034*  vdp_cursor:			EQU	82h
040000             0035*  vdp_scrchar:		EQU	83h
040000             0036*  vdp_scrpixel:		EQU	84h
040000             0037*  vdp_audio:			EQU	85h
040000             0038*  vdp_mode:			EQU	86h
040000             0039*  vdp_rtc:			EQU	87h
040000             0040*  vdp_keystate:		EQU	88h
040000             0041*  vdp_logicalcoords:	EQU	C0h
040000             0042*  vdp_terminalmode:	EQU	FFh
040000             0043*  
040000             0044*  ; MOS high level functions
040000             0045*  ;
040000             0046*  mos_getkey:			EQU	00h
040000             0047*  mos_load:			EQU	01h
040000             0048*  mos_save:			EQU	02h
040000             0049*  mos_cd:				EQU	03h
040000             0050*  mos_dir:			EQU	04h
040000             0051*  mos_del:			EQU	05h
040000             0052*  mos_ren:			EQU	06h
040000             0053*  mos_mkdir:			EQU	07h
040000             0054*  mos_sysvars:		EQU	08h
040000             0055*  mos_editline:		EQU	09h
040000             0056*  mos_fopen:			EQU	0Ah
040000             0057*  mos_fclose:			EQU	0Bh
040000             0058*  mos_fgetc:			EQU	0Ch
040000             0059*  mos_fputc:			EQU	0Dh
040000             0060*  mos_feof:			EQU	0Eh
040000             0061*  mos_getError:		EQU	0Fh
040000             0062*  mos_oscli:			EQU	10h
040000             0063*  mos_copy:			EQU	11h
040000             0064*  mos_getrtc:			EQU	12h
040000             0065*  mos_setrtc:			EQU	13h
040000             0066*  mos_setintvector:	EQU	14h
040000             0067*  mos_uopen:			EQU	15h
040000             0068*  mos_uclose:			EQU	16h
040000             0069*  mos_ugetc:			EQU	17h
040000             0070*  mos_uputc:			EQU	18h
040000             0071*  mos_getfil:			EQU	19h
040000             0072*  mos_fread:			EQU	1Ah
040000             0073*  mos_fwrite:			EQU	1Bh
040000             0074*  mos_flseek:			EQU	1Ch
040000             0075*  mos_setkbvector:	EQU	1Dh
040000             0076*  mos_getkbmap:		EQU	1Eh
040000             0077*  
040000             0078*  ; MOS program exit codes
040000             0079*  ;
040000             0080*  EXIT_OK:				EQU  0;	"OK",
040000             0081*  EXIT_ERROR_SD_ACCESS:	EQU	 1;	"Error accessing SD card",
040000             0082*  EXIT_ERROR_ASSERTION:	EQU  2;	"Assertion failed",
040000             0083*  EXIT_SD_CARDFAILURE:	EQU  3;	"SD card failure",
040000             0084*  EXIT_FILENOTFOUND:		EQU  4;	"Could not find file",
040000             0085*  EXIT_PATHNOTFOUND:		EQU  5;	"Could not find path",
040000             0086*  EXIT_INVALIDPATHNAME:	EQU  6;	"Invalid path name",
040000             0087*  EXIT_ACCESSDENIED_FULL:	EQU  7;	"Access denied or directory full",
040000             0088*  EXIT_ACCESSDENIED:		EQU  8;	"Access denied",
040000             0089*  EXIT_INVALIDOBJECT:		EQU  9;	"Invalid file/directory object",
040000             0090*  EXIT_SD_WRITEPROTECTED:	EQU 10;	"SD card is write protected",
040000             0091*  EXIT_INVALIDDRIVENUMBER:EQU 11;	"Logical drive number is invalid",
040000             0092*  EXIT_NOVOLUMEWORKAREA:	EQU 12;	"Volume has no work area",
040000             0093*  EXIT_NOVALIDFATVOLUME:	EQU 13;	"No valid FAT volume",
040000             0094*  EXIT_ERRORMKFS:			EQU 14;	"Error occurred during mkfs",
040000             0095*  EXIT_VOLUMETIMEOUT:		EQU 15;	"Volume timeout",
040000             0096*  EXIT_VOLUMELOCKED:		EQU 16;	"Volume locked",
040000             0097*  EXIT_LFNALLOCATION:		EQU 17;	"LFN working buffer could not be allocated",
040000             0098*  EXIT_MAXOPENFILES:		EQU 18;	"Too many open files",
040000             0099*  EXIT_INVALIDPARAMETER:	EQU 19;	"Invalid parameter",
040000             0100*  EXIT_INVALIDCOMMAND:	EQU 20;	"Invalid command",
040000             0101*  EXIT_INVALIDEXECUTABLE:	EQU 21;	"Invalid executable",
040000             0102*  ; FatFS file access functions
040000             0103*  ;
040000             0104*  ffs_fopen:			EQU	80h
040000             0105*  ffs_fclose:			EQU	81h
040000             0106*  ffs_fread:			EQU	82h
040000             0107*  ffs_fwrite:			EQU	83h
040000             0108*  ffs_flseek:			EQU	84h
040000             0109*  ffs_ftruncate:		EQU	85h
040000             0110*  ffs_fsync:			EQU	86h
040000             0111*  ffs_fforward:		EQU	87h
040000             0112*  ffs_fexpand:		EQU	88h
040000             0113*  ffs_fgets:			EQU	89h
040000             0114*  ffs_fputc:			EQU	8Ah
040000             0115*  ffs_fputs:			EQU	8Bh
040000             0116*  ffs_fprintf:		EQU	8Ch
040000             0117*  ffs_ftell:			EQU	8Dh
040000             0118*  ffs_feof:			EQU	8Eh
040000             0119*  ffs_fsize:			EQU	8Fh
040000             0120*  ffs_ferror:			EQU	90h
040000             0121*  
040000             0122*  ; FatFS directory access functions
040000             0123*  ;
040000             0124*  ffs_dopen:			EQU	91h
040000             0125*  ffs_dclose:			EQU	92h
040000             0126*  ffs_dread:			EQU	93h
040000             0127*  ffs_dfindfirst:		EQU	94h
040000             0128*  ffs_dfindnext:		EQU	95h
040000             0129*  
040000             0130*  ; FatFS file and directory management functions
040000             0131*  ;
040000             0132*  ffs_stat:			EQU	96h
040000             0133*  ffs_unlink:			EQU	97h
040000             0134*  ffs_rename:			EQU	98h
040000             0135*  ffs_chmod:			EQU	99h
040000             0136*  ffs_utime:			EQU	9Ah
040000             0137*  ffs_mkdir:			EQU	9Bh
040000             0138*  ffs_chdir:			EQU	9Ch
040000             0139*  ffs_chdrive:		EQU	9Dh
040000             0140*  ffs_getcwd:			EQU	9Eh
040000             0141*  
040000             0142*  ; FatFS volume management and system configuration functions
040000             0143*  ;
040000             0144*  ffs_mount:			EQU	9Fh
040000             0145*  ffs_mkfs:			EQU	A0h
040000             0146*  ffs_fdisk:			EQU	A1h
040000             0147*  ffs_getfree:		EQU	A2h
040000             0148*  ffs_getlabel:		EQU	A3h
040000             0149*  ffs_setlabel:		EQU	A4h
040000             0150*  ffs_setcp:			EQU	A5h
040000             0151*  
040000             0152*  ; File access modes
040000             0153*  ;
040000             0154*  fa_read:			EQU	01h
040000             0155*  fa_write:			EQU	02h
040000             0156*  fa_open_existing:	EQU	00h
040000             0157*  fa_create_new:		EQU	04h
040000             0158*  fa_create_always:	EQU	08h
040000             0159*  fa_open_always:		EQU	10h
040000             0160*  fa_open_append:		EQU	30h
040000             0161*  
040000             0162*  ; System variable indexes for api_sysvars
040000             0163*  ; Index into _sysvars in globals.asm
040000             0164*  ;
040000             0165*  sysvar_time:			EQU	00h	; 4: Clock timer in centiseconds (incremented by 2 every VBLANK)
040000             0166*  sysvar_vpd_pflags:		EQU	04h	; 1: Flags to indicate completion of VDP commands
040000             0167*  sysvar_keyascii:		EQU	05h	; 1: ASCII keycode, or 0 if no key is pressed
040000             0168*  sysvar_keymods:			EQU	06h	; 1: Keycode modifiers
040000             0169*  sysvar_cursorX:			EQU	07h	; 1: Cursor X position
040000             0170*  sysvar_cursorY:			EQU	08h	; 1: Cursor Y position
040000             0171*  sysvar_scrchar:			EQU	09h	; 1: Character read from screen
040000             0172*  sysvar_scrpixel:		EQU	0Ah	; 3: Pixel data read from screen (R,B,G)
040000             0173*  sysvar_audioChannel:	EQU	0Dh	; 1: Audio channel
040000             0174*  sysvar_audioSuccess:	EQU	0Eh	; 1: Audio channel note queued (0 = no, 1 = yes)
040000             0175*  sysvar_scrWidth:		EQU	0Fh	; 2: Screen width in pixels
040000             0176*  sysvar_scrHeight:		EQU	11h	; 2: Screen height in pixels
040000             0177*  sysvar_scrCols:			EQU	13h	; 1: Screen columns in characters
040000             0178*  sysvar_scrRows:			EQU	14h	; 1: Screen rows in characters
040000             0179*  sysvar_scrColours:		EQU	15h	; 1: Number of colours displayed
040000             0180*  sysvar_scrpixelIndex:	EQU	16h	; 1: Index of pixel data read from screen
040000             0181*  sysvar_vkeycode:		EQU	17h	; 1: Virtual key code from FabGL
040000             0182*  sysvar_vkeydown:		EQU	18h	; 1: Virtual key state from FabGL (0=up, 1=down)
040000             0183*  sysvar_vkeycount:		EQU	19h	; 1: Incremented every time a key packet is received
040000             0184*  sysvar_rtc:				EQU	1Ah	; 6: Real time clock data
040000             0185*  sysvar_spare:			EQU	20h	; 2: Spare, previously used by rtc
040000             0186*  sysvar_keydelay:		EQU	22h	; 2: Keyboard repeat delay
040000             0187*  sysvar_keyrate:			EQU	24h	; 2: Keyboard repeat reat
040000             0188*  sysvar_keyled:			EQU	26h	; 1: Keyboard LED status
040000             0189*  sysvar_scrMode:			EQU	27h	; 1: Screen mode
040000             0190*  sysvar_rtcEnable:		EQU	28h	; 1: RTC enable flag (0: disabled, 1: use ESP32 RTC)
040000             0191*  
040000             0192*  ; Flags for the VPD protocol
040000             0193*  ;
040000             0194*  vdp_pflag_cursor:		EQU	00000001b
040000             0195*  vdp_pflag_scrchar:		EQU	00000010b
040000             0196*  vdp_pflag_point:		EQU	00000100b
040000             0197*  vdp_pflag_audio:		EQU	00001000b
040000             0198*  vdp_pflag_mode:			EQU	00010000b
040000             0199*  vdp_pflag_rtc:			EQU	00100000b
040000             0200*  
040000             0201*  ;
040000             0202*  ; FatFS structures
040000             0203*  ; These mirror the structures contained in src_fatfs/ff.h in the MOS project
040000             0204*  ;
040000             0205*  ; Object ID and allocation information (FFOBJID)
040000             0206*  ;
040000             0207*  ; Indexes into FFOBJID structure
040000             0208*  ffobjid_fs:			EQU	0	; 3: Pointer to the hosting volume of this object
040000             0209*  ffobjid_id:			EQU	3	; 2: Hosting volume mount ID
040000             0210*  ffobjid_attr:		EQU	5	; 1: Object attribute
040000             0211*  ffobjid_stat:		EQU	6	; 1: Object chain status (b1-0: =0:not contiguous, =2:contiguous, =3:fragmented in this session, b2:sub-directory stretched)
040000             0212*  ffobjid_sclust:		EQU	7	; 4: Object data start cluster (0:no cluster or root directory)
040000             0213*  ffobjid_objsize:	EQU	11	; 4: Object size (valid when sclust != 0)
040000             0214*  ;
040000             0215*  ; File object structure (FIL)
040000             0216*  ;
040000             0217*  ; Indexes into FIL structure
040000             0218*  fil_obj:		EQU 0	; 15: Object identifier
040000             0219*  fil_flag:		EQU	15 	;  1: File status flags
040000             0220*  fil_err:		EQU	16	;  1: Abort flag (error code)
040000             0221*  fil_fptr:		EQU	17	;  4: File read/write pointer (Zeroed on file open)
040000             0222*  fil_clust:		EQU	21	;  4: Current cluster of fpter (invalid when fptr is 0)
040000             0223*  fil_sect:		EQU	25	;  4: Sector number appearing in buf[] (0:invalid)
040000             0224*  fil_dir_sect:	EQU	29	;  4: Sector number containing the directory entry
040000             0225*  fil_dir_ptr:	EQU	33	;  3: Pointer to the directory entry in the win[]
040000             0226*  ;
040000             0227*  ; Directory object structure (DIR)
040000             0228*  ; Indexes into DIR structure
040000             0229*  dir_obj:		EQU  0	; 15: Object identifier
040000             0230*  dir_dptr:		EQU	15	;  4: Current read/write offset
040000             0231*  dir_clust:		EQU	19	;  4: Current cluster
040000             0232*  dir_sect:		EQU	23	;  4: Current sector (0:Read operation has terminated)
040000             0233*  dir_dir:		EQU	27	;  3: Pointer to the directory item in the win[]
040000             0234*  dir_fn:			EQU	30	; 12: SFN (in/out) {body[8],ext[3],status[1]}
040000             0235*  dir_blk_ofs:	EQU	42	;  4: Offset of current entry block being processed (0xFFFFFFFF:Invalid)
040000             0236*  ;
040000             0237*  ; File information structure (FILINFO)
040000             0238*  ;
040000             0239*  ; Indexes into FILINFO structure
040000             0240*  filinfo_fsize:		EQU 0	;   4: File size
040000             0241*  filinfo_fdate:		EQU	4	;   2: Modified date
040000             0242*  filinfo_ftime:		EQU	6	;   2: Modified time
040000             0243*  filinfo_fattrib:	EQU	8	;   1: File attribute
040000             0244*  filinfo_altname:	EQU	9	;  13: Alternative file name
040000             0245*  filinfo_fname:		EQU	22	; 256: Primary file name
040000             0246*  ;
040000             0247*  ; Macro for calling the API
040000             0248*  ; Parameters:
040000             0249*  ; - function: One of the function numbers listed above
040000             0250*  ;
040000             0251*  	MACRO	MOSCALL	function
040000             0252*  			LD	A, function
040000             0253*  			RST.LIL	08h
040000             0254*  	ENDMACRO
040000             0002   
040000             0003       .assume adl=1
040000             0004       .org 0x040000
040000             0005   
040000 C3 45 00 04 0006       jp start
040004             0007   
040004 FF FF FF FF 0008       .align 64
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
       FF FF FF FF 
040040 4D 4F 53    0009       .db "MOS"
040043 00          0010       .db 00h
040044 01          0011       .db 01h
040045             0012   
040045             0013   start:
040045 F5          0014       push af
040046 C5          0015       push bc
040047 D5          0016       push de
040048 DD E5       0017       push ix
04004A FD E5       0018       push iy
04004C             0019   
04004C CD 5C 00 04 0020       call main
040050             0021   
040050             0022   exit:
040050             0023       ; ld hl,str_program_end
040050             0024       ; call printString
040050             0025   
040050 FD E1       0026       pop iy
040052 DD E1       0027       pop ix
040054 D1          0028       pop de
040055 C1          0029       pop bc
040056 F1          0030       pop af
040057 21 00 00 00 0031       ld hl,0
04005B             0032   
04005B C9          0033       ret
04005C             0034   
04005C             0035   main:
04005C 3E 88       0036       ld a,8+128 ; 320x240x64 double-buffered
04005E CD 76 03 04 0037       call vdu_set_screen_mode
040062             0038   
040062             0039       ; ld hl,str_hello_world
040062             0040       ; call printString
040062             0041   
040062             0042   ;   145 sid%=100: mid%=1: oid%=1: bmid1%=101: bmid2%=102
040062             0043   sid: equ 100
040062             0044   mid: equ 1
040062             0045   oid: equ 1
040062             0046   bmid1: equ 101
040062             0047   bmid2: equ 102
040062             0048   
040062             0049   ;   150 scene_width%=320: scene_height%=240
040062             0050   scene_width: equ 320
040062             0051   scene_height: equ 240
040062             0052   
040062             0053   ;    60 camf=32767.0/256.0
040062             0054   ;    70 camx=0.0*camf
040062             0055   ;    72 camy=0.0*camf
040062             0056   ;    74 camz=-4.0*camf
040062             0057   cam_f: equ 128 ; 32767/256
040062             0058   cam_distx: equ 0*cam_f
040062             0059   cam_disty: equ 64-16-8
040062             0060   cam_distz: equ -2*cam_f
040062             0061   
040062             0062   ;    80 pi2=PI*2.0
040062             0063   ;    85 camanglef=32767.0/360
040062             0064   ;    90 camanglex=0.0*camanglef
040062             0065   cam_anglef: equ 91 ; 32767/360
040062             0066   cam_anglex: equ 0*cam_anglef
040062             0067   
040062             0068   ; ;   340 PRINT "Creating control structure"
040062             0069   ;     ld hl,str_create_control
040062             0070   ;     call printString
040062             0071   ccs:
040062 21 70 00 04 0072       ld hl,@beg
040066 01 0B 00 00 0073       ld bc,@end-@beg
04006A 5B DF       0074       rst.lil $18
04006C C3 7B 00 04 0075       jp @end
040070             0076   @beg:
040070             0077   ;   350 VDU 23,0, &A0, sid%; &49, 0, scene_width%; scene_height%; : REM Create Control Structure
040070 17 00 A0    0078       db 23,0,$A0
040073 64 00       0079       dw sid
040075 49 00       0080       db $49,0
040077 40 01       0081       dw scene_width
040079 F0 00       0082       dw scene_height
04007B             0083   @end:
04007B             0084   
04007B             0085   ; ; set camera distance
04007B             0086   ;     ld hl,str_set_camera_distance
04007B             0087   ;     call printString
04007B             0088   scd:
04007B 21 89 00 04 0089       ld hl,@beg
04007F 01 0D 00 00 0090       ld bc,@end-@beg
040083 5B DF       0091       rst.lil $18
040085 C3 96 00 04 0092       jp @end
040089             0093   @beg:
040089             0094   ;   360 VDU 23,0, &A0, sid%; &49, 25, distx; disty; distz; : REM Set Camera XYZ Translation Distances
040089 17 00 A0    0095       db 23,0,$A0
04008C 64 00       0096       dw sid
04008E 49 19       0097       db $49,25
040090 00 00       0098       dw cam_distx
040092 28 00       0099       dw cam_disty
040094 00 FF       0100       dw cam_distz
040096             0101   @end:
040096             0102   
040096             0103   ; ; set camera x rotation
040096             0104   ;     ld hl,str_set_camera_x_rotation
040096             0105   ;     call printString
040096             0106   scxr:
040096 21 A4 00 04 0107       ld hl,@beg
04009A 01 09 00 00 0108       ld bc,@end-@beg
04009E 5B DF       0109       rst.lil $18
0400A0 C3 AD 00 04 0110       jp @end
0400A4             0111   @beg:
0400A4             0112   ;   380 VDU 23,0, &A0, sid%; &49, 18, anglex; : REM Set Camera X Rotation Angle
0400A4 17 00 A0    0113       db 23,0,$A0
0400A7 64 00       0114       dw sid
0400A9 49 12       0115       db $49,18
0400AB 00 00       0116       dw cam_anglex
0400AD             0117   @end:
0400AD             0118   
0400AD             0119       ; ld hl,str_init_cmplt
0400AD             0120       ; call printString
0400AD             0121   
0400AD             0122   ;    20 Lara5_vertices%=4
0400AD             0123   ;    30 Lara5_indices%=12
0400AD             0124   ;    40 Lara5_uvs%=10
0400AD             0125   ; Lara5_vertices: equ 4
0400AD             0126   ; Lara5_indices: equ 12
0400AD             0127   ; Lara5_uvs: equ 10
0400AD             0128   ;   100 scale=1.0*256.0
0400AD             0129   obj_scale: equ 256
0400AD             0130   
0400AD             0131   ; ;   400 PRINT "Sending vertices using factor ";factor
0400AD             0132   ;     ld hl,str_send_vertices
0400AD             0133   ;     call printString
0400AD             0134   sv:
0400AD 21 BB 00 04 0135       ld hl,@beg
0400B1 01 0B 00 00 0136       ld bc,@end-@beg
0400B5 5B DF       0137       rst.lil $18
0400B7 C3 C6 00 04 0138       jp @end
0400BB             0139   @beg:
0400BB             0140   ;   410 VDU 23,0, &A0, sid%; &49, 1, mid%; Lara5_vertices%; : REM Define Mesh Vertices
0400BB 17 00 A0    0141       db 23,0,$A0
0400BE 64 00       0142       dw sid
0400C0 49 01       0143       db $49,1
0400C2 01 00 2C 01 0144       dw mid, Lara5_vertices_n
0400C6             0145   @end:
0400C6             0146   ;   410 VDU 23,0, &A0, sid%; &49, 1, mid%; Lara5_vertices%; : REM Define Mesh Vertices
0400C6             0147   ;   420 FOR i%=0 TO total_coords%-1
0400C6             0148   ;   430   val%=vertices(i%)*factor
0400C6             0149   ;   440   VDU val%;
0400C6             0150   ;   450   REM T%=TIME
0400C6             0151   ;   460   REM IF TIME-T%<1 GOTO 390
0400C6             0152   ;   470 NEXT i%
0400C6 21 38 08 04 0153       ld hl,Lara5_vertices
0400CA 01 08 07 00 0154       ld bc,Lara5_vertex_indices-Lara5_vertices
0400CE 5B DF       0155       rst.lil $18
0400D0             0156   
0400D0             0157   ; ;   480 PRINT "Reading and sending vertex indices"
0400D0             0158   ;     ld hl,str_set_mesh_vertex_indices
0400D0             0159   ;     call printString
0400D0             0160   smvi:
0400D0 21 DE 00 04 0161       ld hl,@beg
0400D4 01 0B 00 00 0162       ld bc,@end-@beg
0400D8 5B DF       0163       rst.lil $18
0400DA C3 E9 00 04 0164       jp @end
0400DE             0165   @beg:
0400DE             0166   ;   490 VDU 23,0, &A0, sid%; &49, 2, mid%; Lara5_indices%; : REM Set Mesh Vertex indices
0400DE 17 00 A0    0167       db 23,0,$A0
0400E1 64 00       0168       dw sid
0400E3 49 02       0169       db $49,2
0400E5 01 00 2A 06 0170       dw mid, Lara5_indices_n
0400E9             0171   @end:
0400E9             0172   ;   500 FOR i%=0 TO Lara5_indices%-1
0400E9             0173   ;   510   READ val%
0400E9             0174   ;   520   VDU val%;
0400E9             0175   ;   530   REM T%=TIME
0400E9             0176   ;   540   REM IF TIME-T%<1 GOTO 470
0400E9             0177   ;   550 NEXT i%
0400E9 21 40 0F 04 0178       ld hl,Lara5_vertex_indices
0400ED 01 54 0C 00 0179       ld bc,Lara5_uvs-Lara5_vertex_indices
0400F1 5B DF       0180       rst.lil $18
0400F3             0181   
0400F3             0182   ; ;   560 PRINT "Sending texture UV coordinates"
0400F3             0183   ;     ld hl,str_set_texture_coordinates
0400F3             0184   ;     call printString
0400F3             0185   stc:
0400F3 21 01 01 04 0186       ld hl,@beg
0400F7 01 0B 00 00 0187       ld bc,@end-@beg
0400FB 5B DF       0188       rst.lil $18
0400FD C3 0C 01 04 0189       jp @end
040101             0190   @beg:
040101             0191   ;   570 VDU 23,0, &A0, sid%; &49, 3, mid%; Lara5_uvs%;
040101 17 00 A0    0192       db 23,0,$A0
040104 64 00       0193       dw sid
040106 49 03       0194       db $49,3
040108 01 00 84 02 0195       dw mid, Lara5_uvs_n
04010C             0196   @end:
04010C             0197   ;   580 total_uvs%=Lara5_uvs%*2
04010C             0198   ;   590 FOR i%=0 TO total_uvs%-1
04010C             0199   ;   600   READ val
04010C             0200   ;   610   val%=INT(val*65535)
04010C             0201   ;   620   VDU val%;
04010C             0202   ;   630   REM T%=TIME
04010C             0203   ;   640   REM IF TIME-T%<1 GOTO 570
04010C             0204   ;   650 NEXT i%
04010C 21 94 1B 04 0205       ld hl,Lara5_uvs
040110 01 10 0A 00 0206       ld bc,Lara5_uv_indices-Lara5_uvs
040114 5B DF       0207       rst.lil $18
040116             0208   
040116             0209   ; ;   660 PRINT "Sending Texture Coordinate indices"
040116             0210   ;     ld hl,str_set_tex_coord_idxs
040116             0211   ;     call printString
040116             0212   stci:
040116 21 24 01 04 0213       ld hl,@beg
04011A 01 0B 00 00 0214       ld bc,@end-@beg
04011E 5B DF       0215       rst.lil $18
040120 C3 2F 01 04 0216       jp @end
040124             0217   @beg:
040124             0218   ;   670 VDU 23,0, &A0, sid%; &49, 4, mid%; Lara5_indices%;
040124 17 00 A0    0219       db 23,0,$A0
040127 64 00       0220       dw sid
040129 49 04       0221       db $49,4
04012B 01 00 2A 06 0222       dw mid, Lara5_indices_n
04012F             0223   @end:
04012F             0224   ;   680 FOR i%=0 TO Lara5_indices%-1
04012F             0225   ;   690   READ val%
04012F             0226   ;   700   VDU val%;
04012F             0227   ;   710   REM T%=TIME
04012F             0228   ;   720   REM IF TIME-T%<1 GOTO 650
04012F             0229   ;   730 NEXT i%
04012F 21 A4 25 04 0230       ld hl,Lara5_uv_indices
040133 01 54 0C 00 0231       ld bc,Lara5_texture-Lara5_uv_indices
040137 5B DF       0232       rst.lil $18
040139             0233   
040139             0234   ; ;   740 PRINT "Creating texture bitmap"
040139             0235   ;     ld hl,str_create_texture_bitmap
040139             0236   ;     call printString
040139             0237   ctb:
040139 21 47 01 04 0238       ld hl,@beg
04013D 01 05 00 00 0239       ld bc,@end-@beg
040141 5B DF       0240       rst.lil $18
040143 C3 4C 01 04 0241       jp @end
040147             0242   @beg:
040147             0243   ;   750 VDU 23, 27, 0, bmid1%: REM Create a bitmap for a texture
040147 17 1B 00    0244       db 23,27,0
04014A 65 00       0245       dw bmid1
04014C             0246   @end:
04014C             0247   
04014C             0248   ; ;   760 PRINT "Sending texture pixel data"
04014C             0249   ;     ld hl,str_set_texture_pixel
04014C             0250   ;     call printString
04014C             0251   stp:
04014C 21 5A 01 04 0252       ld hl,@beg
040150 01 07 00 00 0253       ld bc,@end-@beg
040154 5B DF       0254       rst.lil $18
040156 C3 61 01 04 0255       jp @end
04015A             0256   @beg:
04015A             0257   ;   770 VDU 23, 27, 1, Lara5_texture_width%; Lara5_texture_height%;
04015A 17 1B 01    0258       db 23,27,1
04015D 00 01       0259   @texture_width: dw Lara5_texture_width
04015F B8 00       0260   @texture_height: dw Lara5_texture_height
040161             0261   @end:
040161             0262   ;   780 FOR i%=0 TO Lara5_texture_width%*Lara5_texture_height%*4-1
040161             0263   ;   790   READ val%
040161             0264   ;   800   VDU val% : REM 8-bit integers for pixel data
040161             0265   ;   810   REM T%=TIME
040161             0266   ;   820   REM IF TIME-T%<1 GOTO 750
040161             0267   ;   830 NEXT i%
040161 21 F8 31 04 0268       ld hl,Lara5_texture
040165 01 00 E0 02 0269       ld bc,Lara5_texture_width*Lara5_texture_height*4
040169 5B DF       0270       rst.lil $18
04016B             0271   
04016B             0272   ; ;   840 PRINT "Create 3D object"
04016B             0273   ;     ld hl,str_create_object
04016B             0274   ;     call printString
04016B             0275   co:
04016B 21 79 01 04 0276       ld hl,@beg
04016F 01 0D 00 00 0277       ld bc,@end-@beg
040173 5B DF       0278       rst.lil $18
040175 C3 86 01 04 0279       jp @end
040179             0280   @beg:
040179             0281   ;   850 VDU 23,0, &A0, sid%; &49, 5, oid%; mid%; bmid1%+64000; : REM Create Object
040179 17 00 A0    0282       db 23,0,$A0
04017C 64 00       0283       dw sid
04017E 49 05       0284       db $49,5
040180 01 00       0285       dw oid
040182 01 00       0286       dw mid
040184 65 FA       0287       dw bmid1+64000
040186             0288   @end:
040186             0289   
040186             0290   ; ;   860 PRINT "Scale object"
040186             0291   ;     ld hl,str_scale_object
040186             0292   ;     call printString
040186             0293   so:
040186 21 94 01 04 0294       ld hl,@beg
04018A 01 0F 00 00 0295       ld bc,@end-@beg
04018E 5B DF       0296       rst.lil $18
040190 C3 A3 01 04 0297       jp @end
040194             0298   @beg:
040194             0299   ;   870 VDU 23, 0, &A0, sid%; &49, 9, oid%; scale; scale; scale; : REM Set Object XYZ Scale Factors
040194 17 00 A0    0300       db 23,0,$A0
040197 64 00       0301       dw sid
040199 49 09       0302       db $49,9
04019B 01 00       0303       dw oid
04019D 00 01       0304       dw obj_scale
04019F 00 01       0305       dw obj_scale
0401A1 00 01       0306       dw obj_scale
0401A3             0307   @end:
0401A3             0308   
0401A3             0309   ; ;   880 PRINT "Create target bitmap"
0401A3             0310   ;     ld hl,str_create_target_bitmap
0401A3             0311   ;     call printString
0401A3             0312   ctb2:
0401A3 21 B1 01 04 0313       ld hl,@beg
0401A7 01 10 00 00 0314       ld bc,@end-@beg
0401AB 5B DF       0315       rst.lil $18
0401AD C3 C1 01 04 0316       jp @end
0401B1             0317   @beg:
0401B1             0318   ;   890 VDU 23, 27, 0, bmid2% : REM Select output bitmap
0401B1 17 1B 00    0319       db 23,27,0
0401B4 66 00       0320       dw bmid2
0401B6             0321   ;   900 VDU 23, 27, 2, scene_width%; scene_height%; &0000; &00C0; : REM Create solid color bitmap
0401B6 17 1B 02    0322       db 23,27,2
0401B9 40 01       0323       dw scene_width
0401BB F0 00       0324       dw scene_height
0401BD 00 00       0325       dw $0000
0401BF C0 00       0326       dw $00C0
0401C1             0327   @end:
0401C1             0328   
0401C1             0329   preloop:
0401C1 21 CF 01 04 0330       ld hl,@beg
0401C5 01 0C 00 00 0331       ld bc,@end-@beg
0401C9 5B DF       0332       rst.lil $18
0401CB C3 DB 01 04 0333       jp @end
0401CF             0334   @beg:
0401CF             0335   ;   920 VDU 23, 0, &C3: REM Flip buffer
0401CF 17 00 C3    0336       db 23,0,$C3
0401D2             0337   ;   930 REM VDU 22, 136: REM 320x240x64 double-buffered
0401D2             0338       ; db 22,136
0401D2             0339   ;   940 VDU 23, 0, &C0, 0: REM Normal coordinates
0401D2 17 00 C0 00 0340       db 23,0,$C0,0
0401D6             0341   ;   950 REM VDU 23, 0, &C0, 1: REM Abnormal coordinates
0401D6             0342       ; db 23,0,$C0,1
0401D6             0343   ;   960 VDU 17,20+128 : REM set text background color to lighter azure
0401D6 11 87       0344       db 17,7+128
0401D8             0345   ;   970 VDU 18, 0, 20+128 : REM set gfx background color to lighter azure
0401D8 12 00 87    0346       db 18,0,7+128
0401DB             0347   @end:
0401DB             0348   
0401DB             0349   mainloop:
0401DB             0350       ; ld hl,str_render_to_bitmap
0401DB             0351       ; call printString
0401DB             0352   rendbmp:
0401DB 21 E9 01 04 0353       ld hl,@beg
0401DF 01 09 00 00 0354       ld bc,@end-@beg
0401E3 5B DF       0355       rst.lil $18
0401E5 C3 F2 01 04 0356       jp @end
0401E9             0357   @beg:
0401E9             0358   ;  1040 VDU 23, 0, &A0, sid%; &49, 38, bmid2%+64000; : REM Render To Bitmap
0401E9 17 00 A0    0359       db 23, 0, $A0
0401EC 64 00       0360       dw sid
0401EE 49 26       0361       db $49, 38
0401F0 66 FA       0362       dw bmid2+64000
0401F2             0363   @end:
0401F2             0364   
0401F2 CD E9 02 04 0365       call vdu_cls
0401F6             0366   
0401F6             0367       ; ld hl,str_display_output_bitmap
0401F6             0368       ; call printString
0401F6             0369   dispbmp:
0401F6 21 04 02 04 0370       ld hl,@beg
0401FA 01 07 00 00 0371       ld bc,@end-@beg
0401FE 5B DF       0372       rst.lil $18
040200 C3 0B 02 04 0373       jp @end
040204             0374   @beg:
040204             0375   ;  1050 VDU 23, 27, 3, 0; 0; : REM Display output bitmap
040204 17 1B 03    0376       db 23, 27, 3
040207 00 00 00 00 0377       dw 0, 0
04020B             0378   @end:
04020B             0379   
04020B             0380   animate:
04020B             0381   ;  1080 rotatex=rotatex+incx: IF rotatex>=pi2 THEN rotatex=rotatex-pi2
04020B 2A 81 02 04 0382       ld hl,(rotatex)
04020F ED 5B 78 02 0383       ld de,(incx)
       04          
040214 19          0384       add hl,de
040215 22 64 02 04 0385       ld (@rx),hl
040219 22 81 02 04 0386       ld (rotatex),hl
04021D CD 20 32 04 0387       call printDec
040221             0388   ;  1090 rotatey=rotatey+incy: IF rotatey>=pi2 THEN rotatey=rotatey-pi2
040221 2A 84 02 04 0389       ld hl,(rotatey)
040225 ED 5B 7B 02 0390       ld de,(incy)
       04          
04022A 19          0391       add hl,de
04022B 22 66 02 04 0392       ld (@ry),hl
04022F 22 84 02 04 0393       ld (rotatey),hl
040233 CD 20 32 04 0394       call printDec
040237             0395   ;  1100 rotatez=rotatez+incz: IF rotatez>=pi2 THEN rotatez=rotatez-pi2
040237 2A 87 02 04 0396       ld hl,(rotatez)
04023B ED 5B 7E 02 0397       ld de,(incz)
       04          
040240 19          0398       add hl,de
040241 22 68 02 04 0399       ld (@rz),hl
040245 22 87 02 04 0400       ld (rotatez),hl
040249 CD 20 32 04 0401       call printDec
04024D             0402   
04024D 21 5B 02 04 0403       ld hl,@beg
040251 01 0F 00 00 0404       ld bc,@end-@beg
040255 5B DF       0405       rst.lil $18
040257 C3 6B 02 04 0406       jp @done
04025B             0407   @beg:
04025B             0408   ;  1120 VDU 23, 0, &A0, sid%; &49, 13, oid%; rx; ry; rz; : REM Set Object XYZ Rotation Angles
04025B 17 00 A0    0409           db 23, 0, $A0
04025E 64 00       0410           dw sid
040260 49 0D       0411           db $49, 13
040262 01 00       0412           dw oid
040264 00 00       0413   @rx:    dw 0
040266 00 00       0414   @ry:    dw 0
040268 00 00       0415   @rz:    dw 0
04026A 00          0416   @end:   db 0 ; padding
04026B             0417   @done:
04026B             0418   
04026B CD 43 05 04 0419       call vdu_vblank
04026F CD B8 04 04 0420       call vdu_flip
040273 C3 DB 01 04 0421       jp mainloop
040277             0422   
040277 C9          0423       ret
040278             0424   
040278 00 00 00    0425   incx: dl 0
04027B C7 01 00    0426   incy: dl 91*5 ; 32767/360*foo
04027E 00 00 00    0427   incz: dl 0
040281             0428   
040281 00 00 00    0429   rotatex: dl 0
040284 00 00 00    0430   rotatey: dl 0
040287 00 00 00    0431   rotatez: dl 0
04028A             0432   
04028A             0433       include "pingo/src/asm/vdu.asm"
04028A             0001*  ; The following is a high-level list of the VDU sequences that are supported:
04028A             0002*  ; VDU 0: Null (no operation)
04028A             0003*  ; VDU 1: Send next character to “printer” (if “printer” is enabled) §§
04028A             0004*  ; VDU 2: Enable “printer” §§
04028A             0005*  ; VDU 3: Disable “printer” §§
04028A             0006*  ; VDU 4: Write text at text cursor
04028A             0007*  ; VDU 5: Write text at graphics cursor
04028A             0008*  ; VDU 6: Enable screen (opposite of VDU 21) §§
04028A             0009*  ; VDU 7: Make a short beep (BEL)
04028A             0010*  ; VDU 8: Move cursor back one character
04028A             0011*  ; VDU 9: Move cursor forward one character
04028A             0012*  ; VDU 10: Move cursor down one line
04028A             0013*  ; VDU 11: Move cursor up one line
04028A             0014*  ; VDU 12: Clear text area (CLS)
04028A             0015*  ; VDU 13: Carriage return
04028A             0016*  ; VDU 14: Page mode On *
04028A             0017*  ; VDU 15: Page mode Off *
04028A             0018*  ; VDU 16: Clear graphics area (CLG)
04028A             0019*  ; VDU 17, colour: Define text colour (COLOUR)
04028A             0020*  ; VDU 18, mode, colour: Define graphics colour (GCOL mode, colour)
04028A             0021*  ; VDU 19, l, p, r, g, b: Define logical colour (COLOUR l, p / COLOUR l, r, g, b)
04028A             0022*  ; VDU 20: Reset palette and text/graphics colours and drawing modes §§
04028A             0023*  ; VDU 21: Disable screen (turns of VDU command processing, except for VDU 1 and VDU 6) §§
04028A             0024*  ; VDU 22, n: Select screen mode (MODE n)
04028A             0025*  ; VDU 23, n: Re-program display character / System Commands
04028A             0026*  ; VDU 24, left; bottom; right; top;: Set graphics viewport **
04028A             0027*  ; VDU 25, mode, x; y;: PLOT command
04028A             0028*  ; VDU 26: Reset graphics and text viewports **
04028A             0029*  ; VDU 27, char: Output character to screen §
04028A             0030*  ; VDU 28, left, bottom, right, top: Set text viewport **
04028A             0031*  ; VDU 29, x; y;: Set graphics origin
04028A             0032*  ; VDU 30: Home cursor
04028A             0033*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
04028A             0034*  ; VDU 127: Backspace
04028A             0035*  
04028A             0036*  ; VDU 0: Null (no operation)
04028A             0037*  ;     On encountering a VDU 0 command, the VDP will do nothing.
04028A             0038*  ;     This may be useful for padding out a VDU command sequence,
04028A             0039*  ;     or for inserting a placeholder for a command that will be added later.
04028A             0040*  ; inputs: none
04028A             0041*  ; outputs: an empty byte somewhere in VDU
04028A             0042*  ; destroys: a
04028A             0043*  vdu_null:
04028A AF          0044*      xor a
04028B 5B D7       0045*  	rst.lil $10
04028D C9          0046*  	ret
04028E             0047*  
04028E             0048*  ; VDU 1: Send next character to “printer” (if “printer” is enabled) §§
04028E             0049*  ;     Ensures that the next character received by the VDP is sent through to
04028E             0050*  ;     the “printer”, and not to the screen. This is useful for sending control
04028E             0051*  ;     codes to the “printer”, or for sending data to the “printer” that is not
04028E             0052*  ;     intended to be displayed on the screen. It allows characters that would
04028E             0053*  ;     not otherwise normally be sent through to the “printer” to be sent.
04028E             0054*  ;     If the “printer” has not been enabled then this command will just discard
04028E             0055*  ;     the next byte sent to the VDP.
04028E             0056*  ; inputs: a is the ascii code of the character to send
04028E             0057*  ; prerequisites: "printer" must first be activated with VDU 2 (see below)
04028E             0058*  ; outputs: a character on the serial terminal connected to the USB port
04028E             0059*  ;           and the same character on the screen at the current text cursor location
04028E             0060*  ; QUESTION: does it also advance the text cursor?
04028E             0061*  ; destroys: hl, bc
04028E             0062*  vdu_char_to_printer:
04028E 32 9E 02 04 0063*  	ld (@arg),a
040292 21 9D 02 04 0064*  	ld hl,@cmd
040296 01 02 00 00 0065*  	ld bc,@end-@cmd
04029A 5B DF       0066*  	rst.lil $18
04029C C9          0067*  	ret
04029D 01          0068*  @cmd: db 1
04029E 00          0069*  @arg: db 0
04029F             0070*  @end:
04029F             0071*  
04029F             0072*  ; VDU 2: Enable “printer” §§
04029F             0073*  ;     Enables the “printer”.
04029F             0074*  ;     In the context of the Agon platform, the “printer” is a serial
04029F             0075*  ;     terminal that is connected to the VDP’s USB port. Typically
04029F             0076*  ;     this port is used for power, but it can also be used to send and
04029F             0077*  ;     receive data to and from the VDP.
04029F             0078*  ;     When the “printer” is enabled, the VDP will send characters it receives
04029F             0079*  ;     to the “printer” as well as to the screen. It will additionally send
04029F             0080*  ;     through control codes 8-13. To send other control codes to the “printer”,
04029F             0081*  ;     use the VDU 1 command.
04029F             0082*  ;     The VDP will not send through other control codes to the printer,
04029F             0083*  ;     and will will not send through data it receives as part of other commands.
04029F             0084*  vdu_enable_printer:
04029F 3E 02       0085*      ld a,2
0402A1 5B D7       0086*  	rst.lil $10
0402A3 C9          0087*  	ret
0402A4             0088*  
0402A4             0089*  ; VDU 3: Disable “printer” §§
0402A4             0090*  ; inputs: none
0402A4             0091*  ; outputs: a USB port bereft of communication with the VDP
0402A4             0092*  ; destroys: a
0402A4             0093*  vdu_disable_printer:
0402A4 3E 03       0094*      ld a,3
0402A6 5B D7       0095*  	rst.lil $10
0402A8 C9          0096*  	ret
0402A9             0097*  
0402A9             0098*  ; VDU 4: Write text at text cursor
0402A9             0099*  ;     This causes text to be written at the current text cursor position.
0402A9             0100*  ;     This is the default mode for text display.
0402A9             0101*  ;     Text is written using the current text foreground and background colours.
0402A9             0102*  ; inputs: a is the character to write to the screen
0402A9             0103*  ; prerequisites: the text cursor at the intended position on screen
0402A9             0104*  ; outputs: prints the character and moves text cursor right one position
0402A9             0105*  ; destroys: a, hl, bc
0402A9             0106*  vdu_char_to_text_cursor:
0402A9 32 B9 02 04 0107*  	ld (@arg),a
0402AD 21 B8 02 04 0108*  	ld hl,@cmd
0402B1 01 02 00 00 0109*  	ld bc,@end-@cmd
0402B5 5B DF       0110*  	rst.lil $18
0402B7 C9          0111*  	ret
0402B8 04          0112*  @cmd: db 4
0402B9 00          0113*  @arg: db 0
0402BA             0114*  @end:
0402BA             0115*  
0402BA             0116*  ; VDU 5: Write text at graphics cursor
0402BA             0117*  ;     This causes text to be written at the current graphics cursor position.
0402BA             0118*  ;     Using this, characters may be positioned at any graphics coordinate within
0402BA             0119*  ;     the graphics viewport. This is useful for positioning text over graphics,
0402BA             0120*  ;     or for positioning text at a specific location on the screen.
0402BA             0121*  ;     Characters are plotted using the current graphics foreground colour,
0402BA             0122*  ;     using the current graphics foreground plotting mode (see VDU 18).
0402BA             0123*  ;     The character background is transparent, and will not overwrite any
0402BA             0124*  ;     graphics that are already present at the character’s location.
0402BA             0125*  ;     The exception to this is VDU 27, the “delete” character, which backspaces
0402BA             0126*  ;     and deletes as per its usual behaviour, but will erase using the current
0402BA             0127*  ;     graphics background colour.
0402BA             0128*  ; inputs: a is the character to write to the screen
0402BA             0129*  ; prerequisites: the graphics cursor at the intended position on screen
0402BA             0130*  ; outputs: see the name of the function
0402BA             0131*  ; destroys: a, hl, bc
0402BA             0132*  vdu_char_to_gfx_cursor:
0402BA 32 CA 02 04 0133*  	ld (@arg),a
0402BE 21 C9 02 04 0134*  	ld hl,@cmd
0402C2 01 02 00 00 0135*  	ld bc,@end-@cmd
0402C6 5B DF       0136*  	rst.lil $18
0402C8 C9          0137*  	ret
0402C9 05          0138*  @cmd: db 5
0402CA 00          0139*  @arg: db 0
0402CB             0140*  @end:
0402CB             0141*  
0402CB             0142*  ; VDU 6: Enable screen (opposite of VDU 21) §§
0402CB             0143*  ;     This enables the screen, and re-enables VDU command processing,
0402CB             0144*  ;     reversing the effect of VDU 21.
0402CB             0145*  ; inputs: none
0402CB             0146*  ; outputs: a functioning screen and VDU
0402CB             0147*  ; destroys: a
0402CB             0148*  vdu_enable_screen:
0402CB 3E 06       0149*      ld a,6
0402CD 5B D7       0150*  	rst.lil $10
0402CF C9          0151*  	ret
0402D0             0152*  
0402D0             0153*  ; PASSES
0402D0             0154*  ; VDU 7: Make a short beep (BEL)
0402D0             0155*  ;     Plays a short beep sound on audio channel 0. If the audio channel
0402D0             0156*  ;     is already in use, or has been disabled, then this command will have no effect.
0402D0             0157*  ; inputs: none
0402D0             0158*  ; outputs: an unpleasant but thankfully short-lived audio tone
0402D0             0159*  ; destroys: a
0402D0             0160*  vdu_beep:
0402D0 3E 07       0161*      ld a,7
0402D2 5B D7       0162*  	rst.lil $10
0402D4 C9          0163*  	ret
0402D5             0164*  
0402D5             0165*  ; VDU 8: Move cursor back one character
0402D5             0166*  ;     Moves the text cursor one character in the negative “X” direction.
0402D5             0167*  ;     By default, when at the start of a line it will move to the end of
0402D5             0168*  ;     the previous line (as defined by the current text viewport).
0402D5             0169*  ;     If the cursor is also at the top of the screen then the viewport will scroll down.
0402D5             0170*  ;     The cursor remains constrained to the current text viewport.
0402D5             0171*  ;     When in VDU 5 mode and the graphics cursor is active, the viewport will not scroll.
0402D5             0172*  ;     The cursor is just moved left by one character width.
0402D5             0173*  ;     Further behaviour of the cursor can be controlled using the VDU 23,16 command.
0402D5             0174*  ;     It should be noted that as of Console8 VDP 2.5.0, the cursor system does not
0402D5             0175*  ;     support adjusting the direction of the cursor’s X axis, so this command
0402D5             0176*  ;     will move the cursor to the left. This is likely to change in the future.
0402D5             0177*  vdu_cursor_back:
0402D5 3E 08       0178*      ld a,8
0402D7 5B D7       0179*  	rst.lil $10
0402D9 C9          0180*  	ret
0402DA             0181*  
0402DA             0182*  ; VDU 9: Move cursor forward one character
0402DA             0183*  vdu_cursor_forward:
0402DA 3E 09       0184*      ld a,9
0402DC 5B D7       0185*  	rst.lil $10
0402DE C9          0186*  	ret
0402DF             0187*  
0402DF             0188*  ; VDU 10: Move cursor down one line
0402DF             0189*  vdu_cursor_down:
0402DF 3E 0A       0190*      ld a,10
0402E1 5B D7       0191*  	rst.lil $10
0402E3 C9          0192*  	ret
0402E4             0193*  
0402E4             0194*  ; VDU 11: Move cursor up one line
0402E4             0195*  vdu_cursor_up:
0402E4 3E 0B       0196*      ld a,11
0402E6 5B D7       0197*  	rst.lil $10
0402E8 C9          0198*  	ret
0402E9             0199*  
0402E9             0200*  ; VDU 12: Clear text area (CLS)
0402E9             0201*  vdu_cls:
0402E9 3E 0C       0202*      ld a,12
0402EB 5B D7       0203*  	rst.lil $10
0402ED C9          0204*  	ret
0402EE             0205*  
0402EE             0206*  ; VDU 13: Carriage return
0402EE             0207*  vdu_cr:
0402EE 3E 0D       0208*      ld a,13
0402F0 5B D7       0209*  	rst.lil $10
0402F2 C9          0210*  	ret
0402F3             0211*  
0402F3             0212*  ; VDU 14: Page mode On *
0402F3             0213*  vdu_page_on:
0402F3 3E 0E       0214*      ld a,14
0402F5 5B D7       0215*  	rst.lil $10
0402F7 C9          0216*  	ret
0402F8             0217*  
0402F8             0218*  ; VDU 15: Page mode Off *
0402F8             0219*  vdu_page_off:
0402F8 3E 0F       0220*      ld a,15
0402FA 5B D7       0221*  	rst.lil $10
0402FC C9          0222*  	ret
0402FD             0223*  
0402FD             0224*  ; VDU 16: Clear graphics area (CLG)
0402FD             0225*  vdu_clg:
0402FD 3E 10       0226*      ld a,16
0402FF 5B D7       0227*  	rst.lil $10
040301 C9          0228*  	ret
040302             0229*  
040302             0230*  ; VDU 17, colour: Define text colour (COLOUR)
040302             0231*  vdu_colour_text:
040302 32 12 03 04 0232*  	ld (@arg),a
040306 21 11 03 04 0233*  	ld hl,@cmd
04030A 01 02 00 00 0234*  	ld bc,@end-@cmd
04030E 5B DF       0235*  	rst.lil $18
040310 C9          0236*  	ret
040311 11          0237*  @cmd: db 17
040312 00          0238*  @arg: db 0
040313             0239*  @end:
040313             0240*  
040313             0241*  ; VDU 18, mode, colour: Set graphics colour (GCOL mode, colour)
040313             0242*  ; inputs: a is the plotting mode, c is the colour
040313             0243*  ; outputs: a VDU set to put pixels on the screen with the selected mode/colour
040313             0244*  vdu_gcol_fg:
040313             0245*  ; This command will set both the current graphics colour,
040313             0246*  ; and the current graphics plotting mode.
040313             0247*  ; As with VDU 17 the colour number will set the foreground colour
040313             0248*  ; if it is in the range 0-127, or the background colour if it is
040313             0249*  ; in the range 128-255, and will be interpreted in the same manner.
040313             0250*  ; Support for different plotting modes on Agon is currently very limited.
040313             0251*  ; The only fully supported mode is mode 0, which is the default mode.
040313             0252*  ; This mode will plot the given colour at the given graphics coordinate,
040313             0253*  ; and will overwrite any existing graphics at that coordinate. There is
040313             0254*  ; very limited support for mode 4, which will invert the colour of any
040313             0255*  ; existing graphics at the given coordinate, but this is not fully supported
040313             0256*  ; and may not work as expected.
040313             0257*  ; Support for other plotting modes, matching those provided by Acorn’s
040313             0258*  ; original VDU system, may be added in the future.
040313             0259*  ; This command is identical to the BASIC GCOL keyword.
040313 32 28 03 04 0260*  	ld (@mode),a
040317 79          0261*      ld a,c
040318 32 29 03 04 0262*      ld (@col),a
04031C 21 27 03 04 0263*  	ld hl,@cmd
040320 01 03 00 00 0264*  	ld bc,@end-@cmd
040324 5B DF       0265*  	rst.lil $18
040326 C9          0266*  	ret
040327 12          0267*  @cmd: db 18
040328 00          0268*  @mode: db 0
040329 00          0269*  @col: db 0
04032A             0270*  @end:
04032A             0271*  
04032A             0272*  vdu_gcol_bg:
04032A 32 41 03 04 0273*  	ld (@mode),a
04032E 79          0274*      ld a,c
04032F C6 80       0275*      add a,128
040331 32 42 03 04 0276*      ld (@col),a
040335 21 40 03 04 0277*  	ld hl,@cmd
040339 01 03 00 00 0278*  	ld bc,@end-@cmd
04033D 5B DF       0279*  	rst.lil $18
04033F C9          0280*  	ret
040340 12          0281*  @cmd:  db 18
040341 00          0282*  @mode: db 0
040342 00          0283*  @col:  db 0
040343             0284*  @end:
040343             0285*  
040343             0286*  ; VDU 19, l, p, r, g, b: Define logical colour (COLOUR l, p / COLOUR l, r, g, b)
040343             0287*  ;     This command sets the colour palette, by mapping a logical colour
040343             0288*  ;     to a physical colour. This is useful for defining custom colours,
040343             0289*  ;     or for redefining the default colours.
040343             0290*  ;     If the physical colour number is given as 255 then the colour will
040343             0291*  ;     be defined using the red, green, and blue values given. If the physical
040343             0292*  ;     colour number is given as any other value then the colour will be defined
040343             0293*  ;     using the colour palette entry given by that number, up to colour number 63.
040343             0294*  ;     If the physical colour is not 255 then the red, green, and blue values
040343             0295*  ;     must still be provided, but will be ignored.
040343             0296*  ;     The values for red, green and blue must be given in the range 0-255.
040343             0297*  ;     You should note that the physical Agon hardware only supports 64 colours,
040343             0298*  ;     so the actual colour displayed may not be exactly the same as the colour
040343             0299*  ;     requested. The nearest colour will be chosen.
040343             0300*  ;     This command is equivalent to the BASIC COLOUR keyword.
040343             0301*  ; inputs: a=physcial colour, b=logical colour, chl=r,g,b
040343             0302*  vdu_def_log_colour:
040343 32 68 03 04 0303*  	ld (@physical),a
040347 47          0304*      ld b,a
040348 32 67 03 04 0305*      ld (@logical),a
04034C 79          0306*      ld a,c
04034D 32 69 03 04 0307*      ld (@red),a
040351 7C          0308*      ld a,h
040352 32 6A 03 04 0309*      ld (@green),a
040356 7D          0310*      ld a,l
040357 32 6B 03 04 0311*      ld (@blue),a
04035B 21 66 03 04 0312*  	ld hl,@cmd
04035F 01 06 00 00 0313*  	ld bc,@end-@cmd
040363 5B DF       0314*  	rst.lil $18
040365 C9          0315*  	ret
040366 13          0316*  @cmd: db 19
040367 00          0317*  @logical: db 0
040368 00          0318*  @physical: db 0
040369 00          0319*  @red: db 0
04036A 00          0320*  @green: db 0
04036B 00          0321*  @blue: db 0
04036C             0322*  @end:
04036C             0323*  
04036C             0324*  ; VDU 20: Reset palette and text/graphics colours and drawing modes §§
04036C             0325*  vdu_reset_gfx:
04036C 3E 14       0326*      ld a,20
04036E 5B D7       0327*  	rst.lil $10
040370 C9          0328*  	ret
040371             0329*  
040371             0330*  ; VDU 21: Disable screen (turns off VDU command processing,
040371             0331*  ; except for VDU 1 and VDU 6) §§
040371             0332*  vdu_disable_screen:
040371 3E 15       0333*      ld a,21
040373 5B D7       0334*  	rst.lil $10
040375 C9          0335*  	ret
040376             0336*  
040376             0337*  ; VDU 22, n: Select screen mode (MODE n)
040376             0338*  ; Inputs: a, screen mode (8-bit unsigned integer), in the following list:
040376             0339*  ; https://agonconsole8.github.io/agon-docs/VDP---Screen-Modes.html
040376             0340*  ; Screen modes
040376             0341*  ; Modes over 128 are double-buffered
040376             0342*  ; From Version 1.04 or greater
040376             0343*  ; Mode 	Horz 	Vert 	Cols 	Refresh
040376             0344*  ; 0 	640 	480 	16 	    60hz
040376             0345*  ; * 1 	640 	480 	4 	    60hz
040376             0346*  ; 2 	640 	480 	2 	    60hz
040376             0347*  ; 3 	640 	240 	64 	    60hz
040376             0348*  ; 4 	640 	240 	16 	    60hz
040376             0349*  ; 5 	640 	240 	4 	    60hz
040376             0350*  ; 6 	640 	240 	2 	    60hz
040376             0351*  ; ** 7 	n/a 	n/a 	16 	    60hz
040376             0352*  ; 8 	320 	240 	64 	    60hz
040376             0353*  ; 9 	320 	240 	16 	    60hz
040376             0354*  ; 10 	320 	240 	4 	    60hz
040376             0355*  ; 11 	320 	240 	2 	    60hz
040376             0356*  ; 12 	320 	200 	64 	    70hz
040376             0357*  ; 13 	320 	200 	16 	    70hz
040376             0358*  ; 14 	320 	200 	4 	    70hz
040376             0359*  ; 15 	320 	200 	2 	    70hz
040376             0360*  ; 16 	800 	600 	4 	    60hz
040376             0361*  ; 17 	800 	600 	2 	    60hz
040376             0362*  ; 18 	1024 	768 	2 	    60hz
040376             0363*  ; 129 	640 	480 	4 	    60hz
040376             0364*  ; 130 	640 	480 	2 	    60hz
040376             0365*  ; 132 	640 	240 	16 	    60hz
040376             0366*  ; 133 	640 	240 	4 	    60hz
040376             0367*  ; 134 	640 	240 	2 	    60hz
040376             0368*  ; 136 	320 	240 	64 	    60hz
040376             0369*  ; 137 	320 	240 	16 	    60hz
040376             0370*  ; 138 	320 	240 	4 	    60hz
040376             0371*  ; 139 	320 	240 	2 	    60hz
040376             0372*  ; 140 	320 	200 	64 	    70hz
040376             0373*  ; 141 	320 	200 	16 	    70hz
040376             0374*  ; 142 	320 	200 	4 	    70hz
040376             0375*  ; 143 	320 	200 	2 	    70hz
040376             0376*  ; * Mode 1 is the “default” mode, and is the mode that the system will use on startup.
040376             0377*  ; It is also the mode that the system will fall back to use if it was not possible to
040376             0378*  ; change to the requested mode.
040376             0379*  ; ** Mode 7 is the “Teletext” mode, and essentially works in a very similar manner to
040376             0380*  ; the BBC Micro’s Teletext mode, which was also mode 7.
040376             0381*  vdu_set_screen_mode:
040376 32 86 03 04 0382*  	ld (@arg),a
04037A 21 85 03 04 0383*  	ld hl,@cmd
04037E 01 02 00 00 0384*  	ld bc,@end-@cmd
040382 5B DF       0385*  	rst.lil $18
040384 C9          0386*  	ret
040385 16          0387*  @cmd: db 22 ; set screen mode
040386 00          0388*  @arg: db 0  ; screen mode parameter
040387             0389*  @end:
040387             0390*  
040387             0391*  ; VDU 23, n: Re-program display character / System Commands
040387             0392*  ; inputs: a, ascii code; hl, pointer to bitmask data
040387             0393*  vdu_define_character:
040387 32 A3 03 04 0394*  	ld (@ascii),a
04038B 11 A4 03 04 0395*  	ld de,@data
04038F 06 08       0396*  	ld b,8 ; loop counter for 8 bytes of data
040391             0397*  @loop:
040391 7E          0398*  	ld a,(hl)
040392 12          0399*  	ld (de),a
040393 23          0400*  	inc hl
040394 13          0401*  	inc de
040395 10 FA       0402*  	djnz @loop
040397 21 A2 03 04 0403*  	ld hl,@cmd
04039B 01 0A 00 00 0404*  	ld bc,@end-@cmd
04039F 5B DF       0405*  	rst.lil $18
0403A1 C9          0406*  	ret
0403A2 17          0407*  @cmd:   db 23
0403A3 00          0408*  @ascii: db 0
0403A4             0409*  @data:  ds 8
0403AC             0410*  @end:
0403AC             0411*  
0403AC             0412*  ; VDU 24, left; bottom; right; top;: Set graphics viewport
0403AC             0413*  ; NOTE: the order of the y-coordinate parameters are inverted
0403AC             0414*  ; 	because we have turned off logical screen scaling
0403AC             0415*  ; inputs: bc=x0,de=y0,ix=x1,iy=y1
0403AC             0416*  ; outputs; nothing
0403AC             0417*  ; destroys: a might make it out alive
0403AC             0418*  vdu_set_gfx_viewport:
0403AC ED 43 CC 03 0419*      ld (@x0),bc
       04          
0403B1 FD 22 CE 03 0420*      ld (@y1),iy
       04          
0403B6 DD 22 D0 03 0421*  	ld (@x1),ix
       04          
0403BB ED 53 D2 03 0422*  	ld (@y0),de
       04          
0403C0 21 CB 03 04 0423*  	ld hl,@cmd
0403C4 01 09 00 00 0424*  	ld bc,@end-@cmd
0403C8 5B DF       0425*  	rst.lil $18
0403CA C9          0426*  	ret
0403CB 18          0427*  @cmd:   db 24 ; set graphics viewport command
0403CC 00 00       0428*  @x0: 	dw 0x0000 ; set by bc
0403CE 00 00       0429*  @y1: 	dw 0x0000 ; set by iy
0403D0 00 00       0430*  @x1: 	dw 0x0000 ; set by ix
0403D2 00 00       0431*  @y0: 	dw 0x0000 ; set by de
0403D4 00          0432*  @end:   db 0x00	  ; padding
0403D5             0433*  
0403D5             0434*  ; VDU 25, mode, x; y;: PLOT command
0403D5             0435*  ; Implemented in vdu_plot.asm
0403D5             0436*  
0403D5             0437*  ; VDU 26: Reset graphics and text viewports **
0403D5             0438*  vdu_reset_txt_gfx_view:
0403D5 3E 1A       0439*      ld a,26
0403D7 5B D7       0440*  	rst.lil $10
0403D9 C9          0441*  	ret
0403DA             0442*  
0403DA             0443*  ; PASSES
0403DA             0444*  ; VDU 27, char: Output character to screen §
0403DA             0445*  ; inputs: a is the ascii code of the character to draw
0403DA             0446*  vdu_draw_char:
0403DA 32 EA 03 04 0447*  	ld (@arg),a
0403DE 21 E9 03 04 0448*  	ld hl,@cmd
0403E2 01 02 00 00 0449*  	ld bc,@end-@cmd
0403E6 5B DF       0450*  	rst.lil $18
0403E8 C9          0451*  	ret
0403E9 1B          0452*  @cmd: db 27
0403EA 00          0453*  @arg: db 0  ; ascii code of character to draw
0403EB             0454*  @end:
0403EB             0455*  
0403EB             0456*  ; VDU 28, left, bottom, right, top: Set text viewport **
0403EB             0457*  ; MIND THE LITTLE-ENDIANESS
0403EB             0458*  ; inputs: c=left,b=bottom,e=right,d=top
0403EB             0459*  ; outputs; nothing
0403EB             0460*  ; destroys: a might make it out alive
0403EB             0461*  vdu_set_txt_viewport:
0403EB ED 43 01 04 0462*      ld (@lb),bc
       04          
0403F0 ED 53 03 04 0463*  	ld (@rt),de
       04          
0403F5 21 00 04 04 0464*  	ld hl,@cmd
0403F9 01 05 00 00 0465*  	ld bc,@end-@cmd
0403FD 5B DF       0466*  	rst.lil $18
0403FF C9          0467*  	ret
040400 1C          0468*  @cmd:   db 28 ; set text viewport command
040401 00 00       0469*  @lb: 	dw 0x0000 ; set by bc
040403 00 00       0470*  @rt: 	dw 0x0000 ; set by de
040405 00          0471*  @end:   db 0x00	  ; padding
040406             0472*  
040406             0473*  ; PASSES
040406             0474*  ; VDU 29, x; y;: Set graphics origin
040406             0475*  ; inputs: bc,de x,y coordinates
040406             0476*  vdu_set_gfx_origin:
040406 ED 43 1C 04 0477*      ld (@x0),bc
       04          
04040B ED 53 1E 04 0478*      ld (@y0),de
       04          
040410 21 1B 04 04 0479*  	ld hl,@cmd
040414 01 05 00 00 0480*  	ld bc,@end-@cmd
040418 5B DF       0481*  	rst.lil $18
04041A C9          0482*  	ret
04041B 1D          0483*  @cmd:	db 29
04041C 00 00       0484*  @x0: 	dw 0
04041E 00 00       0485*  @y0: 	dw 0
040420 00          0486*  @end: 	db 0 ; padding
040421             0487*  
040421             0488*  ; PASSES
040421             0489*  ; VDU 30: Home cursor
040421             0490*  vdu_home_cursor:
040421 3E 1E       0491*      ld a,30
040423 5B D7       0492*  	rst.lil $10
040425 C9          0493*  	ret
040426             0494*  
040426             0495*  ; PASSES
040426             0496*  ; VDU 31, x, y: Move text cursor to x, y text position (TAB(x, y))
040426             0497*  ; inputs: c=x, b=y 8-bit unsigned integers
040426             0498*  vdu_move_cursor:
040426 ED 43 37 04 0499*      ld (@x0),bc
       04          
04042B 21 36 04 04 0500*  	ld hl,@cmd
04042F 01 03 00 00 0501*  	ld bc,@end-@cmd
040433 5B DF       0502*  	rst.lil $18
040435 C9          0503*  	ret
040436 1F          0504*  @cmd: 	db 31
040437 00          0505*  @x0:	db 0
040438 00          0506*  @y0: 	db 0
040439 00          0507*  @end: 	db 0 ; padding
04043A             0508*  
04043A             0509*  
04043A             0510*  ; VDU 127: Backspace
04043A             0511*  vdu_bksp:
04043A 3E 7F       0512*      ld a,127
04043C 5B D7       0513*  	rst.lil $10
04043E C9          0514*  	ret
04043F             0515*  
04043F             0516*  ; activate a bitmap in preparation to draw it
04043F             0517*  ; inputs: a holding the bitmap index
04043F             0518*  vdu_bmp_select:
04043F 32 51 04 04 0519*  	ld (@bmp),a
040443 21 4E 04 04 0520*  	ld hl,@cmd
040447 01 04 00 00 0521*  	ld bc,@end-@cmd
04044B 5B DF       0522*  	rst.lil $18
04044D C9          0523*  	ret
04044E 17 1B 00    0524*  @cmd: db 23,27,0
040451 00          0525*  @bmp: db 0
040452             0526*  @end:
040452             0527*  
040452             0528*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
040452             0529*  ; inputs: hl=bufferId
040452             0530*  vdu_buff_select:
040452 22 64 04 04 0531*  	ld (@bufferId),hl
040456 21 61 04 04 0532*  	ld hl,@cmd
04045A 01 05 00 00 0533*  	ld bc,@end-@cmd
04045E 5B DF       0534*  	rst.lil $18
040460 C9          0535*  	ret
040461 17 1B 20    0536*  @cmd: db 23,27,0x20
040464 00 00       0537*  @bufferId: dw 0x0000
040466 00          0538*  @end: db 0x00 ; padding
040467             0539*  
040467             0540*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer
040467             0541*  ; inputs: a=format; bc=width; de=height
040467             0542*  ; prerequisites: buffer selected by vdu_bmp_select or vdu_buff_select
040467             0543*  ; formats: https://agonconsole8.github.io/agon-docs/VDP---Bitmaps-API.html
040467             0544*  ; 0 	RGBA8888 (4-bytes per pixel)
040467             0545*  ; 1 	RGBA2222 (1-bytes per pixel)
040467             0546*  ; 2 	Mono/Mask (1-bit per pixel)
040467             0547*  ; 3 	Reserved for internal use by VDP (“native” format)
040467             0548*  vdu_bmp_create:
040467 ED 43 83 04 0549*      ld (@width),bc
       04          
04046C ED 53 85 04 0550*      ld (@height),de
       04          
040471 32 87 04 04 0551*      ld (@fmt),a
040475 21 80 04 04 0552*  	ld hl,@cmd
040479 01 08 00 00 0553*  	ld bc,@end-@cmd
04047D 5B DF       0554*  	rst.lil $18
04047F C9          0555*  	ret
040480 17 1B 21    0556*  @cmd:       db 23,27,0x21
040483 00 00       0557*  @width:     dw 0x0000
040485 00 00       0558*  @height:    dw 0x0000
040487 00          0559*  @fmt:       db 0x00
040488             0560*  @end:
040488             0561*  
040488             0562*  ; Draw a bitmap on the screen
040488             0563*  ; inputs: bc, x-coordinate; de, y-coordinate
040488             0564*  ; prerequisite: bitmap index set by e.g. vdu_bmp_select
040488             0565*  vdu_bmp_draw:
040488 ED 43 A0 04 0566*      ld (@x0),bc
       04          
04048D ED 53 A2 04 0567*      ld (@y0),de
       04          
040492 21 9D 04 04 0568*  	ld hl,@cmd
040496 01 07 00 00 0569*  	ld bc,@end-@cmd
04049A 5B DF       0570*  	rst.lil $18
04049C C9          0571*  	ret
04049D 17 1B 03    0572*  @cmd: db 23,27,3
0404A0 00 00       0573*  @x0:  dw 0x0000
0404A2 00 00       0574*  @y0:  dw 0x0000
0404A4 00          0575*  @end: db 0x00 ; padding
0404A5             0576*  
0404A5             0577*  ; VDU 23, 0, &C0, n: Turn logical screen scaling on and off *
0404A5             0578*  ; inputs: a is scaling mode, 1=on, 0=off
0404A5             0579*  ; note: default setting on boot is scaling ON
0404A5             0580*  vdu_set_scaling:
0404A5 32 B7 04 04 0581*  	ld (@arg),a
0404A9 21 B4 04 04 0582*  	ld hl,@cmd
0404AD 01 04 00 00 0583*  	ld bc,@end-@cmd
0404B1 5B DF       0584*  	rst.lil $18
0404B3 C9          0585*  	ret
0404B4 17 00 C0    0586*  @cmd: db 23,0,0xC0
0404B7 00          0587*  @arg: db 0  ; scaling on/off
0404B8             0588*  @end:
0404B8             0589*  
0404B8             0590*  ; VDU 23, 0, &C3: Swap the screen buffer and/or wait for VSYNC **
0404B8             0591*  ; 	Swap the screen buffer (double-buffered modes only) or wait for VSYNC
0404B8             0592*  ; 	(all modes).
0404B8             0593*  
0404B8             0594*  ; 	This command will swap the screen buffer, if the current screen mode
0404B8             0595*  ; 	is double-buffered, doing so at the next VSYNC. If the current screen
0404B8             0596*  ; 	mode is not double-buffered then this command will wait for the next
0404B8             0597*  ; 	VSYNC signal before returning. This can be used to synchronise the
0404B8             0598*  ; 	screen with the vertical refresh rate of the monitor.
0404B8             0599*  
0404B8             0600*  ; 	Waiting for VSYNC can be useful for ensuring smooth graphical animation,
0404B8             0601*  ; 	as it will prevent tearing of the screen.
0404B8             0602*  ; inputs: none
0404B8             0603*  ; outputs: none
0404B8             0604*  ; destroys: hl, bc
0404B8             0605*  vdu_flip:
0404B8 21 C3 04 04 0606*  	ld hl,@cmd
0404BC 01 03 00 00 0607*  	ld bc,@end-@cmd
0404C0 5B DF       0608*  	rst.lil $18
0404C2 C9          0609*  	ret
0404C3 17 00 C3    0610*  @cmd: db 23,0,0xC3
0404C6             0611*  @end:
0404C6             0612*  
0404C6             0613*  ; Command 64: Compress a buffer
0404C6             0614*  ; VDU 23, 0, &A0, targetBufferId; 64, sourceBufferId;
0404C6             0615*  ; This command will compress the contents of a buffer, replacing the target buffer with the compressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
0404C6             0616*  
0404C6             0617*  
0404C6             0618*  ; Command 65: Decompress a buffer
0404C6             0619*  ; VDU 23, 0, &A0, targetBufferId; 65, sourceBufferId;
0404C6             0620*  ; This command will decompress the contents of a buffer, replacing the target buffer with the decompressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
0404C6             0621*  ; inputs: hl=sourceBufferId/targetBufferId
0404C6             0622*  vdu_decompress_buffer:
0404C6 22 E2 04 04 0623*  	ld (@targetBufferId),hl
0404CA 22 E5 04 04 0624*  	ld (@sourceBufferId),hl
0404CE 3E 41       0625*  	ld a,65
0404D0 32 E4 04 04 0626*  	ld (@cmd1),a ; restore the part of command that got stomped on
0404D4 21 DF 04 04 0627*  	ld hl,@cmd
0404D8 01 08 00 00 0628*  	ld bc,@end-@cmd
0404DC 5B DF       0629*  	rst.lil $18
0404DE C9          0630*  	ret
0404DF 17 00 A0    0631*  @cmd: 	db 23,0,0xA0
0404E2 00 00       0632*  @targetBufferId: dw 0x0000
0404E4 41          0633*  @cmd1:	db 65
0404E5 00 00       0634*  @sourceBufferId: dw 0x0000
0404E7 00          0635*  @end: 	db 0x00 ; padding
0404E8             0636*  
0404E8             0637*  ; Command 65: Decompress a buffer
0404E8             0638*  ; VDU 23, 0, &A0, targetBufferId; 65, sourceBufferId;
0404E8             0639*  ; This command will decompress the contents of a buffer, replacing the target buffer with the decompressed data. Unless the target buffer is the same as the source, the source buffer will be left unchanged.
0404E8             0640*  ; inputs: hl=sourceBufferId/targetBufferId
0404E8             0641*  ; 0x7FFF for the source buffer is just an easy-to remember aribtrary value
0404E8             0642*  vdu_decompress_buffer_different:
0404E8 22 08 05 04 0643*  	ld (@targetBufferId),hl
0404EC 21 FF 7F 00 0644*      ld hl,0x7FFF
0404F0 22 0B 05 04 0645*  	ld (@sourceBufferId),hl
0404F4 3E 41       0646*  	ld a,65
0404F6 32 0A 05 04 0647*  	ld (@cmd1),a ; restore the part of command that got stomped on
0404FA 21 05 05 04 0648*  	ld hl,@cmd
0404FE 01 08 00 00 0649*  	ld bc,@end-@cmd
040502 5B DF       0650*  	rst.lil $18
040504 C9          0651*  	ret
040505 17 00 A0    0652*  @cmd: 	db 23,0,0xA0
040508 00 00       0653*  @targetBufferId: dw 0x0000
04050A 41          0654*  @cmd1:	db 65
04050B 00 00       0655*  @sourceBufferId: dw 0x0000
04050D 00          0656*  @end: 	db 0x00 ; padding
04050E             0657*  
04050E             0658*  ; #### from vdp.asm ####
04050E             0659*  
04050E             0660*  ; https://github.com/breakintoprogram/agon-docs/wiki/VDP
04050E             0661*  ; VDU 23, 7: Scrolling
04050E             0662*  ;     VDU 23, 7, extent, direction, speed: Scroll the screen
04050E             0663*  ; inputs: a, extent; l, direction; h; speed
04050E             0664*  vdu_scroll_down:
04050E 32 23 05 04 0665*  	ld (@extent),a
040512 22 24 05 04 0666*  	ld (@dir),hl ; implicitly populates @speed
040516 21 21 05 04 0667*  	ld hl,@cmd
04051A 01 05 00 00 0668*  	ld bc,@end-@cmd
04051E 5B DF       0669*  	rst.lil $18     ;; Sending command to VDP
040520 C9          0670*  	ret
040521 17 07       0671*  @cmd:       db 23,7
040523 00          0672*  @extent:    db 0x00 ; 0 current text window, 1 entire screen, 2 curr gfx viewport
040524 00          0673*  @dir:       db 0x00 ; 0 right, 1 left, 2 down, 3 up
040525 00          0674*  @speed:     db 0x00 ; pixels
040526 00          0675*  @end:		db 0x00 ; padding
040527             0676*  
040527             0677*  cursor_on:
040527 21 32 05 04 0678*  	ld hl,@cmd
04052B 01 03 00 00 0679*  	ld bc,@end-@cmd
04052F 5B DF       0680*  	rst.lil $18
040531 C9          0681*  	ret
040532             0682*  @cmd:
040532 17 01 01    0683*  	db 23,1,1
040535             0684*  @end:
040535             0685*  
040535             0686*  cursor_off:
040535 21 40 05 04 0687*  	ld hl,@cmd
040539 01 03 00 00 0688*  	ld bc,@end-@cmd
04053D 5B DF       0689*  	rst.lil $18
04053F C9          0690*  	ret
040540             0691*  @cmd:
040540 17 01 00    0692*  	db 23,1,0
040543             0693*  @end:
040543             0694*  
040543 DD E5       0695*  vdu_vblank:		PUSH 	IX			; Wait for VBLANK interrupt
040545             0696*  			MOSCALL	mos_sysvars		; Fetch pointer to system variables
040545 3E 08       0001*M 			LD	A, function
040547 5B CF       0002*M 			RST.LIL	08h
040549 DD 7E 00    0697*  			LD	A, (IX + sysvar_time + 0)
04054C DD BE 00    0698*  @wait:			CP 	A, (IX + sysvar_time + 0)
04054F 28 FB       0699*  			JR	Z, @wait
040551 DD E1       0700*  			POP	IX
040553 C9          0701*  			RET
040554             0702*  
040554             0703*  ; #### from vdu_bmp.asm ####
040554             0704*  ; =========================================================================
040554             0705*  ; Bitmaps
040554             0706*  ; -------------------------------------------------------------------------
040554             0707*  ; VDU 23, 27, 0, n: Select bitmap n
040554             0708*  ; VDU 23, 27, &20, bufferId;: Select bitmap using a 16-bit buffer ID *
040554             0709*  ; VDU 23, 27, 1, w; h; b1, b2 ... bn: Load colour bitmap data into current bitmap
040554             0710*  
040554             0711*  ; VDU 23, 27, 1, n, 0, 0;: Capture screen data into bitmap n *
040554             0712*  ; VDU 23, 27, &21, bitmapId; 0; : same, but to 16-bit buffer ID *
040554             0713*  ; Any PLOT, or VDU 25, style command will push the graphics cursor position -
040554             0714*  ; typically "move" style plot commands are used to define the rectangle.
040554             0715*  ; To be clear, this command should be performed after two "move" style PLOT commands.
040554             0716*  ; inputs: hl; target bufferId
040554             0717*  ; all the following are in 16.8 fixed point format
040554             0718*  ;   ub.c; top-left x coordinate
040554             0719*  ;   ud.e; top-left y coordinate
040554             0720*  ;   ui.x; width
040554             0721*  ;   ui.y; height
040554             0722*  vdu_buff_screen_capture168:
040554 ED 53 8B 05 0723*          ld (@y0-1),de
       04          
040559 ED 43 89 05 0724*          ld (@x0-1),bc
       04          
04055E 3E 44       0725*          ld a,0x44 ; plot_pt+mv_abs
040560 32 89 05 04 0726*          ld (@x0-1),a
040564             0727*  
040564 DD 22 90 05 0728*          ld (@x1),ix
       04          
040569 FD 22 92 05 0729*          ld (@y1),iy
       04          
04056E 3E 17       0730*          ld a,23
040570 32 94 05 04 0731*          ld (@y1+2),a
040574             0732*  
040574 22 97 05 04 0733*          ld (@bufId),hl
040578 AF          0734*          xor a
040579 32 99 05 04 0735*          ld (@bufId+2),a
04057D             0736*  
04057D 21 88 05 04 0737*          ld hl,@begin
040581 01 13 00 00 0738*          ld bc,@end-@begin
040585 5B DF       0739*          rst.lil $18
040587 C9          0740*          ret
040588             0741*  @begin:
040588             0742*  ; absolute move gfx cursor to top-left screen coordinate
040588             0743*  ; VDU 25, mode, x; y;: PLOT command
040588 19 44       0744*          db 25,0x44 ; plot_pt+mv_abs
04058A 40 00       0745*  @x0: 	dw 64
04058C 40 00       0746*  @y0: 	dw 64
04058E             0747*  ; relative move gfx cursor to bottom-right screen coordinate
04058E             0748*  ; VDU 25, mode, x; y;: PLOT command
04058E 19 40       0749*          db 25,0x40 ; plot_pt+mv_rel
040590 0F 00       0750*  @x1: 	dw 15
040592 0F 00       0751*  @y1: 	dw 15
040594             0752*  ; now the main event
040594             0753*  ; VDU 23, 27, &21, bitmapId; 0;
040594 17 1B 21    0754*          db 23,27,0x21
040597 00 20 00 00 0755*  @bufId: dw 0x2000,0x0000
04059B             0756*  @end: ; no padding required
04059B             0757*  
04059B             0758*  vdu_buff_screen_capture_full:
04059B 21 A6 05 04 0759*          ld hl,@begin
04059F 01 13 00 00 0760*          ld bc,@end-@begin
0405A3 5B DF       0761*          rst.lil $18
0405A5 C9          0762*          ret
0405A6             0763*  @begin:
0405A6             0764*  ; absolute move gfx cursor to top-left screen coordinate
0405A6             0765*  ; VDU 25, mode, x; y;: PLOT command
0405A6 19 44       0766*          db 25,0x44 ; plot_pt+mv_abs
0405A8 00 00       0767*  @x0: 	dw 0
0405AA 00 00       0768*  @y0: 	dw 0
0405AC             0769*  ; relative move gfx cursor to bottom-right screen coordinate
0405AC             0770*  ; VDU 25, mode, x; y;: PLOT command
0405AC 19 40       0771*          db 25,0x40 ; plot_pt+mv_rel
0405AE 3F 01       0772*  @x1: 	dw 319
0405B0 EF 00       0773*  @y1: 	dw 239
0405B2             0774*  ; now the main event
0405B2             0775*  ; VDU 23, 27, &21, bitmapId; 0;
0405B2 17 1B 21    0776*          db 23,27,0x21
0405B5 00 20 00 00 0777*  @bufId: dw 0x2000,0x0000
0405B9             0778*  @end: ; no padding required
0405B9             0779*  
0405B9             0780*  vdu_buff_screen_paste_full:
0405B9 21 C4 05 04 0781*          ld hl,@begin
0405BD 01 0B 00 00 0782*          ld bc,@end-@begin
0405C1 5B DF       0783*          rst.lil $18
0405C3 C9          0784*          ret
0405C4             0785*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
0405C4 17 1B 20    0786*  @begin:    db 23,27,0x20
0405C7 00 20       0787*  @bufferId: dw 0x2000
0405C9             0788*  ; VDU 25, mode, x; y;: PLOT command
0405C9 19 ED       0789*             db 25,0xED ; plot_bmp+dr_abs_fg
0405CB 00 00 00 00 0790*             dw 0x0000,0x0000
0405CF             0791*  @end: ; no padding required
0405CF             0792*  
0405CF             0793*  vdu_buff_screen_capture_tiles:
0405CF 21 DA 05 04 0794*          ld hl,@begin
0405D3 01 13 00 00 0795*          ld bc,@end-@begin
0405D7 5B DF       0796*          rst.lil $18
0405D9 C9          0797*          ret
0405DA             0798*  @begin:
0405DA             0799*  ; absolute move gfx cursor to top-left screen coordinate
0405DA             0800*  ; VDU 25, mode, x; y;: PLOT command
0405DA 19 44       0801*          db 25,0x44 ; plot_pt+mv_abs
0405DC 00 00       0802*  @x0: 	dw 0
0405DE 00 00       0803*  @y0: 	dw 0
0405E0             0804*  ; relative move gfx cursor to bottom-right screen coordinate
0405E0             0805*  ; VDU 25, mode, x; y;: PLOT command
0405E0 19 40       0806*          db 25,0x40 ; plot_pt+mv_rel
0405E2 FF 00       0807*  @x1: 	dw 319-64
0405E4 EF 00       0808*  @y1: 	dw 239
0405E6             0809*  ; now the main event
0405E6             0810*  ; VDU 23, 27, &21, bitmapId; 0;
0405E6 17 1B 21    0811*          db 23,27,0x21
0405E9 00 20 00 00 0812*  @bufId: dw 0x2000,0x0000
0405ED             0813*  @end: ; no padding required
0405ED             0814*  
0405ED             0815*  vdu_buff_screen_paste_tiles:
0405ED 21 F8 05 04 0816*          ld hl,@begin
0405F1 01 0B 00 00 0817*          ld bc,@end-@begin
0405F5 5B DF       0818*          rst.lil $18
0405F7 C9          0819*          ret
0405F8             0820*  ; VDU 23, 27, &20, bufferId; : Select bitmap (using a buffer ID)
0405F8 17 1B 20    0821*  @begin:    db 23,27,0x20
0405FB 00 20       0822*  @bufferId: dw 0x2000
0405FD             0823*  ; VDU 25, mode, x; y;: PLOT command
0405FD 19 ED       0824*             db 25,0xED ; plot_bmp+dr_abs_fg
0405FF 00 00 01 00 0825*             dw 0x0000,0x0001
040603             0826*  @end: ; no padding required
040603             0827*  
040603             0828*  ; VDU 23, 27, 2, w; h; col1; col2;: Create a solid colour rectangular bitmap
040603             0829*  ; VDU 23, 27, 3, x; y;: Draw current bitmap on screen at pixel position x, y
040603             0830*  ; VDU 23, 27, &21, w; h; format: Create bitmap from selected buffer *
040603             0831*  ; Value	Meaning
040603             0832*  ; 0	RGBA8888 (4-bytes per pixel)
040603             0833*  ; 1	RGBA2222 (1-bytes per pixel)
040603             0834*  ; 2	Mono/Mask (1-bit per pixel)
040603             0835*  ; 3	Reserved for internal use by VDP ("native" format)VDP.
040603             0836*  ;     They have some significant limitations, and are not intended for general use.
040603             0837*  
040603             0838*  ; =========================================================================
040603             0839*  ; Sprites
040603             0840*  ; -------------------------------------------------------------------------
040603             0841*  ; VDU 23, 27, 4, n: Select sprite n
040603             0842*  ; VDU 23, 27, 5: Clear frames in current sprite
040603             0843*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
040603             0844*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
040603             0845*  ; VDU 23, 27, 7, n: Activate n sprites
040603             0846*  ; VDU 23, 27, 8: Select next frame of current sprite
040603             0847*  ; VDU 23, 27, 9: Select previous frame of current sprite
040603             0848*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
040603             0849*  ; VDU 23, 27, 11: Show current sprite
040603             0850*  ; VDU 23, 27, 12: Hide current sprite
040603             0851*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
040603             0852*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
040603             0853*  ; VDU 23, 27, 15: Update the sprites in the GPU
040603             0854*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
040603             0855*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
040603             0856*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
040603             0857*  
040603             0858*  ; =========================================================================
040603             0859*  ; Mouse cursor
040603             0860*  ; -------------------------------------------------------------------------
040603             0861*  ; VDU 23, 27, &40, hotX, hotY: Setup a mouse cursor with a hot spot at hotX, hotY
040603             0862*  
040603             0863*  ; #### from vdu_plot.asm ####
040603             0864*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
040603             0865*  ; PLOT code 	(Decimal) 	Effect
040603             0866*  ; &00-&07 	0-7 	Solid line, includes both ends
040603             0867*  plot_sl_both: equ 0x00
040603             0868*  
040603             0869*  ; &08-&0F 	8-15 	Solid line, final point omitted
040603             0870*  plot_sl_first: equ 0x08
040603             0871*  
040603             0872*  ; &10-&17 	16-23 	Not supported (Dot-dash line, includes both ends, pattern restarted)
040603             0873*  ; &18-&1F 	24-31 	Not supported (Dot-dash line, first point omitted, pattern restarted)
040603             0874*  
040603             0875*  ; &20-&27 	32-39 	Solid line, first point omitted
040603             0876*  plot_sl_last: equ 0x20
040603             0877*  
040603             0878*  ; &28-&2F 	40-47 	Solid line, both points omitted
040603             0879*  plot_sl_none: equ 0x28
040603             0880*  
040603             0881*  ; &30-&37 	48-55 	Not supported (Dot-dash line, first point omitted, pattern continued)
040603             0882*  ; &38-&3F 	56-63 	Not supported (Dot-dash line, both points omitted, pattern continued)
040603             0883*  
040603             0884*  ; &40-&47 	64-71 	Point plot
040603             0885*  plot_pt: equ 0x40
040603             0886*  
040603             0887*  ; &48-&4F 	72-79 	Line fill left and right to non-background §§
040603             0888*  plot_lf_lr_non_bg: equ 0x48
040603             0889*  
040603             0890*  ; &50-&57 	80-87 	Triangle fill
040603             0891*  plot_tf: equ 0x50
040603             0892*  
040603             0893*  ; &58-&5F 	88-95 	Line fill right to background §§
040603             0894*  plot_lf_r_bg: equ 0x58
040603             0895*  
040603             0896*  ; &60-&67 	96-103 	Rectangle fill
040603             0897*  plot_rf: equ 0x60
040603             0898*  
040603             0899*  ; &68-&6F 	104-111 	Line fill left and right to foreground §§
040603             0900*  plot_lf_lr_fg: equ 0x60
040603             0901*  
040603             0902*  ; &70-&77 	112-119 	Parallelogram fill
040603             0903*  plot_pf: equ 0x70
040603             0904*  
040603             0905*  ; &78-&7F 	120-127 	Line fill right to non-foreground §§
040603             0906*  plot_lf_r_non_fg: equ 0x78
040603             0907*  
040603             0908*  ; &80-&87 	128-135 	Not supported (Flood until non-background)
040603             0909*  ; &88-&8F 	136-143 	Not supported (Flood until foreground)
040603             0910*  
040603             0911*  ; &90-&97 	144-151 	Circle outline
040603             0912*  plot_co: equ 0x90
040603             0913*  
040603             0914*  ; &98-&9F 	152-159 	Circle fill
040603             0915*  plot_cf: equ 0x98
040603             0916*  
040603             0917*  ; &A0-&A7 	160-167 	Not supported (Circular arc)
040603             0918*  ; &A8-&AF 	168-175 	Not supported (Circular segment)
040603             0919*  ; &B0-&B7 	176-183 	Not supported (Circular sector)
040603             0920*  
040603             0921*  ; &B8-&BF 	184-191 	Rectangle copy/move
040603             0922*  plot_rcm: equ 0xB8
040603             0923*  
040603             0924*  ; &C0-&C7 	192-199 	Not supported (Ellipse outline)
040603             0925*  ; &C8-&CF 	200-207 	Not supported (Ellipse fill)
040603             0926*  ; &D0-&D7 	208-215 	Not defined
040603             0927*  ; &D8-&DF 	216-223 	Not defined
040603             0928*  ; &E0-&E7 	224-231 	Not defined
040603             0929*  
040603             0930*  ; &E8-&EF 	232-239 	Bitmap plot §
040603             0931*  plot_bmp: equ 0xE8
040603             0932*  
040603             0933*  ; &F0-&F7 	240-247 	Not defined
040603             0934*  ; &F8-&FF 	248-255 	Not defined
040603             0935*  
040603             0936*  ; § Support added in Agon Console8 VDP 2.1.0 §§ Support added in
040603             0937*  ; Agon Console8 VDP 2.2.0
040603             0938*  
040603             0939*  ; Within each group of eight plot codes, the effects are as follows:
040603             0940*  ; Plot code 	Effect
040603             0941*  ; 0 	Move relative
040603             0942*  mv_rel: equ 0
040603             0943*  
040603             0944*  ; 1 	Plot relative in current foreground colour
040603             0945*  dr_rel_fg: equ 1
040603             0946*  
040603             0947*  ; 2 	Not supported (Plot relative in logical inverse colour)
040603             0948*  ; 3 	Plot relative in current background colour
040603             0949*  dr_rel_bg: equ 3
040603             0950*  
040603             0951*  ; 4 	Move absolute
040603             0952*  mv_abs: equ 4
040603             0953*  
040603             0954*  ; 5 	Plot absolute in current foreground colour
040603             0955*  dr_abs_fg: equ 5
040603             0956*  
040603             0957*  ; 6 	Not supported (Plot absolute in logical inverse colour)
040603             0958*  ; 7 	Plot absolute in current background colour
040603             0959*  dr_abs_bg: equ 7
040603             0960*  
040603             0961*  ; Codes 0-3 use the position data provided as part of the command
040603             0962*  ; as a relative position, adding the position given to the current
040603             0963*  ; graphical cursor position. Codes 4-7 use the position data provided
040603             0964*  ; as part of the command as an absolute position, setting the current
040603             0965*  ; graphical cursor position to the position given.
040603             0966*  
040603             0967*  ; Codes 2 and 6 on Acorn systems plot using a logical inverse of the
040603             0968*  ; current pixel colour. These operations cannot currently be supported
040603             0969*  ; by the graphics system the Agon VDP uses, so these codes are not
040603             0970*  ; supported. Support for these codes may be added in a future version
040603             0971*  ; of the VDP firmware.
040603             0972*  
040603             0973*  ; 16 colour palette constants
040603             0974*  c_black: equ 0
040603             0975*  c_red_dk: equ 1
040603             0976*  c_green_dk: equ 2
040603             0977*  c_yellow_dk: equ 3
040603             0978*  c_blue_dk: equ 4
040603             0979*  c_magenta_dk: equ 5
040603             0980*  c_cyan_dk: equ 6
040603             0981*  c_grey: equ 7
040603             0982*  c_grey_dk: equ 8
040603             0983*  c_red: equ 9
040603             0984*  c_green: equ 10
040603             0985*  c_yellow: equ 11
040603             0986*  c_blue: equ 12
040603             0987*  c_magenta: equ 13
040603             0988*  c_cyan: equ 14
040603             0989*  c_white: equ 15
040603             0990*  
040603             0991*  ; VDU 25, mode, x; y;: PLOT command
040603             0992*  ; inputs: a=mode, bc=x0, de=y0
040603             0993*  vdu_plot:
040603 32 1D 06 04 0994*      ld (@mode),a
040607 ED 43 1E 06 0995*      ld (@x0),bc
       04          
04060C ED 53 20 06 0996*      ld (@y0),de
       04          
040611 21 1C 06 04 0997*  	ld hl,@cmd
040615 01 06 00 00 0998*  	ld bc,@end-@cmd
040619 5B DF       0999*  	rst.lil $18
04061B C9          1000*  	ret
04061C 19          1001*  @cmd:   db 25
04061D 00          1002*  @mode:  db 0
04061E 00 00       1003*  @x0: 	dw 0
040620 00 00       1004*  @y0: 	dw 0
040622 00          1005*  @end:   db 0 ; extra byte to soak up deu
040623             1006*  
040623             1007*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
040623             1008*  ; &E8-&EF 	232-239 	Bitmap plot §
040623             1009*  ; VDU 25, mode, x; y;: PLOT command
040623             1010*  ; inputs: bc=x0, de=y0
040623             1011*  ; prerequisites: vdu_buff_select
040623             1012*  vdu_plot_bmp:
040623 ED 43 3A 06 1013*      ld (@x0),bc
       04          
040628 ED 53 3C 06 1014*      ld (@y0),de
       04          
04062D 21 38 06 04 1015*  	ld hl,@cmd
040631 01 06 00 00 1016*  	ld bc,@end-@cmd
040635 5B DF       1017*  	rst.lil $18
040637 C9          1018*  	ret
040638 19          1019*  @cmd:   db 25
040639 ED          1020*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
04063A 00 00       1021*  @x0: 	dw 0x0000
04063C 00 00       1022*  @y0: 	dw 0x0000
04063E 00          1023*  @end:   db 0x00 ; padding
04063F             1024*  
04063F             1025*  ; https://agonconsole8.github.io/agon-docs/VDP---PLOT-Commands.html
04063F             1026*  ; &E8-&EF 	232-239 	Bitmap plot §
04063F             1027*  ; VDU 25, mode, x; y;: PLOT command
04063F             1028*  ; inputs: bc=x0, de=y0
04063F             1029*  ; USING 16.8 FIXED POINT COORDINATES
04063F             1030*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
04063F             1031*  ;   the fractional portiion of the inputs are truncated
04063F             1032*  ;   leaving only the 16-bit integer portion
04063F             1033*  ; prerequisites: vdu_buff_select
04063F             1034*  vdu_plot_bmp168:
04063F             1035*  ; populate in the reverse of normal to keep the
04063F             1036*  ; inputs from stomping on each other
04063F ED 53 5D 06 1037*      ld (@y0-1),de
       04          
040644 ED 43 5B 06 1038*      ld (@x0-1),bc
       04          
040649 3E ED       1039*      ld a,plot_bmp+dr_abs_fg ; 0xED
04064B 32 5B 06 04 1040*      ld (@mode),a ; restore the mode byte that got stomped on by bcu
04064F 21 5A 06 04 1041*  	ld hl,@cmd
040653 01 06 00 00 1042*  	ld bc,@end-@cmd
040657 5B DF       1043*  	rst.lil $18
040659 C9          1044*  	ret
04065A 19          1045*  @cmd:   db 25
04065B ED          1046*  @mode:  db plot_bmp+dr_abs_fg ; 0xED
04065C 00 00       1047*  @x0: 	dw 0x0000
04065E 00 00       1048*  @y0: 	dw 0x0000
040660             1049*  @end:  ; no padding required b/c we shifted de right
040660             1050*  
040660             1051*  ; draw a filled rectangle
040660             1052*  vdu_plot_rf:
040660 ED 43 87 06 1053*      ld (@x0),bc
       04          
040665 ED 53 89 06 1054*      ld (@y0),de
       04          
04066A DD 22 8D 06 1055*      ld (@x1),ix
       04          
04066F FD 22 8F 06 1056*      ld (@y1),iy
       04          
040674 3E 19       1057*      ld a,25 ; we have to reload the 2nd plot command
040676 32 8B 06 04 1058*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
04067A 21 85 06 04 1059*  	ld hl,@cmd0
04067E 01 0C 00 00 1060*  	ld bc,@end-@cmd0
040682 5B DF       1061*  	rst.lil $18
040684 C9          1062*      ret
040685 19          1063*  @cmd0:  db 25 ; plot
040686 04          1064*  @arg0:  db plot_sl_both+mv_abs
040687 00 00       1065*  @x0:    dw 0x0000
040689 00 00       1066*  @y0:    dw 0x0000
04068B 19          1067*  @cmd1:  db 25 ; plot
04068C 65          1068*  @arg1:  db plot_rf+dr_abs_fg
04068D 00 00       1069*  @x1:    dw 0x0000
04068F 00 00       1070*  @y1:    dw 0x0000
040691 00          1071*  @end:   db 0x00 ; padding
040692             1072*  
040692             1073*  ; draw a filled circle
040692             1074*  vdu_plot_cf:
040692 ED 43 B9 06 1075*      ld (@x0),bc
       04          
040697 ED 53 BB 06 1076*      ld (@y0),de
       04          
04069C DD 22 BF 06 1077*      ld (@x1),ix
       04          
0406A1 FD 22 C1 06 1078*      ld (@y1),iy
       04          
0406A6 3E 19       1079*      ld a,25 ; we have to reload the 2nd plot command
0406A8 32 BD 06 04 1080*      ld (@cmd1),a ; because the 24-bit y0 load stomped on it
0406AC 21 B7 06 04 1081*  	ld hl,@cmd0
0406B0 01 0C 00 00 1082*  	ld bc,@end-@cmd0
0406B4 5B DF       1083*  	rst.lil $18
0406B6 C9          1084*      ret
0406B7 19          1085*  @cmd0:  db 25 ; plot
0406B8 04          1086*  @arg0:  db plot_sl_both+mv_abs
0406B9 00 00       1087*  @x0:    dw 0x0000
0406BB 00 00       1088*  @y0:    dw 0x0000
0406BD 19          1089*  @cmd1:  db 25 ; plot
0406BE 9D          1090*  @arg1:  db plot_cf+dr_abs_fg
0406BF 00 00       1091*  @x1:    dw 0x0000
0406C1 00 00       1092*  @y1:    dw 0x0000
0406C3 00          1093*  @end:   db 0x00 ; padding
0406C4             1094*  
0406C4             1095*  ; #### from vdu_sprites.asm ####
0406C4             1096*  ; ; https://github.com/AgonConsole8/agon-docs/blob/main/VDP---Bitmaps-API.md
0406C4             1097*  ; the VDP can support up to 256 sprites. They must be defined
0406C4             1098*  ; contiguously, and so the first sprite is sprite 0.
0406C4             1099*  ; (In contrast, bitmaps can have any ID from 0 to 65534.)
0406C4             1100*  ; Once a selection of sprites have been defined, you can activate
0406C4             1101*  ; them using the VDU 23, 27, 7, n command, where n is the number
0406C4             1102*  ; of sprites to activate. This will activate the first n sprites,
0406C4             1103*  ; starting with sprite 0. All sprites from 0 to n-1 must be defined.
0406C4             1104*  
0406C4             1105*  ; A single sprite can have multiple "frames", referring to
0406C4             1106*  ; different bitmaps.
0406C4             1107*  ; (These bitmaps do not need to be the same size.)
0406C4             1108*  ; This allows a sprite to include an animation sequence,
0406C4             1109*  ; which can be stepped through one frame at a time, or picked
0406C4             1110*  ; in any order.
0406C4             1111*  
0406C4             1112*  ; Any format of bitmap can be used as a sprite frame. It should
0406C4             1113*  ; be noted however that "native" format bitmaps are not
0406C4             1114*  ; recommended for use as sprite frames, as they cannot get
0406C4             1115*  ; erased from the screen. (As noted above, the "native" bitmap
0406C4             1116*  ; format is not really intended for general use.) This is part
0406C4             1117*  ; of why from Agon Console8 VDP 2.6.0 bitmaps captured from the
0406C4             1118*  ; screen are now stored in RGBA2222 format.
0406C4             1119*  
0406C4             1120*  ; An "active" sprite can be hidden, so it will stop being drawn,
0406C4             1121*  ; and then later shown again.
0406C4             1122*  
0406C4             1123*  ; Moving sprites around the screen is done by changing the
0406C4             1124*  ; position of the sprite. This can be done either by setting
0406C4             1125*  ; the absolute position of the sprite, or by moving the sprite
0406C4             1126*  ; by a given number of pixels. (Sprites are positioned using
0406C4             1127*  ; pixel coordinates, and not by the logical OS coordinate system.)
0406C4             1128*  ; In the current sprite system, sprites will not update their
0406C4             1129*  ; position on-screen until either another drawing operation is
0406C4             1130*  ; performed or an explicit VDU 23, 27, 15 command is performed.
0406C4             1131*  
0406C4             1132*  ; Here are the sprite commands:
0406C4             1133*  ;
0406C4             1134*  ; VDU 23, 27, 4,  n: Select sprite n
0406C4             1135*  ; inputs: a is the 8-bit sprite id
0406C4             1136*  ; vdu_sprite_select:
0406C4             1137*  
0406C4             1138*  ; VDU 23, 27, 5:  Clear frames in current sprite
0406C4             1139*  ; inputs: none
0406C4             1140*  ; prerequisites: vdu_sprite_select
0406C4             1141*  ; vdu_sprite_clear_frames:
0406C4             1142*  
0406C4             1143*  ; VDU 23, 27, 6,  n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
0406C4             1144*  ; inputs: a is the 8-bit bitmap number
0406C4             1145*  ; prerequisites: vdu_sprite_select
0406C4             1146*  ; vdu_sprite_add_bmp:
0406C4             1147*  
0406C4             1148*  ; VDU 23, 27, 7,  n: Activate n sprites
0406C4             1149*  ; inputs: a is the number of sprites to activate
0406C4             1150*  ; vdu_sprite_activate:
0406C4             1151*  
0406C4             1152*  ; VDU 23, 27, 8:  Select next frame of current sprite
0406C4             1153*  ; inputs: none
0406C4             1154*  ; prerequisites: vdu_sprite_select
0406C4             1155*  ; vdu_sprite_next_frame:
0406C4             1156*  
0406C4             1157*  ; VDU 23, 27, 9:  Select previous frame of current sprite
0406C4             1158*  ; inputs: none
0406C4             1159*  ; prerequisites: vdu_sprite_select
0406C4             1160*  ; vdu_sprite_prev_frame:
0406C4             1161*  
0406C4             1162*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
0406C4             1163*  ; inputs: a is frame number to select
0406C4             1164*  ; prerequisites: vdu_sprite_select
0406C4             1165*  ; vdu_sprite_select_frame:
0406C4             1166*  
0406C4             1167*  ; VDU 23, 27, 11: Show current sprite
0406C4             1168*  ; inputs: none
0406C4             1169*  ; prerequisites: vdu_sprite_select
0406C4             1170*  ; vdu_sprite_show:
0406C4             1171*  
0406C4             1172*  ; VDU 23, 27, 12: Hide current sprite
0406C4             1173*  ; inputs: none
0406C4             1174*  ; prerequisites: vdu_sprite_select
0406C4             1175*  ; vdu_sprite_hide:
0406C4             1176*  
0406C4             1177*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
0406C4             1178*  ; inputs: bc is x coordinate, de is y coordinate
0406C4             1179*  ; prerequisites: vdu_sprite_select
0406C4             1180*  ; vdu_sprite_move_abs:
0406C4             1181*  ;
0406C4             1182*  ; USING 16.8 FIXED POINT COORDINATES
0406C4             1183*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
0406C4             1184*  ;   the fractional portiion of the inputs are truncated
0406C4             1185*  ;   leaving only the 16-bit integer portion
0406C4             1186*  ; prerequisites: vdu_sprite_select
0406C4             1187*  ; vdu_sprite_move_abs168:
0406C4             1188*  
0406C4             1189*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
0406C4             1190*  ; inputs: bc is x coordinate, de is y coordinate
0406C4             1191*  ; prerequisites: vdu_sprite_select
0406C4             1192*  ; vdu_sprite_move_rel:
0406C4             1193*  ;
0406C4             1194*  ; USING 16.8 FIXED POINT COORDINATES
0406C4             1195*  ; inputs: ub.c is dx, ud.e is dy
0406C4             1196*  ;   the fractional portiion of the inputs are truncated
0406C4             1197*  ;   leaving only the 16-bit integer portion
0406C4             1198*  ; prerequisites: vdu_sprite_select
0406C4             1199*  ; vdu_sprite_move_rel168:
0406C4             1200*  
0406C4             1201*  ; VDU 23, 27, 15: Update the sprites in the GPU
0406C4             1202*  ; inputs: none
0406C4             1203*  ; vdu_sprite_update:
0406C4             1204*  
0406C4             1205*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
0406C4             1206*  ; inputs: none
0406C4             1207*  ; vdu_sprite_bmp_reset:
0406C4             1208*  
0406C4             1209*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
0406C4             1210*  ; inputs: none
0406C4             1211*  ; vdu_sprite_reset:
0406C4             1212*  
0406C4             1213*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
0406C4             1214*  ; inputs: a is the GCOL paint mode
0406C4             1215*  ; prerequisites: vdu_sprite_select
0406C4             1216*  ; vdu_sprite_set_gcol:
0406C4             1217*  
0406C4             1218*  ; VDU 23, 27, &26, n;: Add bitmap n as a frame to current sprite using a 16-bit buffer ID
0406C4             1219*  ; inputs: hl=bufferId
0406C4             1220*  ; prerequisites: vdu_sprite_select
0406C4             1221*  ; vdu_sprite_add_buff:
0406C4             1222*  
0406C4             1223*  @dummy_label: ; dummy label to serve as a break from the above comments and the below code
0406C4             1224*  
0406C4             1225*  ; VDU 23, 27, 4, n: Select sprite n
0406C4             1226*  ; inputs: a is the 8-bit sprite id
0406C4             1227*  vdu_sprite_select:
0406C4 32 D6 06 04 1228*      ld (@sprite),a
0406C8 21 D3 06 04 1229*      ld hl,@cmd
0406CC 01 04 00 00 1230*      ld bc,@end-@cmd
0406D0 5B DF       1231*      rst.lil $18
0406D2 C9          1232*      ret
0406D3 17 1B 04    1233*  @cmd:    db 23,27,4
0406D6 00          1234*  @sprite: db 0x00
0406D7             1235*  @end:
0406D7             1236*  
0406D7             1237*  ; VDU 23, 27, 5: Clear frames in current sprite
0406D7             1238*  ; inputs: none
0406D7             1239*  ; prerequisites: vdu_sprite_select
0406D7             1240*  vdu_sprite_clear_frames:
0406D7 21 E2 06 04 1241*      ld hl,@cmd
0406DB 01 03 00 00 1242*      ld bc,@end-@cmd
0406DF 5B DF       1243*      rst.lil $18
0406E1 C9          1244*      ret
0406E2 17 1B 05    1245*  @cmd: db 23,27,5
0406E5             1246*  @end:
0406E5             1247*  
0406E5             1248*  ; VDU 23, 27, 6, n: Add bitmap n as a frame to current sprite (where bitmap's buffer ID is 64000+n)
0406E5             1249*  ; inputs: a is the 8-bit bitmap number
0406E5             1250*  ; prerequisites: vdu_sprite_select
0406E5             1251*  vdu_sprite_add_bmp:
0406E5 32 F7 06 04 1252*      ld (@bmp),a
0406E9 21 F4 06 04 1253*      ld hl,@cmd
0406ED 01 04 00 00 1254*      ld bc,@end-@cmd
0406F1 5B DF       1255*      rst.lil $18
0406F3 C9          1256*      ret
0406F4 17 1B 06    1257*  @cmd: db 23,27,6
0406F7 00          1258*  @bmp: db 0x00
0406F8             1259*  @end:
0406F8             1260*  
0406F8             1261*  ; VDU 23, 27, 7, n: Activate n sprites
0406F8             1262*  ; inputs: a is the number of sprites to activate
0406F8             1263*  vdu_sprite_activate:
0406F8 32 0A 07 04 1264*      ld (@num),a
0406FC 21 07 07 04 1265*      ld hl,@cmd
040700 01 04 00 00 1266*      ld bc,@end-@cmd
040704 5B DF       1267*      rst.lil $18
040706 C9          1268*      ret
040707 17 1B 07    1269*  @cmd: db 23,27,7
04070A 00          1270*  @num: db 0x00
04070B             1271*  @end:
04070B             1272*  
04070B             1273*  ; VDU 23, 27, 8: Select next frame of current sprite
04070B             1274*  ; inputs: none
04070B             1275*  ; prerequisites: vdu_sprite_select
04070B             1276*  vdu_sprite_next_frame:
04070B 21 16 07 04 1277*      ld hl,@cmd
04070F 01 03 00 00 1278*      ld bc,@end-@cmd
040713 5B DF       1279*      rst.lil $18
040715 C9          1280*      ret
040716 17 1B 08    1281*  @cmd: db 23,27,8
040719             1282*  @end:
040719             1283*  
040719             1284*  ; VDU 23, 27, 9: Select previous frame of current sprite
040719             1285*  ; inputs: none
040719             1286*  ; prerequisites: vdu_sprite_select
040719             1287*  vdu_sprite_prev_frame:
040719 21 24 07 04 1288*      ld hl,@cmd
04071D 01 03 00 00 1289*      ld bc,@end-@cmd
040721 5B DF       1290*      rst.lil $18
040723 C9          1291*      ret
040724 17 1B 09    1292*  @cmd: db 23,27,9
040727             1293*  @end:
040727             1294*  
040727             1295*  ; VDU 23, 27, 10, n: Select the nth frame of current sprite
040727             1296*  ; inputs: a is frame number to select
040727             1297*  ; prerequisites: vdu_sprite_select
040727             1298*  vdu_sprite_select_frame:
040727 32 39 07 04 1299*      ld (@frame),a
04072B 21 36 07 04 1300*      ld hl,@cmd
04072F 01 04 00 00 1301*      ld bc,@end-@cmd
040733 5B DF       1302*      rst.lil $18
040735 C9          1303*      ret
040736 17 1B 0A    1304*  @cmd:    db 23,27,10
040739 00          1305*  @frame:  db 0x00
04073A             1306*  @end:
04073A             1307*  
04073A             1308*  ; VDU 23, 27, 11: Show current sprite
04073A             1309*  ; inputs: none
04073A             1310*  ; prerequisites: vdu_sprite_select
04073A             1311*  vdu_sprite_show:
04073A 21 45 07 04 1312*      ld hl,@cmd
04073E 01 03 00 00 1313*      ld bc,@end-@cmd
040742 5B DF       1314*      rst.lil $18
040744 C9          1315*      ret
040745 17 1B 0B    1316*  @cmd: db 23,27,11
040748             1317*  @end:
040748             1318*  
040748             1319*  ; VDU 23, 27, 12: Hide current sprite
040748             1320*  ; inputs: none
040748             1321*  ; prerequisites: vdu_sprite_select
040748             1322*  vdu_sprite_hide:
040748 21 53 07 04 1323*      ld hl,@cmd
04074C 01 03 00 00 1324*      ld bc,@end-@cmd
040750 5B DF       1325*      rst.lil $18
040752 C9          1326*      ret
040753 17 1B 0C    1327*  @cmd: db 23,27,12
040756             1328*  @end:
040756             1329*  
040756             1330*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
040756             1331*  ; inputs: bc is x coordinate, de is y coordinate
040756             1332*  ; prerequisites: vdu_sprite_select
040756             1333*  vdu_sprite_move_abs:
040756 ED 43 6E 07 1334*      ld (@xpos),bc
       04          
04075B ED 53 70 07 1335*      ld (@ypos),de
       04          
040760 21 6B 07 04 1336*      ld hl,@cmd
040764 01 07 00 00 1337*      ld bc,@end-@cmd
040768 5B DF       1338*      rst.lil $18
04076A C9          1339*      ret
04076B 17 1B 0D    1340*  @cmd:  db 23,27,13
04076E 00 00       1341*  @xpos: dw 0x0000
040770 00 00       1342*  @ypos: dw 0x0000
040772 00          1343*  @end:  db 0x00 ; padding
040773             1344*  
040773             1345*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
040773             1346*  ; inputs: bc is x coordinate, de is y coordinate
040773             1347*  ; prerequisites: vdu_sprite_select
040773             1348*  vdu_sprite_move_rel:
040773 ED 43 8B 07 1349*      ld (@dx),bc
       04          
040778 ED 53 8D 07 1350*      ld (@dy),de
       04          
04077D 21 88 07 04 1351*      ld hl,@cmd
040781 01 07 00 00 1352*      ld bc,@end-@cmd
040785 5B DF       1353*      rst.lil $18
040787 C9          1354*      ret
040788 17 1B 0E    1355*  @cmd: db 23,27,14
04078B 00 00       1356*  @dx:  dw 0x0000
04078D 00 00       1357*  @dy:  dw 0x0000
04078F 00          1358*  @end: db 0x00 ; padding
040790             1359*  
040790             1360*  ; VDU 23, 27, 13, x; y;: Move current sprite to pixel position x, y
040790             1361*  ; USING 16.8 FIXED POINT COORDINATES
040790             1362*  ; inputs: ub.c is x coordinate, ud.e is y coordinate
040790             1363*  ;   the fractional portiion of the inputs are truncated
040790             1364*  ;   leaving only the 16-bit integer portion
040790             1365*  ; prerequisites: vdu_sprite_select
040790             1366*  vdu_sprite_move_abs168:
040790             1367*  ; populate in the reverse of normal to keep the
040790             1368*  ; inputs from stomping on each other
040790 ED 53 AF 07 1369*      ld (@ypos-1),de
       04          
040795 ED 43 AD 07 1370*      ld (@xpos-1),bc
       04          
04079A 3E 0D       1371*      ld a,13       ; restore the final byte of the command
04079C 32 AD 07 04 1372*      ld (@cmd+2),a ; string that got stomped on by bcu
0407A0 21 AB 07 04 1373*      ld hl,@cmd
0407A4 01 07 00 00 1374*      ld bc,@end-@cmd
0407A8 5B DF       1375*      rst.lil $18
0407AA C9          1376*      ret
0407AB 17 1B 0D    1377*  @cmd:  db 23,27,13
0407AE 00 00       1378*  @xpos: dw 0x0000
0407B0 00 00       1379*  @ypos: dw 0x0000
0407B2             1380*  @end:  ; no padding required b/c we shifted de right
0407B2             1381*  
0407B2             1382*  ; VDU 23, 27, 14, x; y;: Move current sprite by x, y pixels
0407B2             1383*  ; USING 16.8 FIXED POINT COORDINATES
0407B2             1384*  ; inputs: ub.c is dx, ud.e is dy
0407B2             1385*  ;   the fractional portiion of the inputs are truncated
0407B2             1386*  ;   leaving only the 16-bit integer portion
0407B2             1387*  ; prerequisites: vdu_sprite_select
0407B2             1388*  vdu_sprite_move_rel168:
0407B2             1389*  ; populate in the reverse of normal to keep the
0407B2             1390*  ; inputs from stomping on each other
0407B2 ED 53 D1 07 1391*      ld (@dy-1),de
       04          
0407B7 ED 43 CF 07 1392*      ld (@dx-1),bc
       04          
0407BC 3E 0E       1393*      ld a,14       ; restore the final byte of the command
0407BE 32 CF 07 04 1394*      ld (@cmd+2),a ; string that got stomped on by bcu
0407C2 21 CD 07 04 1395*      ld hl,@cmd
0407C6 01 07 00 00 1396*      ld bc,@end-@cmd
0407CA 5B DF       1397*      rst.lil $18
0407CC C9          1398*      ret
0407CD 17 1B 0E    1399*  @cmd:  db 23,27,14
0407D0 00 00       1400*  @dx: dw 0x0000
0407D2 00 00       1401*  @dy: dw 0x0000
0407D4             1402*  @end:  ; no padding required b/c we shifted de right
0407D4             1403*  
0407D4             1404*  ; VDU 23, 27, 15: Update the sprites in the GPU
0407D4             1405*  ; inputs: none
0407D4             1406*  vdu_sprite_update:
0407D4 21 DF 07 04 1407*      ld hl,@cmd
0407D8 01 03 00 00 1408*      ld bc,@end-@cmd
0407DC 5B DF       1409*      rst.lil $18
0407DE C9          1410*      ret
0407DF 17 1B 0F    1411*  @cmd: db 23,27,15
0407E2             1412*  @end:
0407E2             1413*  
0407E2             1414*  ; VDU 23, 27, 16: Reset bitmaps and sprites and clear all data
0407E2             1415*  ; inputs: none
0407E2             1416*  vdu_sprite_bmp_reset:
0407E2 21 ED 07 04 1417*      ld hl,@cmd
0407E6 01 03 00 00 1418*      ld bc,@end-@cmd
0407EA 5B DF       1419*      rst.lil $18
0407EC C9          1420*      ret
0407ED 17 1B 10    1421*  @cmd: db 23,27,16
0407F0             1422*  @end:
0407F0             1423*  
0407F0             1424*  ; VDU 23, 27, 17: Reset sprites (only) and clear all data
0407F0             1425*  ; inputs: none
0407F0             1426*  vdu_sprite_reset:
0407F0 21 FB 07 04 1427*      ld hl,@cmd
0407F4 01 03 00 00 1428*      ld bc,@end-@cmd
0407F8 5B DF       1429*      rst.lil $18
0407FA C9          1430*      ret
0407FB 17 1B 11    1431*  @cmd: db 23,27,17
0407FE             1432*  @end:
0407FE             1433*  
0407FE             1434*  ; VDU 23, 27, 18, n: Set the current sprite GCOL paint mode to n **
0407FE             1435*  ; inputs: a is the GCOL paint mode
0407FE             1436*  ; prerequisites: vdu_sprite_select
0407FE             1437*  vdu_sprite_set_gcol:
0407FE 32 10 08 04 1438*      ld (@mode),a
040802 21 0D 08 04 1439*      ld hl,@cmd
040806 01 04 00 00 1440*      ld bc,@end-@cmd
04080A 5B DF       1441*      rst.lil $18
04080C C9          1442*      ret
04080D 17 1B 12    1443*  @cmd:  db 23,27,18
040810 00          1444*  @mode: db 0x00
040811             1445*  @end:
040811             1446*  
040811             1447*  ; VDU 23, 27, &26, n;: Add bitmap bufferId
040811             1448*  ;     as a frame to current sprite using a 16-bit buffer ID
040811             1449*  ; inputs: hl=bufferId
040811             1450*  ; prerequisites: vdu_sprite_select
040811             1451*  vdu_sprite_add_buff:
040811 22 23 08 04 1452*      ld (@bufferId),hl
040815 21 20 08 04 1453*      ld hl,@cmd
040819 01 05 00 00 1454*      ld bc,@end-@cmd
04081D 5B DF       1455*      rst.lil $18
04081F C9          1456*      ret
040820 17 1B 26    1457*  @cmd:      db 23,27,0x26
040823 00 00       1458*  @bufferId: dw 0x0000
040825 00          1459*  @end:      db 0x00 ; padding
040826             1460*  
040826             1461*  
040826             1462*  ; #### from sfx.asm ####
040826 00          1463*  sfx_last_channel: db 0x00 ; 8-bit value between 0 and 31
040827             1464*  
040827             1465*  vdu_clear_all_buffers:
040827             1466*  ; clear all buffers
040827 21 32 08 04 1467*      ld hl,@beg
04082B 01 06 00 00 1468*      ld bc,@end-@beg
04082F 5B DF       1469*      rst.lil $18
040831 C9          1470*      ret
040832 17 00 A0    1471*  @beg: db 23,0,$A0
040835 FF FF       1472*        dw -1 ; clear all buffers
040837 02          1473*        db 2  ; command 2: clear a buffer
040838             1474*  @end:
040838             0434       include "pingo/src/asm/Lara5.asm"
040838             0001*  Lara5_vertices_n: equ 300
040838             0002*  Lara5_indices_n: equ 1578
040838             0003*  Lara5_uvs_n: equ 644
040838             0004*  Lara5_texture_width: equ 256
040838             0005*  Lara5_texture_height: equ 184
040838             0006*  Lara5_texture_size: equ 188416
040838             0007*  
040838             0008*  ; -- VERTICES --
040838             0009*  Lara5_vertices:
040838 1C 03 90 0D 0010*  	dw 796, 3472, -940
       54 FC       
04083E 5A ED 11 FA 0011*  	dw -4774, -1519, -868
       9C FC       
040844 AE E9 10 07 0012*  	dw -5714, 1808, -506
       06 FE       
04084A EB ED E9 07 0013*  	dw -4629, 2025, 3255
       B7 0C       
040850 4F F1 38 F9 0014*  	dw -3761, -1736, 2749
       BD 0A       
040856 74 0A 9D EF 0015*  	dw 2676, -4195, 579
       43 02       
04085C 2C 0A 76 F0 0016*  	dw 2604, -3978, -2242
       3E F7       
040862 1C F6 76 F0 0017*  	dw -2532, -3978, -2315
       F5 F6       
040868 AD F6 10 07 0018*  	dw -2387, 1808, -2676
       8C F5       
04086E 2C 0A 10 07 0019*  	dw 2604, 1808, -2604
       D4 F5       
040874 A6 12 11 FA 0020*  	dw 4774, -1519, -868
       9C FC       
04087A 15 12 E9 07 0021*  	dw 4629, 2025, 3327
       FF 0C       
040880 42 0F 38 F9 0022*  	dw 3906, -1736, 2821
       05 0B       
040886 48 0D FA 0E 0023*  	dw 3400, 3834, 2170
       7A 08       
04088C 75 FD 90 0D 0024*  	dw -651, 3472, -1013
       0B FC       
040892 B8 F2 FA 0E 0025*  	dw -3400, 3834, 2098
       32 08       
040898 52 16 10 07 0026*  	dw 5714, 1808, -506
       06 FE       
04089E 1C F6 9D EF 0027*  	dw -2532, -4195, 506
       FA 01       
0408A4 17 F8 11 FA 0028*  	dw -2025, -1519, -2893
       B3 F4       
0408AA 32 08 11 FA 0029*  	dw 2098, -1519, -2821
       FB F4       
0408B0 F0 EB 47 1A 0030*  	dw -5136, 6727, -1230
       32 FB       
0408B6 17 EB 48 00 0031*  	dw -5353, 72, 2098
       32 08       
0408BC 55 E2 21 01 0032*  	dw -7595, 289, -868
       9C FC       
0408C2 AE E9 91 00 0033*  	dw -5714, 145, -1013
       0B FC       
0408C8 BF E3 D9 00 0034*  	dw -7233, 217, 2242
       C2 08       
0408CE 12 ED FF 19 0035*  	dw -4846, 6655, 1157
       85 04       
0408D4 98 E4 D8 1A 0036*  	dw -7016, 6872, -1085
       C3 FB       
0408DA B9 E5 8F 1A 0037*  	dw -6727, 6799, 1374
       5E 05       
0408E0 48 00 16 05 0038*  	dw 72, 1302, -723
       2D FD       
0408E6 97 F1 35 3A 0039*  	dw -3689, 14901, -362
       96 FE       
0408EC C3 FB C7 20 0040*  	dw -1085, 8391, 2098
       32 08       
0408F2 91 F3 35 3A 0041*  	dw -3183, 14901, 868
       64 03       
0408F8 0B FC 35 3A 0042*  	dw -1013, 14901, -362
       96 FE       
0408FE 11 FA 35 3A 0043*  	dw -1519, 14901, 868
       64 03       
040904 D4 F5 C7 20 0044*  	dw -2604, 8391, -2749
       43 F5       
04090A FB F4 16 05 0045*  	dw -2821, 1302, -2604
       D4 F5       
040910 9D EF C7 20 0046*  	dw -4195, 8391, 2098
       32 08       
040916 65 E9 16 05 0047*  	dw -5787, 1302, -796
       E4 FC       
04091C F0 EB C7 20 0048*  	dw -5136, 8391, -796
       E4 FC       
040922 A2 ED 5E 05 0049*  	dw -4702, 1374, 2242
       C2 08       
040928 B8 FF C7 20 0050*  	dw -72, 8391, -796
       E4 FC       
04092E C3 FB 5E 05 0051*  	dw -1085, 1374, 2242
       C2 08       
040934 AD F6 99 3D 0052*  	dw -2387, 15769, 506
       FA 01       
04093A DA F3 99 3D 0053*  	dw -3110, 15769, -940
       54 FC       
040940 AD F6 35 3A 0054*  	dw -2387, 14901, -1591
       C9 F9       
040946 80 F9 99 3D 0055*  	dw -1664, 15769, -940
       54 FC       
04094C 1C F6 01 59 0056*  	dw -2532, 22785, -1230
       32 FB       
040952 65 F6 66 4F 0057*  	dw -2459, 20326, -1374
       A2 FA       
040958 5A ED 66 4F 0058*  	dw -4774, 20326, 434
       B2 01       
04095E 28 F2 B9 58 0059*  	dw -3544, 22713, 2098
       32 08       
040964 11 FA B9 58 0060*  	dw -1519, 22713, 2098
       32 08       
04096A B8 F2 EC 39 0061*  	dw -3400, 14828, -362
       96 FE       
040970 C9 F9 EC 39 0062*  	dw -1591, 14828, 868
       64 03       
040976 F5 F6 EC 39 0063*  	dw -2315, 14828, -1591
       C9 F9       
04097C C3 FB 02 4C 0064*  	dw -1085, 19458, 2821
       05 0B       
040982 6A F4 EC 39 0065*  	dw -2966, 14828, 868
       64 03       
040988 BE F0 02 4C 0066*  	dw -3906, 19458, 2821
       05 0B       
04098E 7B FB EC 39 0067*  	dw -1157, 14828, -362
       96 FE       
040994 9D EF 01 59 0068*  	dw -4195, 22785, 289
       21 01       
04099A 70 F2 53 6F 0069*  	dw -3472, 28499, -362
       96 FE       
0409A0 27 FF 66 4F 0070*  	dw -217, 20326, 434
       B2 01       
0409A6 32 FB 53 6F 0071*  	dw -1230, 28499, -362
       96 FE       
0409AC F5 F6 53 6F 0072*  	dw -2315, 28499, -1374
       A2 FA       
0409B2 91 F3 6F 72 0073*  	dw -3183, 29295, -579
       BD FD       
0409B8 22 F4 53 6F 0074*  	dw -3038, 28499, 1230
       CE 04       
0409BE 65 F6 6F 72 0075*  	dw -2459, 29295, 796
       1C 03       
0409C4 80 F9 6F 72 0076*  	dw -1664, 29295, -579
       BD FD       
0409CA 9C FC 01 59 0077*  	dw -868, 22785, 362
       6A 01       
0409D0 C9 F9 53 6F 0078*  	dw -1591, 28499, 1230
       CE 04       
0409D6 11 FA C8 79 0079*  	dw -1519, 31176, -6510
       92 E6       
0409DC 9C FC 42 75 0080*  	dw -868, 30018, -2821
       FB F4       
0409E2 BE F0 42 75 0081*  	dw -3906, 30018, -2821
       FB F4       
0409E8 49 F3 C8 79 0082*  	dw -3255, 31176, -6510
       92 E6       
0409EE E5 EF B7 7F 0083*  	dw -4123, 32695, -3400
       B8 F2       
0409F4 B8 F2 6E 7F 0084*  	dw -3400, 32622, -6582
       4A E6       
0409FA C3 FB D3 75 0085*  	dw -1085, 30163, 1736
       C8 06       
040A00 B8 F2 9C 6F 0086*  	dw -3400, 28572, 1230
       CE 04       
040A06 97 F1 D3 75 0087*  	dw -3689, 30163, 1736
       C8 06       
040A0C EA FA B7 7F 0088*  	dw -1302, 32695, 2098
       32 08       
040A12 A2 FA 9C 6F 0089*  	dw -1374, 28572, 1230
       CE 04       
040A18 70 F2 B7 7F 0090*  	dw -3472, 32695, 2098
       32 08       
040A1E BD FD B7 7F 0091*  	dw -579, 32695, -2749
       43 F5       
040A24 A2 FA 6E 7F 0092*  	dw -1374, 32622, -6582
       4A E6       
040A2A A2 FA 2C 70 0093*  	dw -1374, 28716, -1302
       EA FA       
040A30 B8 F2 2C 70 0094*  	dw -3400, 28716, -1302
       EA FA       
040A36 37 13 B6 19 0095*  	dw 4919, 6582, 1230
       CE 04       
040A3C 31 15 00 00 0096*  	dw 5425, 0, 2170
       7A 08       
040A42 F3 1D D9 00 0097*  	dw 7667, 217, -868
       9C FC       
040A48 58 14 FF 19 0098*  	dw 5208, 6655, -1157
       7B FB       
040A4E 9B 16 48 00 0099*  	dw 5787, 72, -1013
       0B FC       
040A54 8F 1A 8F 1A 0100*  	dw 6799, 6799, 1374
       5E 05       
040A5A B1 1B 8F 1A 0101*  	dw 7089, 6799, -1013
       0B FC       
040A60 8A 1C D9 00 0102*  	dw 7306, 217, 2315
       0B 09       
040A66 74 0A 7E 20 0103*  	dw 2676, 8318, -2676
       8C F5       
040A6C B1 0E 35 3A 0104*  	dw 3761, 14901, -362
       96 FE       
040A72 37 06 35 3A 0105*  	dw 1591, 14901, 940
       AC 03       
040A78 B7 0C 35 3A 0106*  	dw 3255, 14901, 940
       AC 03       
040A7E 3D 04 35 3A 0107*  	dw 1085, 14901, -289
       DF FE       
040A84 4D 0B CE 04 0108*  	dw 2893, 1230, -2604
       D4 F5       
040A8A E3 16 CE 04 0109*  	dw 5859, 1230, -723
       2D FD       
040A90 58 14 7E 20 0110*  	dw 5208, 8318, -796
       E4 FC       
040A96 AC 10 7E 20 0111*  	dw 4268, 8318, 2098
       32 08       
040A9C 5E 12 16 05 0112*  	dw 4702, 1302, 2242
       C2 08       
040AA2 3D 04 16 05 0113*  	dw 1085, 1302, 2242
       C2 08       
040AA8 3D 04 7E 20 0114*  	dw 1085, 8318, 2098
       32 08       
040AAE B8 FF CE 04 0115*  	dw -72, 1230, -723
       2D FD       
040AB4 91 00 7E 20 0116*  	dw 145, 8318, -796
       E4 FC       
040ABA 80 06 50 3D 0117*  	dw 1664, 15696, -868
       9C FC       
040AC0 9B 09 35 3A 0118*  	dw 2459, 14901, -1591
       C9 F9       
040AC6 6F 0C 50 3D 0119*  	dw 3183, 15696, -868
       9C FC       
040ACC 9B 09 50 3D 0120*  	dw 2459, 15696, 506
       FA 01       
040AD2 2C 0A 01 59 0121*  	dw 2604, 22785, -1302
       EA FA       
040AD8 EE 12 66 4F 0122*  	dw 4846, 20326, 362
       6A 01       
040ADE 69 0E B9 58 0123*  	dw 3689, 22713, 2025
       E9 07       
040AE4 85 04 02 4C 0124*  	dw 1157, 19458, 2749
       BD 0A       
040AEA 26 0C EC 39 0125*  	dw 3110, 14828, 796
       1C 03       
040AF0 80 06 EC 39 0126*  	dw 1664, 14828, 868
       64 03       
040AF6 8A 0F 02 4C 0127*  	dw 3978, 19458, 2749
       BD 0A       
040AFC CE 04 EC 39 0128*  	dw 1230, 14828, -434
       4E FE       
040B02 21 01 66 4F 0129*  	dw 289, 20326, 434
       B2 01       
040B08 AC 10 01 59 0130*  	dw 4268, 22785, 289
       21 01       
040B0E D8 0D 53 6F 0131*  	dw 3544, 28499, -434
       4E FE       
040B14 37 06 B9 58 0132*  	dw 1591, 22713, 2025
       E9 07       
040B1A C8 06 6F 72 0133*  	dw 1736, 29295, -579
       BD FD       
040B20 2C 0A 66 4F 0134*  	dw 2604, 20326, -1447
       59 FA       
040B26 53 09 EC 39 0135*  	dw 2387, 14828, -1664
       80 F9       
040B2C D8 0D EC 39 0136*  	dw 3544, 14828, -434
       4E FE       
040B32 16 05 53 6F 0137*  	dw 1302, 28499, -434
       4E FE       
040B38 53 09 53 6F 0138*  	dw 2387, 28499, -1374
       A2 FA       
040B3E 26 0C 53 6F 0139*  	dw 3110, 28499, 1157
       85 04       
040B44 E4 09 6F 72 0140*  	dw 2532, 29295, 723
       D3 02       
040B4A B7 0C 6F 72 0141*  	dw 3255, 29295, -651
       75 FD       
040B50 80 06 53 6F 0142*  	dw 1664, 28499, 1157
       85 04       
040B56 AC 03 01 59 0143*  	dw 940, 22785, 289
       21 01       
040B5C D3 0F FF 7F 0144*  	dw 4051, 32767, -3400
       B8 F2       
040B62 FF 0C E4 6F 0145*  	dw 3327, 28644, 1302
       16 05       
040B68 85 04 FF 7F 0146*  	dw 1157, 32767, 2098
       32 08       
040B6E FF 0C 75 70 0147*  	dw 3327, 28789, -1230
       32 FB       
040B74 CE 04 B7 7F 0148*  	dw 1230, 32695, -6582
       4A E6       
040B7A 6F 0C 10 7A 0149*  	dw 3183, 31248, -6438
       DA E6       
040B80 FF 0C B7 7F 0150*  	dw 3327, 32695, -6582
       4A E6       
040B86 5E 05 10 7A 0151*  	dw 1374, 31248, -6438
       DA E6       
040B8C CE 04 75 70 0152*  	dw 1230, 28789, -1230
       32 FB       
040B92 1C 03 8B 75 0153*  	dw 796, 30091, -2749
       43 F5       
040B98 F5 03 1B 76 0154*  	dw 1013, 30235, 1808
       10 07       
040B9E CE 04 E4 6F 0155*  	dw 1230, 28644, 1302
       16 05       
040BA4 D8 0D 1B 76 0156*  	dw 3544, 30235, 1808
       10 07       
040BAA FA 01 FF 7F 0157*  	dw 506, 32767, -2676
       8C F5       
040BB0 48 0D FF 7F 0158*  	dw 3400, 32767, 2098
       32 08       
040BB6 B1 0E 8B 75 0159*  	dw 3761, 30091, -2749
       43 F5       
040BBC 05 0B 7D C7 0160*  	dw 2821, -14467, 3906
       42 0F       
040BC2 42 0F A4 C6 0161*  	dw 3906, -14684, 1736
       C8 06       
040BC8 DA F3 DB D9 0162*  	dw -3110, -9765, 4412
       3C 11       
040BCE 86 F7 DA E6 0163*  	dw -2170, -6438, -2315
       F5 F6       
040BD4 C2 08 4A E6 0164*  	dw 2242, -6582, 1013
       F5 03       
040BDA E4 09 BE F0 0165*  	dw 2532, -3906, 796
       1C 03       
040BE0 E4 09 BE F0 0166*  	dw 2532, -3906, -2170
       86 F7       
040BE6 7B FB A4 C6 0167*  	dw -1157, -14684, 1664
       80 06       
040BEC AC 03 A4 C6 0168*  	dw 940, -14684, 1664
       80 06       
040BF2 AC 03 A4 C6 0169*  	dw 940, -14684, -796
       E4 FC       
040BF8 D3 02 57 BB 0170*  	dw 723, -17577, -434
       4E FE       
040BFE D3 02 57 BB 0171*  	dw 723, -17577, 1519
       EF 05       
040C04 54 FC 57 BB 0172*  	dw -940, -17577, 1519
       EF 05       
040C0A 7B FB A4 C6 0173*  	dw -1157, -14684, -796
       E4 FC       
040C10 54 FC 57 BB 0174*  	dw -940, -17577, -434
       4E FE       
040C16 86 F7 4A E6 0175*  	dw -2170, -6582, 1013
       F5 03       
040C1C 8C F5 BE F0 0176*  	dw -2676, -3906, -2170
       86 F7       
040C22 8C F5 BE F0 0177*  	dw -2676, -3906, 796
       1C 03       
040C28 70 F2 E6 D5 0178*  	dw -3472, -10778, -5208
       A8 EB       
040C2E 96 0B DB D9 0179*  	dw 2966, -9765, 4412
       3C 11       
040C34 42 0F A4 C6 0180*  	dw 3906, -14684, -1157
       7B FB       
040C3A 2D F0 A4 C6 0181*  	dw -4051, -14684, 1736
       C8 06       
040C40 FF 0C 18 DE 0182*  	dw 3327, -8680, -2459
       65 F6       
040C46 C2 08 DA E6 0183*  	dw 2242, -6438, -2315
       F5 F6       
040C4C 90 0D 1E DC 0184*  	dw 3472, -9186, 1953
       A1 07       
040C52 28 F2 1E DC 0185*  	dw -3544, -9186, 1953
       A1 07       
040C58 70 F2 18 DE 0186*  	dw -3472, -8680, -2459
       65 F6       
040C5E 6A F4 7D C7 0187*  	dw -2966, -14467, 3906
       42 0F       
040C64 FF 0C E6 D5 0188*  	dw 3327, -10778, -5208
       A8 EB       
040C6A 2D F0 A4 C6 0189*  	dw -4051, -14684, -1157
       7B FB       
040C70 EE 12 E1 CA 0190*  	dw 4846, -13599, -1085
       C3 FB       
040C76 9B 16 4B CC 0191*  	dw 5787, -13237, 72
       48 00       
040C7C 2B 17 B9 E5 0192*  	dw 5931, -6727, 72
       48 00       
040C82 10 14 71 E5 0193*  	dw 5136, -6799, 1157
       85 04       
040C88 90 0D 2F C9 0194*  	dw 3472, -14033, 796
       1C 03       
040C8E FA 0E 71 E5 0195*  	dw 3834, -6799, 796
       1C 03       
040C94 90 0D 2F C9 0196*  	dw 3472, -14033, -651
       75 FD       
040C9A 7F 13 FC E7 0197*  	dw 4991, -6148, -506
       06 FE       
040CA0 8A 0F ED C6 0198*  	dw 3978, -14611, 72
       48 00       
040CA6 37 13 E1 CA 0199*  	dw 4919, -13599, 1230
       CE 04       
040CAC 5E 12 ED C6 0200*  	dw 4702, -14611, 651
       8B 02       
040CB2 5E 12 ED C6 0201*  	dw 4702, -14611, -506
       06 FE       
040CB8 C7 13 71 E5 0202*  	dw 5063, -6799, -1013
       0B FC       
040CBE 7F 13 FC E7 0203*  	dw 4991, -6148, 651
       8B 02       
040CC4 F4 10 FC E7 0204*  	dw 4340, -6148, 72
       48 00       
040CCA FA 0E 71 E5 0205*  	dw 3834, -6799, -579
       BD FD       
040CD0 FA 0E 71 E5 0206*  	dw 3834, -6799, -434
       4E FE       
040CD6 FA 0E 71 E5 0207*  	dw 3834, -6799, 868
       64 03       
040CDC 0A 16 FA 01 0208*  	dw 5642, 506, 217
       D9 00       
040CE2 10 14 71 E5 0209*  	dw 5136, -6799, -868
       9C FC       
040CE8 10 14 FA 01 0210*  	dw 5136, 506, 940
       AC 03       
040CEE 10 14 71 E5 0211*  	dw 5136, -6799, 1302
       16 05       
040CF4 63 10 FA 01 0212*  	dw 4195, 506, 651
       8B 02       
040CFA E3 16 B9 E5 0213*  	dw 5859, -6727, 217
       D9 00       
040D00 7F 13 85 04 0214*  	dw 4991, 1157, -145
       6F FF       
040D06 C7 13 FA 01 0215*  	dw 5063, 506, -506
       06 FE       
040D0C 7F 13 85 04 0216*  	dw 4991, 1157, 579
       43 02       
040D12 CD 11 85 04 0217*  	dw 4557, 1157, 217
       D9 00       
040D18 63 10 FA 01 0218*  	dw 4195, 506, -217
       27 FF       
040D1E 0A 16 8B 02 0219*  	dw 5642, 651, 1085
       3D 04       
040D24 0A 16 8B 02 0220*  	dw 5642, 651, -579
       BD FD       
040D2A 48 0D 42 0F 0221*  	dw 3400, 3906, 1302
       16 05       
040D30 63 10 B2 01 0222*  	dw 4195, 434, 1085
       3D 04       
040D36 79 15 FA 0E 0223*  	dw 5497, 3834, 1302
       16 05       
040D3C 31 15 D3 0F 0224*  	dw 5425, 4051, -1230
       32 FB       
040D42 FF 0C 1B 10 0225*  	dw 3327, 4123, -1230
       32 FB       
040D48 63 10 B2 01 0226*  	dw 4195, 434, -579
       BD FD       
040D4E F0 EB 71 E5 0227*  	dw -5136, -6799, -1013
       0B FC       
040D54 BE F0 71 E5 0228*  	dw -3906, -6799, 796
       1C 03       
040D5A 12 ED E1 CA 0229*  	dw -4846, -13599, 1230
       CE 04       
040D60 70 F2 2F C9 0230*  	dw -3472, -14033, 796
       1C 03       
040D66 B8 F2 2F C9 0231*  	dw -3400, -14033, -651
       75 FD       
040D6C 76 F0 ED C6 0232*  	dw -3978, -14611, 72
       48 00       
040D72 AE E9 4B CC 0233*  	dw -5714, -13237, 72
       48 00       
040D78 EB ED ED C6 0234*  	dw -4629, -14611, 651
       8B 02       
040D7E 12 ED E1 CA 0235*  	dw -4846, -13599, -1085
       C3 FB       
040D84 EB ED ED C6 0236*  	dw -4629, -14611, -506
       06 FE       
040D8A 8C E8 71 E5 0237*  	dw -6004, -6799, 72
       48 00       
040D90 39 EC FC E7 0238*  	dw -5063, -6148, 651
       8B 02       
040D96 A8 EB 71 E5 0239*  	dw -5208, -6799, 1157
       85 04       
040D9C 06 F1 71 E5 0240*  	dw -3834, -6799, -579
       BD FD       
040DA2 39 EC FC E7 0241*  	dw -5063, -6148, -506
       06 FE       
040DA8 C4 EE FC E7 0242*  	dw -4412, -6148, 72
       48 00       
040DAE F0 EB B9 E5 0243*  	dw -5136, -6727, -868
       9C FC       
040DB4 D5 E8 01 E6 0244*  	dw -5931, -6655, 217
       D9 00       
040DBA F6 E9 43 02 0245*  	dw -5642, 579, 217
       D9 00       
040DC0 54 EF FA 01 0246*  	dw -4268, 506, 651
       8B 02       
040DC6 F0 EB FA 01 0247*  	dw -5136, 506, 940
       AC 03       
040DCC BE F0 71 E5 0248*  	dw -3906, -6799, -434
       4E FE       
040DD2 BE F0 71 E5 0249*  	dw -3906, -6799, 868
       64 03       
040DD8 33 EE 85 04 0250*  	dw -4557, 1157, 217
       D9 00       
040DDE F0 EB B9 E5 0251*  	dw -5136, -6727, 1302
       16 05       
040DE4 F0 EB FA 01 0252*  	dw -5136, 506, -506
       06 FE       
040DEA 81 EC 85 04 0253*  	dw -4991, 1157, 579
       43 02       
040DF0 54 EF FA 01 0254*  	dw -4268, 506, -217
       27 FF       
040DF6 81 EC 85 04 0255*  	dw -4991, 1157, -145
       6F FF       
040DFC 3E EA 8B 02 0256*  	dw -5570, 651, 1013
       F5 03       
040E02 01 F3 42 0F 0257*  	dw -3327, 3906, 1230
       CE 04       
040E08 9D EF B2 01 0258*  	dw -4195, 434, 1013
       F5 03       
040E0E 3E EA 8B 02 0259*  	dw -5570, 651, -651
       75 FD       
040E14 CF EA FA 0E 0260*  	dw -5425, 3834, 1230
       CE 04       
040E1A 9D EF B2 01 0261*  	dw -4195, 434, -651
       75 FD       
040E20 01 F3 1B 10 0262*  	dw -3327, 4123, -1302
       EA FA       
040E26 CF EA D3 0F 0263*  	dw -5425, 4051, -1302
       EA FA       
040E2C 2D FD 78 C9 0264*  	dw -723, -13960, 4485
       85 11       
040E32 FA 01 78 C9 0265*  	dw 506, -13960, 4485
       85 11       
040E38 CE 04 FF A6 0266*  	dw 1230, -22785, 3038
       DE 0B       
040E3E 59 FA 47 A7 0267*  	dw -1447, -22713, 3038
       DE 0B       
040E44 B8 FF E2 BD 0268*  	dw -72, -16926, 579
       43 02       
040E4A B8 FF 2A BE 0269*  	dw -72, -16854, -3255
       49 F3       
040E50 8B 02 9A BD 0270*  	dw 651, -16998, -2749
       43 F5       
040E56 9C FC 9A BD 0271*  	dw -868, -16998, -2749
       43 F5       
040E5C C3 FB 94 BF 0272*  	dw -1085, -16492, 3110
       26 0C       
040E62 54 FC A5 B9 0273*  	dw -940, -18011, 4702
       5E 12       
040E68 64 03 94 BF 0274*  	dw 868, -16492, 3110
       26 0C       
040E6E 1C 03 A5 B9 0275*  	dw 796, -18011, 4702
       5E 12       
040E74 6F FF AA C4 0276*  	dw -145, -15190, 2532
       E4 09       
040E7A 86 F7 B0 C2 0277*  	dw -2170, -15696, 1881
       59 07       
040E80 06 F1 E8 BB 0278*  	dw -3834, -17432, 796
       1C 03       
040E86 69 0E E8 BB 0279*  	dw 3689, -17432, 796
       1C 03       
040E8C FF 0C 52 B0 0280*  	dw 3327, -20398, -145
       6F FF       
040E92 AD F6 4D A5 0281*  	dw -2387, -23219, -1157
       7B FB       
040E98 38 F9 05 A5 0282*  	dw -1736, -23291, -1519
       11 FA       
040E9E C8 06 05 A5 0283*  	dw 1736, -23291, -1519
       11 FA       
040EA4 0B 09 BC A4 0284*  	dw 2315, -23364, 940
       AC 03       
040EAA 32 FB 10 A1 0285*  	dw -1230, -24304, -2387
       AD F6       
040EB0 65 F6 BC A4 0286*  	dw -2459, -23364, 940
       AC 03       
040EB6 3D 04 58 A1 0287*  	dw 1085, -24232, -2749
       43 F5       
040EBC C8 06 C6 BA 0288*  	dw 1736, -17722, 217
       D9 00       
040EC2 B8 F2 0A B0 0289*  	dw -3400, -20470, 506
       FA 01       
040EC8 AD F6 E3 B0 0290*  	dw -2387, -20253, -2459
       65 F6       
040ECE 5F F8 C6 BA 0291*  	dw -1953, -17722, 217
       D9 00       
040ED4 F5 F6 79 AF 0292*  	dw -2315, -20615, 145
       91 00       
040EDA A1 07 B0 C2 0293*  	dw 1953, -15696, 1881
       59 07       
040EE0 CE 04 B0 B5 0294*  	dw 1230, -19024, 3978
       8A 0F       
040EE6 B8 FF 58 A1 0295*  	dw -72, -24232, 217
       D9 00       
040EEC 7A 08 79 AF 0296*  	dw 2170, -20615, 145
       91 00       
040EF2 3E F7 CD AB 0297*  	dw -2242, -21555, -2532
       1C F6       
040EF8 B8 FF BC A4 0298*  	dw -72, -23364, -2604
       D4 F5       
040EFE B8 FF 9A B0 0299*  	dw -72, -20326, -3472
       70 F2       
040F04 B8 FF 15 AC 0300*  	dw -72, -21483, -3544
       28 F2       
040F0A 0B 09 DE A5 0301*  	dw 2315, -23074, -1736
       38 F9       
040F10 1C 03 20 B5 0302*  	dw 796, -19168, -3327
       01 F3       
040F16 B8 FF 8F B4 0303*  	dw -72, -19313, -4195
       9D EF       
040F1C 0B FC 68 B5 0304*  	dw -1013, -19096, -3327
       01 F3       
040F22 C2 08 E3 B0 0305*  	dw 2242, -20253, -2459
       65 F6       
040F28 32 08 CD AB 0306*  	dw 2098, -21555, -2604
       D4 F5       
040F2E B8 FF E7 C8 0307*  	dw -72, -14105, 3183
       6F 0C       
040F34 B8 FF 68 B5 0308*  	dw -72, -19096, -3761
       4F F1       
040F3A 59 FA B0 B5 0309*  	dw -1447, -19024, 3978
       8A 0F       
040F40             0310*  
040F40             0311*  ; -- FACE VERTEX INDICES --
040F40             0312*  Lara5_vertex_indices:
040F40 00 00 0F 00 0313*  	dw 0, 15, 13
       0D 00       
040F46 00 00 0E 00 0314*  	dw 0, 14, 15
       0F 00       
040F4C 00 00 08 00 0315*  	dw 0, 8, 14
       0E 00       
040F52 00 00 09 00 0316*  	dw 0, 9, 8
       08 00       
040F58 01 00 12 00 0317*  	dw 1, 18, 7
       07 00       
040F5E 01 00 02 00 0318*  	dw 1, 2, 18
       12 00       
040F64 03 00 01 00 0319*  	dw 3, 1, 4
       04 00       
040F6A 03 00 02 00 0320*  	dw 3, 2, 1
       01 00       
040F70 05 00 07 00 0321*  	dw 5, 7, 6
       06 00       
040F76 05 00 11 00 0322*  	dw 5, 17, 7
       07 00       
040F7C 12 00 06 00 0323*  	dw 18, 6, 7
       07 00       
040F82 12 00 13 00 0324*  	dw 18, 19, 6
       06 00       
040F88 0C 00 11 00 0325*  	dw 12, 17, 5
       05 00       
040F8E 0C 00 04 00 0326*  	dw 12, 4, 17
       11 00       
040F94 08 00 13 00 0327*  	dw 8, 19, 18
       12 00       
040F9A 08 00 09 00 0328*  	dw 8, 9, 19
       13 00       
040FA0 10 00 06 00 0329*  	dw 16, 6, 19
       13 00       
040FA6 10 00 0A 00 0330*  	dw 16, 10, 6
       06 00       
040FAC 10 00 0C 00 0331*  	dw 16, 12, 10
       0A 00       
040FB2 10 00 0B 00 0332*  	dw 16, 11, 12
       0C 00       
040FB8 0B 00 04 00 0333*  	dw 11, 4, 12
       0C 00       
040FBE 0B 00 03 00 0334*  	dw 11, 3, 4
       04 00       
040FC4 0D 00 03 00 0335*  	dw 13, 3, 11
       0B 00       
040FCA 0D 00 0F 00 0336*  	dw 13, 15, 3
       03 00       
040FD0 0E 00 02 00 0337*  	dw 14, 2, 15
       0F 00       
040FD6 02 00 0E 00 0338*  	dw 2, 14, 8
       08 00       
040FDC 03 00 0F 00 0339*  	dw 3, 15, 2
       02 00       
040FE2 10 00 00 00 0340*  	dw 16, 0, 13
       0D 00       
040FE8 00 00 10 00 0341*  	dw 0, 16, 9
       09 00       
040FEE 0D 00 0B 00 0342*  	dw 13, 11, 16
       10 00       
040FF4 01 00 07 00 0343*  	dw 1, 7, 17
       11 00       
040FFA 11 00 04 00 0344*  	dw 17, 4, 1
       01 00       
041000 02 00 08 00 0345*  	dw 2, 8, 18
       12 00       
041006 05 00 06 00 0346*  	dw 5, 6, 10
       0A 00       
04100C 0A 00 0C 00 0347*  	dw 10, 12, 5
       05 00       
041012 13 00 09 00 0348*  	dw 19, 9, 16
       10 00       
041018 15 00 14 00 0349*  	dw 21, 20, 25
       19 00       
04101E 15 00 17 00 0350*  	dw 21, 23, 20
       14 00       
041024 14 00 16 00 0351*  	dw 20, 22, 26
       1A 00       
04102A 14 00 17 00 0352*  	dw 20, 23, 22
       16 00       
041030 17 00 18 00 0353*  	dw 23, 24, 22
       16 00       
041036 17 00 15 00 0354*  	dw 23, 21, 24
       18 00       
04103C 15 00 1B 00 0355*  	dw 21, 27, 24
       18 00       
041042 15 00 19 00 0356*  	dw 21, 25, 27
       1B 00       
041048 19 00 1A 00 0357*  	dw 25, 26, 27
       1B 00       
04104E 19 00 14 00 0358*  	dw 25, 20, 26
       1A 00       
041054 18 00 1A 00 0359*  	dw 24, 26, 22
       16 00       
04105A 18 00 1B 00 0360*  	dw 24, 27, 26
       1A 00       
041060 25 00 1C 00 0361*  	dw 37, 28, 41
       29 00       
041066 25 00 23 00 0362*  	dw 37, 35, 28
       1C 00       
04106C 2C 00 28 00 0363*  	dw 44, 40, 34
       22 00       
041072 2C 00 20 00 0364*  	dw 44, 32, 40
       28 00       
041078 1D 00 22 00 0365*  	dw 29, 34, 38
       26 00       
04107E 1D 00 2C 00 0366*  	dw 29, 44, 34
       22 00       
041084 1F 00 26 00 0367*  	dw 31, 38, 36
       24 00       
04108A 1F 00 1D 00 0368*  	dw 31, 29, 38
       26 00       
041090 21 00 24 00 0369*  	dw 33, 36, 30
       1E 00       
041096 21 00 1F 00 0370*  	dw 33, 31, 36
       24 00       
04109C 20 00 1E 00 0371*  	dw 32, 30, 40
       28 00       
0410A2 20 00 21 00 0372*  	dw 32, 33, 30
       1E 00       
0410A8 2B 00 1F 00 0373*  	dw 43, 31, 42
       2A 00       
0410AE 2B 00 1D 00 0374*  	dw 43, 29, 31
       1F 00       
0410B4 2D 00 21 00 0375*  	dw 45, 33, 32
       20 00       
0410BA 2D 00 2A 00 0376*  	dw 45, 42, 33
       21 00       
0410C0 22 00 1C 00 0377*  	dw 34, 28, 35
       23 00       
0410C6 22 00 28 00 0378*  	dw 34, 40, 28
       1C 00       
0410CC 26 00 23 00 0379*  	dw 38, 35, 37
       25 00       
0410D2 26 00 22 00 0380*  	dw 38, 34, 35
       23 00       
0410D8 24 00 25 00 0381*  	dw 36, 37, 39
       27 00       
0410DE 24 00 26 00 0382*  	dw 36, 38, 37
       25 00       
0410E4 1E 00 27 00 0383*  	dw 30, 39, 41
       29 00       
0410EA 1E 00 24 00 0384*  	dw 30, 36, 39
       27 00       
0410F0 28 00 29 00 0385*  	dw 40, 41, 28
       1C 00       
0410F6 28 00 1E 00 0386*  	dw 40, 30, 41
       29 00       
0410FC 2A 00 2D 00 0387*  	dw 42, 45, 43
       2B 00       
041102 25 00 29 00 0388*  	dw 37, 41, 39
       27 00       
041108 2C 00 2D 00 0389*  	dw 44, 45, 32
       20 00       
04110E 1D 00 2B 00 0390*  	dw 29, 43, 44
       2C 00       
041114 2C 00 2B 00 0391*  	dw 44, 43, 45
       2D 00       
04111A 21 00 2A 00 0392*  	dw 33, 42, 31
       1F 00       
041120 43 00 2F 00 0393*  	dw 67, 47, 46
       2E 00       
041126 43 00 3C 00 0394*  	dw 67, 60, 47
       2F 00       
04112C 3A 00 2F 00 0395*  	dw 58, 47, 48
       30 00       
041132 3A 00 2E 00 0396*  	dw 58, 46, 47
       2F 00       
041138 31 00 30 00 0397*  	dw 49, 48, 56
       38 00       
04113E 31 00 3A 00 0398*  	dw 49, 58, 48
       30 00       
041144 31 00 36 00 0399*  	dw 49, 54, 50
       32 00       
04114A 31 00 38 00 0400*  	dw 49, 56, 54
       36 00       
041150 32 00 3C 00 0401*  	dw 50, 60, 67
       43 00       
041156 32 00 36 00 0402*  	dw 50, 54, 60
       3C 00       
04115C 33 00 39 00 0403*  	dw 51, 57, 52
       34 00       
041162 33 00 35 00 0404*  	dw 51, 53, 57
       39 00       
041168 38 00 33 00 0405*  	dw 56, 51, 55
       37 00       
04116E 38 00 30 00 0406*  	dw 56, 48, 51
       33 00       
041174 36 00 37 00 0407*  	dw 54, 55, 52
       34 00       
04117A 36 00 38 00 0408*  	dw 54, 56, 55
       37 00       
041180 39 00 36 00 0409*  	dw 57, 54, 52
       34 00       
041186 39 00 3C 00 0410*  	dw 57, 60, 54
       36 00       
04118C 3E 00 43 00 0411*  	dw 62, 67, 46
       2E 00       
041192 3E 00 3D 00 0412*  	dw 62, 61, 67
       43 00       
041198 3B 00 2E 00 0413*  	dw 59, 46, 58
       3A 00       
04119E 3B 00 3E 00 0414*  	dw 59, 62, 46
       2E 00       
0411A4 40 00 3A 00 0415*  	dw 64, 58, 49
       31 00       
0411AA 40 00 3B 00 0416*  	dw 64, 59, 58
       3A 00       
0411B0 44 00 31 00 0417*  	dw 68, 49, 50
       32 00       
0411B6 44 00 40 00 0418*  	dw 68, 64, 49
       31 00       
0411BC 41 00 42 00 0419*  	dw 65, 66, 63
       3F 00       
0411C2 33 00 34 00 0420*  	dw 51, 52, 55
       37 00       
0411C8 35 00 2F 00 0421*  	dw 53, 47, 57
       39 00       
0411CE 39 00 2F 00 0422*  	dw 57, 47, 60
       3C 00       
0411D4 33 00 2F 00 0423*  	dw 51, 47, 53
       35 00       
0411DA 2F 00 33 00 0424*  	dw 47, 51, 48
       30 00       
0411E0 3E 00 42 00 0425*  	dw 62, 66, 61
       3D 00       
0411E6 3B 00 3F 00 0426*  	dw 59, 63, 62
       3E 00       
0411EC 3E 00 3F 00 0427*  	dw 62, 63, 66
       42 00       
0411F2 3F 00 40 00 0428*  	dw 63, 64, 65
       41 00       
0411F8 40 00 3F 00 0429*  	dw 64, 63, 59
       3B 00       
0411FE 44 00 41 00 0430*  	dw 68, 65, 64
       40 00       
041204 3D 00 42 00 0431*  	dw 61, 66, 68
       44 00       
04120A 44 00 42 00 0432*  	dw 68, 66, 65
       41 00       
041210 32 00 43 00 0433*  	dw 50, 67, 61
       3D 00       
041216 3D 00 44 00 0434*  	dw 61, 68, 50
       32 00       
04121C 51 00 45 00 0435*  	dw 81, 69, 82
       52 00       
041222 51 00 46 00 0436*  	dw 81, 70, 69
       45 00       
041228 47 00 4A 00 0437*  	dw 71, 74, 72
       48 00       
04122E 47 00 49 00 0438*  	dw 71, 73, 74
       4A 00       
041234 49 00 52 00 0439*  	dw 73, 82, 74
       4A 00       
04123A 49 00 51 00 0440*  	dw 73, 81, 82
       52 00       
041240 4B 00 4C 00 0441*  	dw 75, 76, 79
       4F 00       
041246 4B 00 4D 00 0442*  	dw 75, 77, 76
       4C 00       
04124C 4D 00 4E 00 0443*  	dw 77, 78, 80
       50 00       
041252 4D 00 4B 00 0444*  	dw 77, 75, 78
       4E 00       
041258 4F 00 54 00 0445*  	dw 79, 84, 83
       53 00       
04125E 4F 00 4C 00 0446*  	dw 79, 76, 84
       54 00       
041264 50 00 51 00 0447*  	dw 80, 81, 73
       49 00       
04126A 50 00 4E 00 0448*  	dw 80, 78, 81
       51 00       
041270 48 00 52 00 0449*  	dw 72, 82, 69
       45 00       
041276 48 00 4A 00 0450*  	dw 72, 74, 82
       52 00       
04127C 48 00 46 00 0451*  	dw 72, 70, 71
       47 00       
041282 48 00 45 00 0452*  	dw 72, 69, 70
       46 00       
041288 53 00 47 00 0453*  	dw 83, 71, 70
       46 00       
04128E 53 00 54 00 0454*  	dw 83, 84, 71
       47 00       
041294 46 00 4F 00 0455*  	dw 70, 79, 83
       53 00       
04129A 4F 00 46 00 0456*  	dw 79, 70, 75
       4B 00       
0412A0 4D 00 54 00 0457*  	dw 77, 84, 76
       4C 00       
0412A6 54 00 4D 00 0458*  	dw 84, 77, 71
       47 00       
0412AC 46 00 51 00 0459*  	dw 70, 81, 78
       4E 00       
0412B2 46 00 4E 00 0460*  	dw 70, 78, 75
       4B 00       
0412B8 47 00 50 00 0461*  	dw 71, 80, 73
       49 00       
0412BE 50 00 47 00 0462*  	dw 80, 71, 77
       4D 00       
0412C4 59 00 55 00 0463*  	dw 89, 85, 88
       58 00       
0412CA 59 00 56 00 0464*  	dw 89, 86, 85
       55 00       
0412D0 57 00 58 00 0465*  	dw 87, 88, 91
       5B 00       
0412D6 57 00 59 00 0466*  	dw 87, 89, 88
       58 00       
0412DC 5C 00 59 00 0467*  	dw 92, 89, 87
       57 00       
0412E2 5C 00 56 00 0468*  	dw 92, 86, 89
       59 00       
0412E8 5A 00 56 00 0469*  	dw 90, 86, 92
       5C 00       
0412EE 5A 00 55 00 0470*  	dw 90, 85, 86
       56 00       
0412F4 5B 00 55 00 0471*  	dw 91, 85, 90
       5A 00       
0412FA 5B 00 58 00 0472*  	dw 91, 88, 85
       55 00       
041300 5B 00 5C 00 0473*  	dw 91, 92, 87
       57 00       
041306 5B 00 5A 00 0474*  	dw 91, 90, 92
       5C 00       
04130C 66 00 69 00 0475*  	dw 102, 105, 99
       63 00       
041312 66 00 67 00 0476*  	dw 102, 103, 105
       69 00       
041318 6A 00 6C 00 0477*  	dw 106, 108, 93
       5D 00       
04131E 6A 00 61 00 0478*  	dw 106, 97, 108
       6C 00       
041324 5D 00 5E 00 0479*  	dw 93, 94, 100
       64 00       
04132A 5D 00 6C 00 0480*  	dw 93, 108, 94
       5E 00       
041330 64 00 60 00 0481*  	dw 100, 96, 101
       65 00       
041336 64 00 5E 00 0482*  	dw 100, 94, 96
       60 00       
04133C 65 00 5F 00 0483*  	dw 101, 95, 104
       68 00       
041342 65 00 60 00 0484*  	dw 101, 96, 95
       5F 00       
041348 68 00 61 00 0485*  	dw 104, 97, 106
       6A 00       
04134E 68 00 5F 00 0486*  	dw 104, 95, 97
       61 00       
041354 60 00 6D 00 0487*  	dw 96, 109, 110
       6E 00       
04135A 60 00 5E 00 0488*  	dw 96, 94, 109
       6D 00       
041360 5F 00 6B 00 0489*  	dw 95, 107, 97
       61 00       
041366 5F 00 6E 00 0490*  	dw 95, 110, 107
       6B 00       
04136C 6A 00 62 00 0491*  	dw 106, 98, 105
       69 00       
041372 6A 00 5D 00 0492*  	dw 106, 93, 98
       62 00       
041378 5D 00 63 00 0493*  	dw 93, 99, 98
       62 00       
04137E 5D 00 64 00 0494*  	dw 93, 100, 99
       63 00       
041384 64 00 66 00 0495*  	dw 100, 102, 99
       63 00       
04138A 64 00 65 00 0496*  	dw 100, 101, 102
       66 00       
041390 65 00 67 00 0497*  	dw 101, 103, 102
       66 00       
041396 65 00 68 00 0498*  	dw 101, 104, 103
       67 00       
04139C 68 00 69 00 0499*  	dw 104, 105, 103
       67 00       
0413A2 68 00 6A 00 0500*  	dw 104, 106, 105
       69 00       
0413A8 6B 00 6E 00 0501*  	dw 107, 110, 109
       6D 00       
0413AE 63 00 69 00 0502*  	dw 99, 105, 98
       62 00       
0413B4 6B 00 6C 00 0503*  	dw 107, 108, 97
       61 00       
0413BA 6D 00 5E 00 0504*  	dw 109, 94, 108
       6C 00       
0413C0 6D 00 6C 00 0505*  	dw 109, 108, 107
       6B 00       
0413C6 6E 00 5F 00 0506*  	dw 110, 95, 96
       60 00       
0413CC 7C 00 85 00 0507*  	dw 124, 133, 111
       6F 00       
0413D2 7C 00 77 00 0508*  	dw 124, 119, 133
       85 00       
0413D8 78 00 7C 00 0509*  	dw 120, 124, 111
       6F 00       
0413DE 78 00 70 00 0510*  	dw 120, 112, 124
       7C 00       
0413E4 71 00 70 00 0511*  	dw 113, 112, 120
       78 00       
0413EA 71 00 75 00 0512*  	dw 113, 117, 112
       70 00       
0413F0 72 00 71 00 0513*  	dw 114, 113, 122
       7A 00       
0413F6 72 00 75 00 0514*  	dw 114, 117, 113
       71 00       
0413FC 77 00 7A 00 0515*  	dw 119, 122, 133
       85 00       
041402 77 00 72 00 0516*  	dw 119, 114, 122
       7A 00       
041408 73 00 76 00 0517*  	dw 115, 118, 126
       7E 00       
04140E 73 00 74 00 0518*  	dw 115, 116, 118
       76 00       
041414 7E 00 75 00 0519*  	dw 126, 117, 115
       73 00       
04141A 7E 00 70 00 0520*  	dw 126, 112, 117
       75 00       
041420 73 00 72 00 0521*  	dw 115, 114, 116
       74 00       
041426 73 00 75 00 0522*  	dw 115, 117, 114
       72 00       
04142C 76 00 72 00 0523*  	dw 118, 114, 119
       77 00       
041432 76 00 74 00 0524*  	dw 118, 116, 114
       72 00       
041438 7F 00 6F 00 0525*  	dw 127, 111, 133
       85 00       
04143E 7F 00 80 00 0526*  	dw 127, 128, 111
       6F 00       
041444 80 00 78 00 0527*  	dw 128, 120, 111
       6F 00       
04144A 80 00 79 00 0528*  	dw 128, 121, 120
       78 00       
041450 79 00 71 00 0529*  	dw 121, 113, 120
       78 00       
041456 79 00 81 00 0530*  	dw 121, 129, 113
       71 00       
04145C 81 00 7A 00 0531*  	dw 129, 122, 113
       71 00       
041462 81 00 84 00 0532*  	dw 129, 132, 122
       7A 00       
041468 7B 00 82 00 0533*  	dw 123, 130, 131
       83 00       
04146E 7E 00 76 00 0534*  	dw 126, 118, 125
       7D 00       
041474 7C 00 7D 00 0535*  	dw 124, 125, 118
       76 00       
04147A 7C 00 76 00 0536*  	dw 124, 118, 119
       77 00       
041480 7E 00 7C 00 0537*  	dw 126, 124, 112
       70 00       
041486 7C 00 7E 00 0538*  	dw 124, 126, 125
       7D 00       
04148C 7B 00 80 00 0539*  	dw 123, 128, 127
       7F 00       
041492 83 00 79 00 0540*  	dw 131, 121, 128
       80 00       
041498 83 00 80 00 0541*  	dw 131, 128, 123
       7B 00       
04149E 81 00 83 00 0542*  	dw 129, 131, 130
       82 00       
0414A4 83 00 81 00 0543*  	dw 131, 129, 121
       79 00       
0414AA 82 00 84 00 0544*  	dw 130, 132, 129
       81 00       
0414B0 7B 00 7F 00 0545*  	dw 123, 127, 132
       84 00       
0414B6 7B 00 84 00 0546*  	dw 123, 132, 130
       82 00       
0414BC 7A 00 84 00 0547*  	dw 122, 132, 127
       7F 00       
0414C2 7F 00 85 00 0548*  	dw 127, 133, 122
       7A 00       
0414C8 8D 00 93 00 0549*  	dw 141, 147, 138
       8A 00       
0414CE 8D 00 8F 00 0550*  	dw 141, 143, 147
       93 00       
0414D4 8C 00 95 00 0551*  	dw 140, 149, 139
       8B 00       
0414DA 8C 00 86 00 0552*  	dw 140, 134, 149
       95 00       
0414E0 8A 00 86 00 0553*  	dw 138, 134, 140
       8C 00       
0414E6 8A 00 93 00 0554*  	dw 138, 147, 134
       86 00       
0414EC 87 00 90 00 0555*  	dw 135, 144, 145
       91 00       
0414F2 87 00 92 00 0556*  	dw 135, 146, 144
       90 00       
0414F8 88 00 92 00 0557*  	dw 136, 146, 148
       94 00       
0414FE 88 00 90 00 0558*  	dw 136, 144, 146
       92 00       
041504 89 00 91 00 0559*  	dw 137, 145, 142
       8E 00       
04150A 89 00 87 00 0560*  	dw 137, 135, 145
       91 00       
041510 93 00 94 00 0561*  	dw 147, 148, 134
       86 00       
041516 93 00 88 00 0562*  	dw 147, 136, 148
       94 00       
04151C 8A 00 8B 00 0563*  	dw 138, 139, 141
       8D 00       
041522 8A 00 8C 00 0564*  	dw 138, 140, 139
       8B 00       
041528 8D 00 95 00 0565*  	dw 141, 149, 143
       8F 00       
04152E 8D 00 8B 00 0566*  	dw 141, 139, 149
       95 00       
041534 8F 00 89 00 0567*  	dw 143, 137, 142
       8E 00       
04153A 8F 00 95 00 0568*  	dw 143, 149, 137
       89 00       
041540 91 00 8F 00 0569*  	dw 145, 143, 142
       8E 00       
041546 8F 00 91 00 0570*  	dw 143, 145, 144
       90 00       
04154C 89 00 92 00 0571*  	dw 137, 146, 135
       87 00       
041552 92 00 89 00 0572*  	dw 146, 137, 149
       95 00       
041558 93 00 8F 00 0573*  	dw 147, 143, 136
       88 00       
04155E 88 00 8F 00 0574*  	dw 136, 143, 144
       90 00       
041564 94 00 95 00 0575*  	dw 148, 149, 134
       86 00       
04156A 95 00 94 00 0576*  	dw 149, 148, 146
       92 00       
041570 AB 00 96 00 0577*  	dw 171, 150, 177
       B1 00       
041576 AB 00 97 00 0578*  	dw 171, 151, 150
       96 00       
04157C AE 00 98 00 0579*  	dw 174, 152, 169
       A9 00       
041582 AE 00 AF 00 0580*  	dw 174, 175, 152
       98 00       
041588 99 00 A7 00 0581*  	dw 153, 167, 166
       A6 00       
04158E 99 00 A5 00 0582*  	dw 153, 165, 167
       A7 00       
041594 A5 00 9B 00 0583*  	dw 165, 155, 167
       A7 00       
04159A A5 00 9A 00 0584*  	dw 165, 154, 155
       9B 00       
0415A0 9A 00 9C 00 0585*  	dw 154, 156, 155
       9B 00       
0415A6 9A 00 AD 00 0586*  	dw 154, 173, 156
       9C 00       
0415AC A2 00 9E 00 0587*  	dw 162, 158, 157
       9D 00       
0415B2 A2 00 A1 00 0588*  	dw 162, 161, 158
       9E 00       
0415B8 9E 00 A0 00 0589*  	dw 158, 160, 159
       9F 00       
0415BE 9E 00 A1 00 0590*  	dw 158, 161, 160
       A0 00       
0415C4 A1 00 A4 00 0591*  	dw 161, 164, 160
       A0 00       
0415CA A1 00 A2 00 0592*  	dw 161, 162, 164
       A4 00       
0415D0 A2 00 A3 00 0593*  	dw 162, 163, 164
       A4 00       
0415D6 A2 00 9D 00 0594*  	dw 162, 157, 163
       A3 00       
0415DC A4 00 9F 00 0595*  	dw 164, 159, 160
       A0 00       
0415E2 A4 00 A3 00 0596*  	dw 164, 163, 159
       9F 00       
0415E8 AF 00 9A 00 0597*  	dw 175, 154, 165
       A5 00       
0415EE AF 00 AE 00 0598*  	dw 175, 174, 154
       9A 00       
0415F4 A7 00 9C 00 0599*  	dw 167, 156, 166
       A6 00       
0415FA A7 00 9B 00 0600*  	dw 167, 155, 156
       9C 00       
041600 A6 00 AD 00 0601*  	dw 166, 173, 153
       99 00       
041606 A6 00 9C 00 0602*  	dw 166, 156, 173
       AD 00       
04160C B0 00 B2 00 0603*  	dw 176, 178, 168
       A8 00       
041612 B0 00 AC 00 0604*  	dw 176, 172, 178
       B2 00       
041618 A8 00 AA 00 0605*  	dw 168, 170, 179
       B3 00       
04161E A8 00 B2 00 0606*  	dw 168, 178, 170
       AA 00       
041624 A9 00 B1 00 0607*  	dw 169, 177, 150
       96 00       
04162A A9 00 98 00 0608*  	dw 169, 152, 177
       B1 00       
041630 97 00 B3 00 0609*  	dw 151, 179, 170
       AA 00       
041636 97 00 AB 00 0610*  	dw 151, 171, 179
       B3 00       
04163C 99 00 AC 00 0611*  	dw 153, 172, 176
       B0 00       
041642 99 00 AD 00 0612*  	dw 153, 173, 172
       AC 00       
041648 AC 00 AD 00 0613*  	dw 172, 173, 154
       9A 00       
04164E AC 00 9A 00 0614*  	dw 172, 154, 174
       AE 00       
041654 99 00 B0 00 0615*  	dw 153, 176, 175
       AF 00       
04165A 99 00 AF 00 0616*  	dw 153, 175, 165
       A5 00       
041660 A9 00 96 00 0617*  	dw 169, 150, 151
       97 00       
041666 97 00 AE 00 0618*  	dw 151, 174, 169
       A9 00       
04166C B1 00 98 00 0619*  	dw 177, 152, 175
       AF 00       
041672 AF 00 AB 00 0620*  	dw 175, 171, 177
       B1 00       
041678 B3 00 B0 00 0621*  	dw 179, 176, 168
       A8 00       
04167E B2 00 AC 00 0622*  	dw 178, 172, 170
       AA 00       
041684 97 00 AA 00 0623*  	dw 151, 170, 172
       AC 00       
04168A AC 00 AE 00 0624*  	dw 172, 174, 151
       97 00       
041690 B3 00 AB 00 0625*  	dw 179, 171, 175
       AF 00       
041696 AF 00 B0 00 0626*  	dw 175, 176, 179
       B3 00       
04169C B4 00 B6 00 0627*  	dw 180, 182, 181
       B5 00       
0416A2 B4 00 C0 00 0628*  	dw 180, 192, 182
       B6 00       
0416A8 B5 00 B7 00 0629*  	dw 181, 183, 189
       BD 00       
0416AE B5 00 B6 00 0630*  	dw 181, 182, 183
       B7 00       
0416B4 BD 00 B9 00 0631*  	dw 189, 185, 184
       B8 00       
0416BA BD 00 B7 00 0632*  	dw 189, 183, 185
       B9 00       
0416C0 B8 00 C3 00 0633*  	dw 184, 195, 186
       BA 00       
0416C6 B8 00 B9 00 0634*  	dw 184, 185, 195
       C3 00       
0416CC BA 00 C0 00 0635*  	dw 186, 192, 180
       B4 00       
0416D2 BA 00 C3 00 0636*  	dw 186, 195, 192
       C0 00       
0416D8 BE 00 BC 00 0637*  	dw 190, 188, 191
       BF 00       
0416DE BB 00 C2 00 0638*  	dw 187, 194, 193
       C1 00       
0416E4 B5 00 BE 00 0639*  	dw 181, 190, 191
       BF 00       
0416EA B5 00 BF 00 0640*  	dw 181, 191, 180
       B4 00       
0416F0 BE 00 B5 00 0641*  	dw 190, 181, 189
       BD 00       
0416F6 B8 00 BC 00 0642*  	dw 184, 188, 190
       BE 00       
0416FC B8 00 BE 00 0643*  	dw 184, 190, 189
       BD 00       
041702 BA 00 BC 00 0644*  	dw 186, 188, 184
       B8 00       
041708 BF 00 BA 00 0645*  	dw 191, 186, 180
       B4 00       
04170E BA 00 BF 00 0646*  	dw 186, 191, 188
       BC 00       
041714 BB 00 B6 00 0647*  	dw 187, 182, 192
       C0 00       
04171A C1 00 B7 00 0648*  	dw 193, 183, 182
       B6 00       
041720 C1 00 B6 00 0649*  	dw 193, 182, 187
       BB 00       
041726 B9 00 C1 00 0650*  	dw 185, 193, 194
       C2 00       
04172C C1 00 B9 00 0651*  	dw 193, 185, 183
       B7 00       
041732 C2 00 C3 00 0652*  	dw 194, 195, 185
       B9 00       
041738 BB 00 C0 00 0653*  	dw 187, 192, 195
       C3 00       
04173E BB 00 C3 00 0654*  	dw 187, 195, 194
       C2 00       
041744 C4 00 C9 00 0655*  	dw 196, 201, 197
       C5 00       
04174A C4 00 C7 00 0656*  	dw 196, 199, 201
       C9 00       
041750 C7 00 C6 00 0657*  	dw 199, 198, 203
       CB 00       
041756 C7 00 CD 00 0658*  	dw 199, 205, 198
       C6 00       
04175C CB 00 C8 00 0659*  	dw 203, 200, 201
       C9 00       
041762 CB 00 C6 00 0660*  	dw 203, 198, 200
       C8 00       
041768 C9 00 CA 00 0661*  	dw 201, 202, 197
       C5 00       
04176E C9 00 C8 00 0662*  	dw 201, 200, 202
       CA 00       
041774 C5 00 D0 00 0663*  	dw 197, 208, 196
       C4 00       
04177A C5 00 CA 00 0664*  	dw 197, 202, 208
       D0 00       
041780 C4 00 CD 00 0665*  	dw 196, 205, 199
       C7 00       
041786 C4 00 D0 00 0666*  	dw 196, 208, 205
       CD 00       
04178C CC 00 CF 00 0667*  	dw 204, 207, 206
       CE 00       
041792 CB 00 C9 00 0668*  	dw 203, 201, 199
       C7 00       
041798 CC 00 C6 00 0669*  	dw 204, 198, 205
       CD 00       
04179E CE 00 C8 00 0670*  	dw 206, 200, 198
       C6 00       
0417A4 CE 00 C6 00 0671*  	dw 206, 198, 204
       CC 00       
0417AA CA 00 CE 00 0672*  	dw 202, 206, 207
       CF 00       
0417B0 CE 00 CA 00 0673*  	dw 206, 202, 200
       C8 00       
0417B6 CF 00 D0 00 0674*  	dw 207, 208, 202
       CA 00       
0417BC CC 00 CD 00 0675*  	dw 204, 205, 208
       D0 00       
0417C2 CC 00 D0 00 0676*  	dw 204, 208, 207
       CF 00       
0417C8 D1 00 D8 00 0677*  	dw 209, 216, 210
       D2 00       
0417CE D1 00 D4 00 0678*  	dw 209, 212, 216
       D8 00       
0417D4 D4 00 D5 00 0679*  	dw 212, 213, 211
       D3 00       
0417DA D4 00 D1 00 0680*  	dw 212, 209, 213
       D5 00       
0417E0 D6 00 D1 00 0681*  	dw 214, 209, 210
       D2 00       
0417E6 D6 00 D5 00 0682*  	dw 214, 213, 209
       D1 00       
0417EC D8 00 D3 00 0683*  	dw 216, 211, 215
       D7 00       
0417F2 D8 00 D4 00 0684*  	dw 216, 212, 211
       D3 00       
0417F8 D3 00 D6 00 0685*  	dw 211, 214, 215
       D7 00       
0417FE D3 00 D5 00 0686*  	dw 211, 213, 214
       D6 00       
041804 D2 00 D7 00 0687*  	dw 210, 215, 214
       D6 00       
04180A D2 00 D8 00 0688*  	dw 210, 216, 215
       D7 00       
041810 E3 00 E1 00 0689*  	dw 227, 225, 223
       DF 00       
041816 E3 00 D9 00 0690*  	dw 227, 217, 225
       E1 00       
04181C E5 00 DF 00 0691*  	dw 229, 223, 219
       DB 00       
041822 E5 00 E3 00 0692*  	dw 229, 227, 223
       DF 00       
041828 DA 00 DB 00 0693*  	dw 218, 219, 220
       DC 00       
04182E DA 00 E5 00 0694*  	dw 218, 229, 219
       DB 00       
041834 E6 00 DC 00 0695*  	dw 230, 220, 221
       DD 00       
04183A E6 00 DA 00 0696*  	dw 230, 218, 220
       DC 00       
041840 D9 00 DD 00 0697*  	dw 217, 221, 225
       E1 00       
041846 D9 00 E6 00 0698*  	dw 217, 230, 221
       DD 00       
04184C DE 00 E0 00 0699*  	dw 222, 224, 226
       E2 00       
041852 E8 00 E7 00 0700*  	dw 232, 231, 228
       E4 00       
041858 E0 00 DF 00 0701*  	dw 224, 223, 226
       E2 00       
04185E E2 00 DF 00 0702*  	dw 226, 223, 225
       E1 00       
041864 DF 00 E0 00 0703*  	dw 223, 224, 219
       DB 00       
04186A DE 00 DC 00 0704*  	dw 222, 220, 224
       E0 00       
041870 E0 00 DC 00 0705*  	dw 224, 220, 219
       DB 00       
041876 DE 00 DD 00 0706*  	dw 222, 221, 220
       DC 00       
04187C DD 00 E2 00 0707*  	dw 221, 226, 225
       E1 00       
041882 E2 00 DD 00 0708*  	dw 226, 221, 222
       DE 00       
041888 E3 00 E7 00 0709*  	dw 227, 231, 217
       D9 00       
04188E E5 00 E4 00 0710*  	dw 229, 228, 227
       E3 00       
041894 E3 00 E4 00 0711*  	dw 227, 228, 231
       E7 00       
04189A E4 00 DA 00 0712*  	dw 228, 218, 232
       E8 00       
0418A0 DA 00 E4 00 0713*  	dw 218, 228, 229
       E5 00       
0418A6 E6 00 E8 00 0714*  	dw 230, 232, 218
       DA 00       
0418AC D9 00 E7 00 0715*  	dw 217, 231, 230
       E6 00       
0418B2 E6 00 E7 00 0716*  	dw 230, 231, 232
       E8 00       
0418B8 F1 00 EE 00 0717*  	dw 241, 238, 239
       EF 00       
0418BE F1 00 E9 00 0718*  	dw 241, 233, 238
       EE 00       
0418C4 EB 00 E9 00 0719*  	dw 235, 233, 234
       EA 00       
0418CA EB 00 F2 00 0720*  	dw 235, 242, 233
       E9 00       
0418D0 ED 00 EA 00 0721*  	dw 237, 234, 241
       F1 00       
0418D6 ED 00 EB 00 0722*  	dw 237, 235, 234
       EA 00       
0418DC EC 00 F1 00 0723*  	dw 236, 241, 239
       EF 00       
0418E2 EC 00 ED 00 0724*  	dw 236, 237, 241
       F1 00       
0418E8 F4 00 EF 00 0725*  	dw 244, 239, 238
       EE 00       
0418EE F4 00 EC 00 0726*  	dw 244, 236, 239
       EF 00       
0418F4 F2 00 EE 00 0727*  	dw 242, 238, 233
       E9 00       
0418FA F2 00 F4 00 0728*  	dw 242, 244, 238
       EE 00       
041900 F0 00 F5 00 0729*  	dw 240, 245, 243
       F3 00       
041906 F1 00 EA 00 0730*  	dw 241, 234, 233
       E9 00       
04190C EB 00 F5 00 0731*  	dw 235, 245, 242
       F2 00       
041912 ED 00 F3 00 0732*  	dw 237, 243, 235
       EB 00       
041918 EB 00 F3 00 0733*  	dw 235, 243, 245
       F5 00       
04191E F3 00 EC 00 0734*  	dw 243, 236, 240
       F0 00       
041924 EC 00 F3 00 0735*  	dw 236, 243, 237
       ED 00       
04192A F4 00 F0 00 0736*  	dw 244, 240, 236
       EC 00       
041930 F2 00 F5 00 0737*  	dw 242, 245, 244
       F4 00       
041936 F4 00 F5 00 0738*  	dw 244, 245, 240
       F0 00       
04193C FB 00 F6 00 0739*  	dw 251, 246, 249
       F9 00       
041942 FB 00 F8 00 0740*  	dw 251, 248, 246
       F6 00       
041948 F6 00 F7 00 0741*  	dw 246, 247, 250
       FA 00       
04194E F6 00 F8 00 0742*  	dw 246, 248, 247
       F7 00       
041954 F9 00 FA 00 0743*  	dw 249, 250, 253
       FD 00       
04195A F9 00 F6 00 0744*  	dw 249, 246, 250
       FA 00       
041960 F8 00 FC 00 0745*  	dw 248, 252, 247
       F7 00       
041966 F8 00 FB 00 0746*  	dw 248, 251, 252
       FC 00       
04196C FA 00 FC 00 0747*  	dw 250, 252, 253
       FD 00       
041972 FA 00 F7 00 0748*  	dw 250, 247, 252
       FC 00       
041978 FB 00 FD 00 0749*  	dw 251, 253, 252
       FC 00       
04197E FB 00 F9 00 0750*  	dw 251, 249, 253
       FD 00       
041984 2B 01 09 01 0751*  	dw 299, 265, 263
       07 01       
04198A 2B 01 1C 01 0752*  	dw 299, 284, 265
       09 01       
041990 07 01 FF 00 0753*  	dw 263, 255, 254
       FE 00       
041996 07 01 09 01 0754*  	dw 263, 265, 255
       FF 00       
04199C 1C 01 01 01 0755*  	dw 284, 257, 256
       00 01       
0419A2 1C 01 2B 01 0756*  	dw 284, 299, 257
       01 01       
0419A8 05 01 26 01 0757*  	dw 261, 294, 280
       18 01       
0419AE 19 01 02 01 0758*  	dw 281, 258, 261
       05 01       
0419B4 03 01 02 01 0759*  	dw 259, 258, 260
       04 01       
0419BA 27 01 04 01 0760*  	dw 295, 260, 278
       16 01       
0419C0 24 01 04 01 0761*  	dw 292, 260, 295
       27 01       
0419C6 05 01 18 01 0762*  	dw 261, 280, 281
       19 01       
0419CC 04 01 02 01 0763*  	dw 260, 258, 278
       16 01       
0419D2 05 01 02 01 0764*  	dw 261, 258, 259
       03 01       
0419D8 06 01 07 01 0765*  	dw 262, 263, 254
       FE 00       
0419DE 2B 01 07 01 0766*  	dw 299, 263, 262
       06 01       
0419E4 FF 00 09 01 0767*  	dw 255, 265, 264
       08 01       
0419EA 08 01 09 01 0768*  	dw 264, 265, 284
       1C 01       
0419F0 0A 01 29 01 0769*  	dw 266, 297, 255
       FF 00       
0419F6 FF 00 08 01 0770*  	dw 255, 264, 266
       0A 01       
0419FC FE 00 29 01 0771*  	dw 254, 297, 266
       0A 01       
041A02 0A 01 06 01 0772*  	dw 266, 262, 254
       FE 00       
041A08 0B 01 0A 01 0773*  	dw 267, 266, 258
       02 01       
041A0E 19 01 0C 01 0774*  	dw 281, 268, 267
       0B 01       
041A14 06 01 0B 01 0775*  	dw 262, 267, 268
       0C 01       
041A1A 0C 01 2B 01 0776*  	dw 268, 299, 262
       06 01       
041A20 02 01 0A 01 0777*  	dw 258, 266, 283
       1B 01       
041A26 16 01 02 01 0778*  	dw 278, 258, 283
       1B 01       
041A2C 0D 01 1B 01 0779*  	dw 269, 283, 264
       08 01       
041A32 08 01 1C 01 0780*  	dw 264, 284, 269
       0D 01       
041A38 0E 01 0D 01 0781*  	dw 270, 269, 274
       12 01       
041A3E 1E 01 0E 01 0782*  	dw 286, 270, 291
       23 01       
041A44 1A 01 17 01 0783*  	dw 282, 279, 268
       0C 01       
041A4A 17 01 0F 01 0784*  	dw 279, 271, 276
       14 01       
041A50 10 01 13 01 0785*  	dw 272, 275, 271
       0F 01       
041A56 0F 01 17 01 0786*  	dw 271, 279, 282
       1A 01       
041A5C 23 01 11 01 0787*  	dw 291, 273, 286
       1E 01       
041A62 15 01 23 01 0788*  	dw 277, 291, 274
       12 01       
041A68 1D 01 13 01 0789*  	dw 285, 275, 288
       20 01       
041A6E 14 01 0F 01 0790*  	dw 276, 271, 275
       13 01       
041A74 12 01 1D 01 0791*  	dw 274, 285, 277
       15 01       
041A7A 11 01 15 01 0792*  	dw 273, 277, 288
       20 01       
041A80 28 01 27 01 0793*  	dw 296, 295, 286
       1E 01       
041A86 1E 01 16 01 0794*  	dw 286, 278, 269
       0D 01       
041A8C 14 01 0C 01 0795*  	dw 276, 268, 279
       17 01       
041A92 18 01 1A 01 0796*  	dw 280, 282, 281
       19 01       
041A98 0A 01 0B 01 0797*  	dw 266, 267, 262
       06 01       
041A9E 0C 01 19 01 0798*  	dw 268, 281, 282
       1A 01       
041AA4 1F 01 10 01 0799*  	dw 287, 272, 282
       1A 01       
041AAA 13 01 1D 01 0800*  	dw 275, 285, 276
       14 01       
041AB0 1B 01 0D 01 0801*  	dw 283, 269, 278
       16 01       
041AB6 12 01 0D 01 0802*  	dw 274, 269, 284
       1C 01       
041ABC 12 01 00 01 0803*  	dw 274, 256, 285
       1D 01       
041AC2 16 01 1E 01 0804*  	dw 278, 286, 295
       27 01       
041AC8 1F 01 22 01 0805*  	dw 287, 290, 288
       20 01       
041ACE 20 01 22 01 0806*  	dw 288, 290, 296
       28 01       
041AD4 28 01 22 01 0807*  	dw 296, 290, 289
       21 01       
041ADA 23 01 0E 01 0808*  	dw 291, 270, 274
       12 01       
041AE0 1A 01 18 01 0809*  	dw 282, 280, 287
       1F 01       
041AE6 1F 01 18 01 0810*  	dw 287, 280, 289
       21 01       
041AEC 04 01 24 01 0811*  	dw 260, 292, 298
       2A 01       
041AF2 21 01 25 01 0812*  	dw 289, 293, 292
       24 01       
041AF8 2A 01 25 01 0813*  	dw 298, 293, 294
       26 01       
041AFE 2A 01 26 01 0814*  	dw 298, 294, 261
       05 01       
041B04 18 01 26 01 0815*  	dw 280, 294, 289
       21 01       
041B0A 21 01 22 01 0816*  	dw 289, 290, 287
       1F 01       
041B10 21 01 27 01 0817*  	dw 289, 295, 296
       28 01       
041B16 1A 01 10 01 0818*  	dw 282, 272, 271
       0F 01       
041B1C 21 01 24 01 0819*  	dw 289, 292, 295
       27 01       
041B22 1E 01 11 01 0820*  	dw 286, 273, 296
       28 01       
041B28 24 01 25 01 0821*  	dw 292, 293, 298
       2A 01       
041B2E 26 01 25 01 0822*  	dw 294, 293, 289
       21 01       
041B34 20 01 15 01 0823*  	dw 288, 277, 285
       1D 01       
041B3A 23 01 15 01 0824*  	dw 291, 277, 273
       11 01       
041B40 00 01 01 01 0825*  	dw 256, 257, 285
       1D 01       
041B46 1D 01 01 01 0826*  	dw 285, 257, 276
       14 01       
041B4C 20 01 13 01 0827*  	dw 288, 275, 272
       10 01       
041B52 08 01 1B 01 0828*  	dw 264, 283, 266
       0A 01       
041B58 FF 00 29 01 0829*  	dw 255, 297, 254
       FE 00       
041B5E 0B 01 02 01 0830*  	dw 267, 258, 281
       19 01       
041B64 2A 01 03 01 0831*  	dw 298, 259, 260
       04 01       
041B6A 28 01 11 01 0832*  	dw 296, 273, 288
       20 01       
041B70 0D 01 0E 01 0833*  	dw 269, 270, 286
       1E 01       
041B76 1C 01 00 01 0834*  	dw 284, 256, 274
       12 01       
041B7C 2B 01 0C 01 0835*  	dw 299, 268, 276
       14 01       
041B82 14 01 01 01 0836*  	dw 276, 257, 299
       2B 01       
041B88 05 01 03 01 0837*  	dw 261, 259, 298
       2A 01       
041B8E 20 01 10 01 0838*  	dw 288, 272, 287
       1F 01       
041B94             0839*  
041B94             0840*  ; -- TEXTURE UV COORDINATES --
041B94             0841*  Lara5_uvs:
041B94 42 F1 F6 C4 0842*  	dw 61762, 50422
041B98 42 F1 F6 C4 0843*  	dw 61762, 50422
041B9C 42 F1 F6 C4 0844*  	dw 61762, 50422
041BA0 42 F1 F6 C4 0845*  	dw 61762, 50422
041BA4 42 F1 F6 C4 0846*  	dw 61762, 50422
041BA8 42 F1 F6 C4 0847*  	dw 61762, 50422
041BAC CF 3D 38 A9 0848*  	dw 15823, 43320
041BB0 E1 27 71 FC 0849*  	dw 10209, 64625
041BB4 CF 3D 71 FC 0850*  	dw 15823, 64625
041BB8 E1 27 38 A9 0851*  	dw 10209, 43320
041BBC 69 BF 4A 21 0852*  	dw 49001, 8522
041BC0 7A A9 CE 3F 0853*  	dw 43386, 16334
041BC4 69 BF CE 3F 0854*  	dw 49001, 16334
041BC8 7A A9 4A 21 0855*  	dw 43386, 8522
041BCC 44 EF 69 BF 0856*  	dw 61252, 49001
041BD0 4F E1 BC C7 0857*  	dw 57679, 51132
041BD4 44 EF BC C7 0858*  	dw 61252, 51132
041BD8 4F E1 69 BF 0859*  	dw 57679, 49001
041BDC 74 B1 19 0B 0860*  	dw 45428, 2841
041BE0 56 D7 84 1E 0861*  	dw 55126, 7812
041BE4 74 B1 84 1E 0862*  	dw 45428, 7812
041BE8 56 D7 19 0B 0863*  	dw 55126, 2841
041BEC D6 35 4A 21 0864*  	dw 13782, 8522
041BF0 00 00 CE 3F 0865*  	dw 0, 16334
041BF4 D6 35 CE 3F 0866*  	dw 13782, 16334
041BF8 00 00 4A 21 0867*  	dw 0, 8522
041BFC B5 5F 4A 21 0868*  	dw 24501, 8522
041C00 95 87 CE 3F 0869*  	dw 34709, 16334
041C04 B5 5F CE 3F 0870*  	dw 24501, 16334
041C08 95 87 4A 21 0871*  	dw 34709, 8522
041C0C E1 27 38 A9 0872*  	dw 10209, 43320
041C10 CF 3D 71 FC 0873*  	dw 15823, 64625
041C14 E1 27 71 FC 0874*  	dw 10209, 64625
041C18 CF 3D 38 A9 0875*  	dw 15823, 43320
041C1C 7A A9 4A 21 0876*  	dw 43386, 8522
041C20 69 BF CE 3F 0877*  	dw 49001, 16334
041C24 7A A9 CE 3F 0878*  	dw 43386, 16334
041C28 69 BF 4A 21 0879*  	dw 49001, 8522
041C2C 76 AF D5 7C 0880*  	dw 44918, 31957
041C30 9A 81 AC A3 0881*  	dw 33178, 41900
041C34 76 AF AC A3 0882*  	dw 44918, 41900
041C38 9A 81 D5 7C 0883*  	dw 33178, 31957
041C3C 9D 7D 19 0B 0884*  	dw 32157, 2841
041C40 C1 4F 84 1E 0885*  	dw 20417, 7812
041C44 9D 7D 84 1E 0886*  	dw 32157, 7812
041C48 C1 4F 19 0B 0887*  	dw 20417, 2841
041C4C 42 F1 2F C2 0888*  	dw 61762, 49711
041C50 42 F1 2F C2 0889*  	dw 61762, 49711
041C54 42 F1 2F C2 0890*  	dw 61762, 49711
041C58 42 F1 2F C2 0891*  	dw 61762, 49711
041C5C 42 F1 2F C2 0892*  	dw 61762, 49711
041C60 42 F1 2F C2 0893*  	dw 61762, 49711
041C64 42 F1 2F C2 0894*  	dw 61762, 49711
041C68 42 F1 2F C2 0895*  	dw 61762, 49711
041C6C 42 F1 2F C2 0896*  	dw 61762, 49711
041C70 42 F1 2F C2 0897*  	dw 61762, 49711
041C74 94 89 4A 21 0898*  	dw 35220, 8522
041C78 94 89 CE 3F 0899*  	dw 35220, 16334
041C7C 7C A7 CE 3F 0900*  	dw 42876, 16334
041C80 7C A7 4A 21 0901*  	dw 42876, 8522
041C84 48 E9 19 0B 0902*  	dw 59720, 2841
041C88 3D F7 19 0B 0903*  	dw 63293, 2841
041C8C 3D F7 84 1E 0904*  	dw 63293, 7812
041C90 7C A7 CE 3F 0905*  	dw 42876, 16334
041C94 94 89 CE 3F 0906*  	dw 35220, 16334
041C98 94 89 4A 21 0907*  	dw 35220, 8522
041C9C 7C A7 4A 21 0908*  	dw 42876, 8522
041CA0 3D F7 84 1E 0909*  	dw 63293, 7812
041CA4 3D F7 19 0B 0910*  	dw 63293, 2841
041CA8 48 E9 19 0B 0911*  	dw 59720, 2841
041CAC 3D F7 F6 C4 0912*  	dw 63293, 50422
041CB0 3D F7 F6 C4 0913*  	dw 63293, 50422
041CB4 3D F7 F6 C4 0914*  	dw 63293, 50422
041CB8 3D F7 F6 C4 0915*  	dw 63293, 50422
041CBC 3D F7 F6 C4 0916*  	dw 63293, 50422
041CC0 3D F7 F6 C4 0917*  	dw 63293, 50422
041CC4 3D F7 F6 C4 0918*  	dw 63293, 50422
041CC8 3D F7 F6 C4 0919*  	dw 63293, 50422
041CCC 42 F1 2F C2 0920*  	dw 61762, 49711
041CD0 42 F1 2F C2 0921*  	dw 61762, 49711
041CD4 42 F1 2F C2 0922*  	dw 61762, 49711
041CD8 42 F1 2F C2 0923*  	dw 61762, 49711
041CDC 3D F7 2F C2 0924*  	dw 63293, 49711
041CE0 3D F7 2F C2 0925*  	dw 63293, 49711
041CE4 3D F7 2F C2 0926*  	dw 63293, 49711
041CE8 3D F7 2F C2 0927*  	dw 63293, 49711
041CEC 3D F7 2F C2 0928*  	dw 63293, 49711
041CF0 3D F7 2F C2 0929*  	dw 63293, 49711
041CF4 3D F7 2F C2 0930*  	dw 63293, 49711
041CF8 3D F7 2F C2 0931*  	dw 63293, 49711
041CFC 3D F7 2F C2 0932*  	dw 63293, 49711
041D00 3D F7 2F C2 0933*  	dw 63293, 49711
041D04 3D F7 2F C2 0934*  	dw 63293, 49711
041D08 3D F7 2F C2 0935*  	dw 63293, 49711
041D0C 3D F7 2F C2 0936*  	dw 63293, 49711
041D10 82 9F 51 B4 0937*  	dw 40834, 46161
041D14 87 99 71 FC 0938*  	dw 39303, 64625
041D18 82 9F 71 FC 0939*  	dw 40834, 64625
041D1C 87 99 51 B4 0940*  	dw 39303, 46161
041D20 87 99 51 B4 0941*  	dw 39303, 46161
041D24 87 99 71 FC 0942*  	dw 39303, 64625
041D28 95 87 51 B4 0943*  	dw 34709, 46161
041D2C A2 77 71 FC 0944*  	dw 30626, 64625
041D30 95 87 71 FC 0945*  	dw 34709, 64625
041D34 A2 77 51 B4 0946*  	dw 30626, 46161
041D38 89 97 51 B4 0947*  	dw 38793, 46161
041D3C 94 89 71 FC 0948*  	dw 35220, 64625
041D40 89 97 71 FC 0949*  	dw 38793, 64625
041D44 94 89 51 B4 0950*  	dw 35220, 46161
041D48 A2 77 51 B4 0951*  	dw 30626, 46161
041D4C 95 87 71 FC 0952*  	dw 34709, 64625
041D50 A2 77 71 FC 0953*  	dw 30626, 64625
041D54 95 87 51 B4 0954*  	dw 34709, 46161
041D58 42 F1 2F C2 0955*  	dw 61762, 49711
041D5C 3D F7 2F C2 0956*  	dw 63293, 49711
041D60 3D F7 2F C2 0957*  	dw 63293, 49711
041D64 3D F7 2F C2 0958*  	dw 63293, 49711
041D68 3D F7 2F C2 0959*  	dw 63293, 49711
041D6C 3D F7 2F C2 0960*  	dw 63293, 49711
041D70 3D F7 2F C2 0961*  	dw 63293, 49711
041D74 3D F7 2F C2 0962*  	dw 63293, 49711
041D78 3D F7 2F C2 0963*  	dw 63293, 49711
041D7C 3D F7 2F C2 0964*  	dw 63293, 49711
041D80 3D F7 2F C2 0965*  	dw 63293, 49711
041D84 3D F7 2F C2 0966*  	dw 63293, 49711
041D88 3D F7 2F C2 0967*  	dw 63293, 49711
041D8C 3D F7 2F C2 0968*  	dw 63293, 49711
041D90 3D F7 2F C2 0969*  	dw 63293, 49711
041D94 3D F7 2F C2 0970*  	dw 63293, 49711
041D98 00 00 BD 71 0971*  	dw 0, 29117
041D9C F5 0D AC A3 0972*  	dw 3573, 41900
041DA0 00 00 AC A3 0973*  	dw 0, 41900
041DA4 F5 0D BD 71 0974*  	dw 3573, 29117
041DA8 F5 0D BD 71 0975*  	dw 3573, 29117
041DAC F5 0D AC A3 0976*  	dw 3573, 41900
041DB0 37 FF 82 CA 0977*  	dw 65335, 51842
041DB4 42 F1 71 FC 0978*  	dw 61762, 64625
041DB8 37 FF 71 FC 0979*  	dw 65335, 64625
041DBC 42 F1 82 CA 0980*  	dw 61762, 51842
041DC0 37 FF 82 CA 0981*  	dw 65335, 51842
041DC4 42 F1 71 FC 0982*  	dw 61762, 64625
041DC8 37 FF 71 FC 0983*  	dw 65335, 64625
041DCC 42 F1 82 CA 0984*  	dw 61762, 51842
041DD0 40 F3 2F C2 0985*  	dw 62272, 49711
041DD4 40 F3 2F C2 0986*  	dw 62272, 49711
041DD8 40 F3 2F C2 0987*  	dw 62272, 49711
041DDC 40 F3 2F C2 0988*  	dw 62272, 49711
041DE0 40 F3 2F C2 0989*  	dw 62272, 49711
041DE4 40 F3 2F C2 0990*  	dw 62272, 49711
041DE8 40 F3 2F C2 0991*  	dw 62272, 49711
041DEC 40 F3 2F C2 0992*  	dw 62272, 49711
041DF0 42 F1 71 FC 0993*  	dw 61762, 64625
041DF4 37 FF 71 FC 0994*  	dw 65335, 64625
041DF8 37 FF 82 CA 0995*  	dw 65335, 51842
041DFC 42 F1 82 CA 0996*  	dw 61762, 51842
041E00 40 F3 2F C2 0997*  	dw 62272, 49711
041E04 40 F3 2F C2 0998*  	dw 62272, 49711
041E08 40 F3 2F C2 0999*  	dw 62272, 49711
041E0C 40 F3 2F C2 1000*  	dw 62272, 49711
041E10 40 F3 2F C2 1001*  	dw 62272, 49711
041E14 40 F3 2F C2 1002*  	dw 62272, 49711
041E18 40 F3 2F C2 1003*  	dw 62272, 49711
041E1C 40 F3 2F C2 1004*  	dw 62272, 49711
041E20 3D F7 F6 C4 1005*  	dw 63293, 50422
041E24 3D F7 F6 C4 1006*  	dw 63293, 50422
041E28 3D F7 F6 C4 1007*  	dw 63293, 50422
041E2C 3D F7 F6 C4 1008*  	dw 63293, 50422
041E30 40 F3 2F C2 1009*  	dw 62272, 49711
041E34 40 F3 2F C2 1010*  	dw 62272, 49711
041E38 40 F3 2F C2 1011*  	dw 62272, 49711
041E3C 40 F3 2F C2 1012*  	dw 62272, 49711
041E40 40 F3 2F C2 1013*  	dw 62272, 49711
041E44 40 F3 2F C2 1014*  	dw 62272, 49711
041E48 40 F3 2F C2 1015*  	dw 62272, 49711
041E4C 40 F3 2F C2 1016*  	dw 62272, 49711
041E50 3D F7 F6 C4 1017*  	dw 63293, 50422
041E54 3D F7 F6 C4 1018*  	dw 63293, 50422
041E58 68 C1 4A 21 1019*  	dw 49512, 8522
041E5C 5D CF CE 3F 1020*  	dw 53085, 16334
041E60 68 C1 CE 3F 1021*  	dw 49512, 16334
041E64 5D CF 4A 21 1022*  	dw 53085, 8522
041E68 E8 1D C6 02 1023*  	dw 7656, 710
041E6C F3 0F 84 1E 1024*  	dw 4083, 7812
041E70 E8 1D 84 1E 1025*  	dw 7656, 7812
041E74 F3 0F C6 02 1026*  	dw 4083, 710
041E78 3D F7 F6 C4 1027*  	dw 63293, 50422
041E7C 3D F7 F6 C4 1028*  	dw 63293, 50422
041E80 3D F7 F6 C4 1029*  	dw 63293, 50422
041E84 3D F7 F6 C4 1030*  	dw 63293, 50422
041E88 3D F7 F6 C4 1031*  	dw 63293, 50422
041E8C 3D F7 F6 C4 1032*  	dw 63293, 50422
041E90 3D F7 F6 C4 1033*  	dw 63293, 50422
041E94 3D F7 F6 C4 1034*  	dw 63293, 50422
041E98 42 F1 2F C2 1035*  	dw 61762, 49711
041E9C 42 F1 2F C2 1036*  	dw 61762, 49711
041EA0 42 F1 2F C2 1037*  	dw 61762, 49711
041EA4 42 F1 2F C2 1038*  	dw 61762, 49711
041EA8 3D F7 2F C2 1039*  	dw 63293, 49711
041EAC 3D F7 2F C2 1040*  	dw 63293, 49711
041EB0 3D F7 2F C2 1041*  	dw 63293, 49711
041EB4 3D F7 2F C2 1042*  	dw 63293, 49711
041EB8 3D F7 2F C2 1043*  	dw 63293, 49711
041EBC 3D F7 2F C2 1044*  	dw 63293, 49711
041EC0 3D F7 2F C2 1045*  	dw 63293, 49711
041EC4 3D F7 2F C2 1046*  	dw 63293, 49711
041EC8 3D F7 2F C2 1047*  	dw 63293, 49711
041ECC 3D F7 2F C2 1048*  	dw 63293, 49711
041ED0 3D F7 2F C2 1049*  	dw 63293, 49711
041ED4 3D F7 2F C2 1050*  	dw 63293, 49711
041ED8 3D F7 2F C2 1051*  	dw 63293, 49711
041EDC 87 99 51 B4 1052*  	dw 39303, 46161
041EE0 82 9F 71 FC 1053*  	dw 40834, 64625
041EE4 87 99 71 FC 1054*  	dw 39303, 64625
041EE8 82 9F 51 B4 1055*  	dw 40834, 46161
041EEC 87 99 71 FC 1056*  	dw 39303, 64625
041EF0 87 99 51 B4 1057*  	dw 39303, 46161
041EF4 A2 77 51 B4 1058*  	dw 30626, 46161
041EF8 95 87 71 FC 1059*  	dw 34709, 64625
041EFC A2 77 71 FC 1060*  	dw 30626, 64625
041F00 95 87 51 B4 1061*  	dw 34709, 46161
041F04 89 97 51 B4 1062*  	dw 38793, 46161
041F08 94 89 71 FC 1063*  	dw 35220, 64625
041F0C 89 97 71 FC 1064*  	dw 38793, 64625
041F10 94 89 51 B4 1065*  	dw 35220, 46161
041F14 95 87 51 B4 1066*  	dw 34709, 46161
041F18 A2 77 71 FC 1067*  	dw 30626, 64625
041F1C 95 87 71 FC 1068*  	dw 34709, 64625
041F20 A2 77 51 B4 1069*  	dw 30626, 46161
041F24 42 F1 2F C2 1070*  	dw 61762, 49711
041F28 3D F7 2F C2 1071*  	dw 63293, 49711
041F2C 3D F7 2F C2 1072*  	dw 63293, 49711
041F30 3D F7 2F C2 1073*  	dw 63293, 49711
041F34 3D F7 2F C2 1074*  	dw 63293, 49711
041F38 3D F7 2F C2 1075*  	dw 63293, 49711
041F3C 3D F7 2F C2 1076*  	dw 63293, 49711
041F40 3D F7 2F C2 1077*  	dw 63293, 49711
041F44 3D F7 2F C2 1078*  	dw 63293, 49711
041F48 3D F7 2F C2 1079*  	dw 63293, 49711
041F4C 3D F7 2F C2 1080*  	dw 63293, 49711
041F50 3D F7 2F C2 1081*  	dw 63293, 49711
041F54 3D F7 2F C2 1082*  	dw 63293, 49711
041F58 3D F7 2F C2 1083*  	dw 63293, 49711
041F5C 3D F7 2F C2 1084*  	dw 63293, 49711
041F60 F5 0D BD 71 1085*  	dw 3573, 29117
041F64 00 00 AC A3 1086*  	dw 0, 41900
041F68 F5 0D AC A3 1087*  	dw 3573, 41900
041F6C 00 00 BD 71 1088*  	dw 0, 29117
041F70 F5 0D AC A3 1089*  	dw 3573, 41900
041F74 F5 0D BD 71 1090*  	dw 3573, 29117
041F78 37 FF 82 CA 1091*  	dw 65335, 51842
041F7C 42 F1 71 FC 1092*  	dw 61762, 64625
041F80 37 FF 71 FC 1093*  	dw 65335, 64625
041F84 42 F1 82 CA 1094*  	dw 61762, 51842
041F88 37 FF 82 CA 1095*  	dw 65335, 51842
041F8C 42 F1 71 FC 1096*  	dw 61762, 64625
041F90 37 FF 71 FC 1097*  	dw 65335, 64625
041F94 42 F1 82 CA 1098*  	dw 61762, 51842
041F98 40 F3 2F C2 1099*  	dw 62272, 49711
041F9C 40 F3 2F C2 1100*  	dw 62272, 49711
041FA0 40 F3 2F C2 1101*  	dw 62272, 49711
041FA4 3D F7 2F C2 1102*  	dw 63293, 49711
041FA8 40 F3 2F C2 1103*  	dw 62272, 49711
041FAC 40 F3 2F C2 1104*  	dw 62272, 49711
041FB0 40 F3 2F C2 1105*  	dw 62272, 49711
041FB4 40 F3 2F C2 1106*  	dw 62272, 49711
041FB8 40 F3 2F C2 1107*  	dw 62272, 49711
041FBC 37 FF 71 FC 1108*  	dw 65335, 64625
041FC0 37 FF 82 CA 1109*  	dw 65335, 51842
041FC4 42 F1 82 CA 1110*  	dw 61762, 51842
041FC8 42 F1 71 FC 1111*  	dw 61762, 64625
041FCC 40 F3 2F C2 1112*  	dw 62272, 49711
041FD0 40 F3 2F C2 1113*  	dw 62272, 49711
041FD4 40 F3 2F C2 1114*  	dw 62272, 49711
041FD8 40 F3 2F C2 1115*  	dw 62272, 49711
041FDC 40 F3 2F C2 1116*  	dw 62272, 49711
041FE0 40 F3 2F C2 1117*  	dw 62272, 49711
041FE4 40 F3 2F C2 1118*  	dw 62272, 49711
041FE8 40 F3 2F C2 1119*  	dw 62272, 49711
041FEC 3D F7 F6 C4 1120*  	dw 63293, 50422
041FF0 3D F7 F6 C4 1121*  	dw 63293, 50422
041FF4 3D F7 F6 C4 1122*  	dw 63293, 50422
041FF8 3D F7 F6 C4 1123*  	dw 63293, 50422
041FFC 40 F3 2F C2 1124*  	dw 62272, 49711
042000 40 F3 2F C2 1125*  	dw 62272, 49711
042004 40 F3 2F C2 1126*  	dw 62272, 49711
042008 40 F3 2F C2 1127*  	dw 62272, 49711
04200C 40 F3 2F C2 1128*  	dw 62272, 49711
042010 40 F3 2F C2 1129*  	dw 62272, 49711
042014 40 F3 2F C2 1130*  	dw 62272, 49711
042018 40 F3 2F C2 1131*  	dw 62272, 49711
04201C 3D F7 F6 C4 1132*  	dw 63293, 50422
042020 3D F7 F6 C4 1133*  	dw 63293, 50422
042024 5D CF 4A 21 1134*  	dw 53085, 8522
042028 68 C1 CE 3F 1135*  	dw 49512, 16334
04202C 5D CF CE 3F 1136*  	dw 53085, 16334
042030 68 C1 4A 21 1137*  	dw 49512, 8522
042034 E8 1D C6 02 1138*  	dw 7656, 710
042038 F3 0F 84 1E 1139*  	dw 4083, 7812
04203C E8 1D 84 1E 1140*  	dw 7656, 7812
042040 F3 0F C6 02 1141*  	dw 4083, 710
042044 40 F3 F6 C4 1142*  	dw 62272, 50422
042048 40 F3 F6 C4 1143*  	dw 62272, 50422
04204C 40 F3 F6 C4 1144*  	dw 62272, 50422
042050 40 F3 F6 C4 1145*  	dw 62272, 50422
042054 42 F1 F6 C4 1146*  	dw 61762, 50422
042058 42 F1 F6 C4 1147*  	dw 61762, 50422
04205C 42 F1 F6 C4 1148*  	dw 61762, 50422
042060 42 F1 F6 C4 1149*  	dw 61762, 50422
042064 3C F9 F6 C4 1150*  	dw 63804, 50422
042068 3C F9 F6 C4 1151*  	dw 63804, 50422
04206C 3C F9 F6 C4 1152*  	dw 63804, 50422
042070 3C F9 F6 C4 1153*  	dw 63804, 50422
042074 3C F9 F6 C4 1154*  	dw 63804, 50422
042078 3C F9 F6 C4 1155*  	dw 63804, 50422
04207C 3C F9 F6 C4 1156*  	dw 63804, 50422
042080 3C F9 F6 C4 1157*  	dw 63804, 50422
042084 3D F7 2F C2 1158*  	dw 63293, 49711
042088 3D F7 2F C2 1159*  	dw 63293, 49711
04208C 3D F7 2F C2 1160*  	dw 63293, 49711
042090 3D F7 2F C2 1161*  	dw 63293, 49711
042094 3D F7 2F C2 1162*  	dw 63293, 49711
042098 3D F7 2F C2 1163*  	dw 63293, 49711
04209C 3D F7 2F C2 1164*  	dw 63293, 49711
0420A0 3D F7 2F C2 1165*  	dw 63293, 49711
0420A4 3C F9 F6 C4 1166*  	dw 63804, 50422
0420A8 3C F9 F6 C4 1167*  	dw 63804, 50422
0420AC B6 5D 4A 21 1168*  	dw 23990, 8522
0420B0 D4 37 CE 3F 1169*  	dw 14292, 16334
0420B4 B6 5D CE 3F 1170*  	dw 23990, 16334
0420B8 D4 37 4A 21 1171*  	dw 14292, 8522
0420BC 50 DF 69 BF 1172*  	dw 57168, 49001
0420C0 6E B9 BC C7 1173*  	dw 47470, 51132
0420C4 50 DF BC C7 1174*  	dw 57168, 51132
0420C8 6E B9 69 BF 1175*  	dw 47470, 49001
0420CC C9 45 D5 7C 1176*  	dw 17865, 31957
0420D0 F3 0F AC A3 1177*  	dw 4083, 41900
0420D4 C9 45 AC A3 1178*  	dw 17865, 41900
0420D8 F3 0F D5 7C 1179*  	dw 4083, 31957
0420DC A3 75 51 B4 1180*  	dw 30115, 46161
0420E0 CE 3F 71 FC 1181*  	dw 16334, 64625
0420E4 A3 75 71 FC 1182*  	dw 30115, 64625
0420E8 CE 3F 51 B4 1183*  	dw 16334, 46161
0420EC 9A 81 19 0B 1184*  	dw 33178, 2841
0420F0 76 AF 84 1E 1185*  	dw 44918, 7812
0420F4 9A 81 84 1E 1186*  	dw 33178, 7812
0420F8 76 AF 19 0B 1187*  	dw 44918, 2841
0420FC 37 FF D5 7C 1188*  	dw 65335, 31957
042100 55 D9 AC A3 1189*  	dw 55637, 41900
042104 37 FF AC A3 1190*  	dw 65335, 41900
042108 55 D9 D5 7C 1191*  	dw 55637, 31957
04210C 3C F9 F6 C4 1192*  	dw 63804, 50422
042110 3C F9 F6 C4 1193*  	dw 63804, 50422
042114 81 A1 69 BF 1194*  	dw 41345, 49001
042118 81 A1 71 FC 1195*  	dw 41345, 64625
04211C 70 B7 71 FC 1196*  	dw 46960, 64625
042120 70 B7 69 BF 1197*  	dw 46960, 49001
042124 81 A1 71 FC 1198*  	dw 41345, 64625
042128 81 A1 69 BF 1199*  	dw 41345, 49001
04212C 70 B7 69 BF 1200*  	dw 46960, 49001
042130 70 B7 71 FC 1201*  	dw 46960, 64625
042134 CE 3F 84 1E 1202*  	dw 16334, 7812
042138 CE 3F C6 02 1203*  	dw 16334, 710
04213C C3 4D C6 02 1204*  	dw 19907, 710
042140 C3 4D C6 02 1205*  	dw 19907, 710
042144 CE 3F C6 02 1206*  	dw 16334, 710
042148 CE 3F 84 1E 1207*  	dw 16334, 7812
04214C 55 D9 71 FC 1208*  	dw 55637, 64625
042150 44 EF 71 FC 1209*  	dw 61252, 64625
042154 44 EF 82 CA 1210*  	dw 61252, 51842
042158 55 D9 82 CA 1211*  	dw 55637, 51842
04215C 44 EF 71 FC 1212*  	dw 61252, 64625
042160 55 D9 71 FC 1213*  	dw 55637, 64625
042164 55 D9 82 CA 1214*  	dw 55637, 51842
042168 44 EF 82 CA 1215*  	dw 61252, 51842
04216C 3D F7 2F C2 1216*  	dw 63293, 49711
042170 3D F7 2F C2 1217*  	dw 63293, 49711
042174 3D F7 2F C2 1218*  	dw 63293, 49711
042178 3D F7 2F C2 1219*  	dw 63293, 49711
04217C 3D F7 2F C2 1220*  	dw 63293, 49711
042180 3D F7 2F C2 1221*  	dw 63293, 49711
042184 3D F7 2F C2 1222*  	dw 63293, 49711
042188 3D F7 2F C2 1223*  	dw 63293, 49711
04218C 3D F7 2F C2 1224*  	dw 63293, 49711
042190 3D F7 2F C2 1225*  	dw 63293, 49711
042194 3D F7 2F C2 1226*  	dw 63293, 49711
042198 3D F7 2F C2 1227*  	dw 63293, 49711
04219C 3D F7 2F C2 1228*  	dw 63293, 49711
0421A0 3D F7 2F C2 1229*  	dw 63293, 49711
0421A4 3D F7 2F C2 1230*  	dw 63293, 49711
0421A8 3D F7 2F C2 1231*  	dw 63293, 49711
0421AC 3D F7 2F C2 1232*  	dw 63293, 49711
0421B0 3D F7 2F C2 1233*  	dw 63293, 49711
0421B4 3D F7 2F C2 1234*  	dw 63293, 49711
0421B8 3D F7 2F C2 1235*  	dw 63293, 49711
0421BC 3D F7 2F C2 1236*  	dw 63293, 49711
0421C0 3D F7 2F C2 1237*  	dw 63293, 49711
0421C4 3D F7 2F C2 1238*  	dw 63293, 49711
0421C8 3D F7 2F C2 1239*  	dw 63293, 49711
0421CC 3D F7 2F C2 1240*  	dw 63293, 49711
0421D0 3D F7 2F C2 1241*  	dw 63293, 49711
0421D4 3D F7 2F C2 1242*  	dw 63293, 49711
0421D8 3D F7 2F C2 1243*  	dw 63293, 49711
0421DC 3D F7 2F C2 1244*  	dw 63293, 49711
0421E0 3D F7 F6 C4 1245*  	dw 63293, 50422
0421E4 3D F7 F6 C4 1246*  	dw 63293, 50422
0421E8 3D F7 F6 C4 1247*  	dw 63293, 50422
0421EC 3D F7 F6 C4 1248*  	dw 63293, 50422
0421F0 B0 65 94 42 1249*  	dw 26032, 17044
0421F4 C1 4F 30 6C 1250*  	dw 20417, 27696
0421F8 B0 65 30 6C 1251*  	dw 26032, 27696
0421FC C1 4F 94 42 1252*  	dw 20417, 17044
042200 4F E1 94 42 1253*  	dw 57679, 17044
042204 3D F7 30 6C 1254*  	dw 63293, 27696
042208 4F E1 30 6C 1255*  	dw 57679, 27696
04220C 3D F7 94 42 1256*  	dw 63293, 17044
042210 50 DF 94 42 1257*  	dw 57168, 17044
042214 61 C9 30 6C 1258*  	dw 51553, 27696
042218 50 DF 30 6C 1259*  	dw 57168, 27696
04221C 61 C9 94 42 1260*  	dw 51553, 17044
042220 63 C7 94 42 1261*  	dw 51043, 17044
042224 74 B1 30 6C 1262*  	dw 45428, 27696
042228 63 C7 30 6C 1263*  	dw 51043, 27696
04222C 74 B1 94 42 1264*  	dw 45428, 17044
042230 76 AF 94 42 1265*  	dw 44918, 17044
042234 87 99 30 6C 1266*  	dw 39303, 27696
042238 76 AF 30 6C 1267*  	dw 44918, 27696
04223C 87 99 94 42 1268*  	dw 39303, 17044
042240 3D F7 2F C2 1269*  	dw 63293, 49711
042244 3D F7 2F C2 1270*  	dw 63293, 49711
042248 3D F7 2F C2 1271*  	dw 63293, 49711
04224C 3D F7 2F C2 1272*  	dw 63293, 49711
042250 3D F7 2F C2 1273*  	dw 63293, 49711
042254 3D F7 2F C2 1274*  	dw 63293, 49711
042258 3D F7 2F C2 1275*  	dw 63293, 49711
04225C 3D F7 2F C2 1276*  	dw 63293, 49711
042260 3D F7 2F C2 1277*  	dw 63293, 49711
042264 3D F7 2F C2 1278*  	dw 63293, 49711
042268 3D F7 2F C2 1279*  	dw 63293, 49711
04226C 3D F7 2F C2 1280*  	dw 63293, 49711
042270 3D F7 2F C2 1281*  	dw 63293, 49711
042274 3D F7 2F C2 1282*  	dw 63293, 49711
042278 3D F7 2F C2 1283*  	dw 63293, 49711
04227C 3D F7 2F C2 1284*  	dw 63293, 49711
042280 3D F7 2F C2 1285*  	dw 63293, 49711
042284 3D F7 2F C2 1286*  	dw 63293, 49711
042288 3D F7 2F C2 1287*  	dw 63293, 49711
04228C 3D F7 2F C2 1288*  	dw 63293, 49711
042290 3D F7 2F C2 1289*  	dw 63293, 49711
042294 3D F7 2F C2 1290*  	dw 63293, 49711
042298 3D F7 2F C2 1291*  	dw 63293, 49711
04229C 3D F7 2F C2 1292*  	dw 63293, 49711
0422A0 3D F7 2F C2 1293*  	dw 63293, 49711
0422A4 3D F7 2F C2 1294*  	dw 63293, 49711
0422A8 3D F7 2F C2 1295*  	dw 63293, 49711
0422AC 3D F7 2F C2 1296*  	dw 63293, 49711
0422B0 3D F7 2F C2 1297*  	dw 63293, 49711
0422B4 3D F7 F6 C4 1298*  	dw 63293, 50422
0422B8 3D F7 F6 C4 1299*  	dw 63293, 50422
0422BC 3D F7 F6 C4 1300*  	dw 63293, 50422
0422C0 3D F7 F6 C4 1301*  	dw 63293, 50422
0422C4 C1 4F 94 42 1302*  	dw 20417, 17044
0422C8 B0 65 30 6C 1303*  	dw 26032, 27696
0422CC C1 4F 30 6C 1304*  	dw 20417, 27696
0422D0 B0 65 94 42 1305*  	dw 26032, 17044
0422D4 4F E1 94 42 1306*  	dw 57679, 17044
0422D8 3D F7 30 6C 1307*  	dw 63293, 27696
0422DC 4F E1 30 6C 1308*  	dw 57679, 27696
0422E0 3D F7 94 42 1309*  	dw 63293, 17044
0422E4 61 C9 94 42 1310*  	dw 51553, 17044
0422E8 50 DF 30 6C 1311*  	dw 57168, 27696
0422EC 61 C9 30 6C 1312*  	dw 51553, 27696
0422F0 50 DF 94 42 1313*  	dw 57168, 17044
0422F4 74 B1 94 42 1314*  	dw 45428, 17044
0422F8 63 C7 30 6C 1315*  	dw 51043, 27696
0422FC 74 B1 30 6C 1316*  	dw 45428, 27696
042300 63 C7 94 42 1317*  	dw 51043, 17044
042304 87 99 94 42 1318*  	dw 39303, 17044
042308 76 AF 30 6C 1319*  	dw 44918, 27696
04230C 87 99 30 6C 1320*  	dw 39303, 27696
042310 76 AF 94 42 1321*  	dw 44918, 17044
042314 56 D7 82 CA 1322*  	dw 55126, 51842
042318 6E B9 71 FC 1323*  	dw 47470, 64625
04231C 56 D7 71 FC 1324*  	dw 55126, 64625
042320 6E B9 82 CA 1325*  	dw 47470, 51842
042324 37 FF 4A 21 1326*  	dw 65335, 8522
042328 42 F1 CE 3F 1327*  	dw 61762, 16334
04232C 37 FF CE 3F 1328*  	dw 65335, 16334
042330 42 F1 4A 21 1329*  	dw 61762, 8522
042334 56 D7 82 CA 1330*  	dw 55126, 51842
042338 6E B9 71 FC 1331*  	dw 47470, 64625
04233C 56 D7 71 FC 1332*  	dw 55126, 64625
042340 6E B9 82 CA 1333*  	dw 47470, 51842
042344 3D F7 2F C2 1334*  	dw 63293, 49711
042348 3D F7 2F C2 1335*  	dw 63293, 49711
04234C 3D F7 2F C2 1336*  	dw 63293, 49711
042350 39 FD F6 C4 1337*  	dw 64825, 50422
042354 39 FD F6 C4 1338*  	dw 64825, 50422
042358 39 FD F6 C4 1339*  	dw 64825, 50422
04235C 39 FD F6 C4 1340*  	dw 64825, 50422
042360 39 FD F6 C4 1341*  	dw 64825, 50422
042364 3D F7 2F C2 1342*  	dw 63293, 49711
042368 3D F7 2F C2 1343*  	dw 63293, 49711
04236C 3D F7 2F C2 1344*  	dw 63293, 49711
042370 3D F7 2F C2 1345*  	dw 63293, 49711
042374 3D F7 2F C2 1346*  	dw 63293, 49711
042378 39 FD F6 C4 1347*  	dw 64825, 50422
04237C 00 00 84 1E 1348*  	dw 0, 7812
042380 F5 0D 84 1E 1349*  	dw 3573, 7812
042384 F5 0D C6 02 1350*  	dw 3573, 710
042388 44 EF CE 3F 1351*  	dw 61252, 16334
04238C 44 EF 4A 21 1352*  	dw 61252, 8522
042390 4F E1 4A 21 1353*  	dw 57679, 8522
042394 5B D1 4A 21 1354*  	dw 53595, 8522
042398 5B D1 CE 3F 1355*  	dw 53595, 16334
04239C 50 DF CE 3F 1356*  	dw 57168, 16334
0423A0 4F E1 4A 21 1357*  	dw 57679, 8522
0423A4 44 EF 4A 21 1358*  	dw 61252, 8522
0423A8 44 EF CE 3F 1359*  	dw 61252, 16334
0423AC E7 1F 84 1E 1360*  	dw 8167, 7812
0423B0 E7 1F C6 02 1361*  	dw 8167, 710
0423B4 DC 2D C6 02 1362*  	dw 11740, 710
0423B8 DC 2D 84 1E 1363*  	dw 11740, 7812
0423BC CF 3D C6 02 1364*  	dw 15823, 710
0423C0 DA 2F C6 02 1365*  	dw 12250, 710
0423C4 DA 2F 84 1E 1366*  	dw 12250, 7812
0423C8 CF 3D 84 1E 1367*  	dw 15823, 7812
0423CC 6E B9 82 CA 1368*  	dw 47470, 51842
0423D0 6E B9 71 FC 1369*  	dw 47470, 64625
0423D4 56 D7 71 FC 1370*  	dw 55126, 64625
0423D8 56 D7 82 CA 1371*  	dw 55126, 51842
0423DC 6E B9 82 CA 1372*  	dw 47470, 51842
0423E0 6E B9 71 FC 1373*  	dw 47470, 64625
0423E4 6E B9 71 FC 1374*  	dw 47470, 64625
0423E8 56 D7 71 FC 1375*  	dw 55126, 64625
0423EC 56 D7 82 CA 1376*  	dw 55126, 51842
0423F0 6E B9 71 FC 1377*  	dw 47470, 64625
0423F4 56 D7 71 FC 1378*  	dw 55126, 64625
0423F8 56 D7 82 CA 1379*  	dw 55126, 51842
0423FC 56 D7 71 FC 1380*  	dw 55126, 64625
042400 56 D7 82 CA 1381*  	dw 55126, 51842
042404 6E B9 82 CA 1382*  	dw 47470, 51842
042408 6E B9 82 CA 1383*  	dw 47470, 51842
04240C 6E B9 71 FC 1384*  	dw 47470, 64625
042410 56 D7 71 FC 1385*  	dw 55126, 64625
042414 6E B9 71 FC 1386*  	dw 47470, 64625
042418 56 D7 71 FC 1387*  	dw 55126, 64625
04241C 56 D7 82 CA 1388*  	dw 55126, 51842
042420 6E B9 82 CA 1389*  	dw 47470, 51842
042424 56 D7 71 FC 1390*  	dw 55126, 64625
042428 6E B9 71 FC 1391*  	dw 47470, 64625
04242C 56 D7 71 FC 1392*  	dw 55126, 64625
042430 56 D7 82 CA 1393*  	dw 55126, 51842
042434 6E B9 82 CA 1394*  	dw 47470, 51842
042438 6E B9 71 FC 1395*  	dw 47470, 64625
04243C 56 D7 71 FC 1396*  	dw 55126, 64625
042440 6E B9 71 FC 1397*  	dw 47470, 64625
042444 56 D7 82 CA 1398*  	dw 55126, 51842
042448 56 D7 82 CA 1399*  	dw 55126, 51842
04244C 56 D7 71 FC 1400*  	dw 55126, 64625
042450 56 D7 82 CA 1401*  	dw 55126, 51842
042454 6E B9 82 CA 1402*  	dw 47470, 51842
042458 6E B9 71 FC 1403*  	dw 47470, 64625
04245C 56 D7 82 CA 1404*  	dw 55126, 51842
042460 56 D7 82 CA 1405*  	dw 55126, 51842
042464 6E B9 82 CA 1406*  	dw 47470, 51842
042468 6E B9 71 FC 1407*  	dw 47470, 64625
04246C 6E B9 71 FC 1408*  	dw 47470, 64625
042470 9D 7D 30 6C 1409*  	dw 32157, 27696
042474 9D 7D 94 42 1410*  	dw 32157, 17044
042478 AE 67 94 42 1411*  	dw 26542, 17044
04247C 56 D7 71 FC 1412*  	dw 55126, 64625
042480 56 D7 82 CA 1413*  	dw 55126, 51842
042484 6E B9 71 FC 1414*  	dw 47470, 64625
042488 89 97 30 6C 1415*  	dw 38793, 27696
04248C 9A 81 30 6C 1416*  	dw 33178, 27696
042490 9A 81 94 42 1417*  	dw 33178, 17044
042494 6E B9 82 CA 1418*  	dw 47470, 51842
042498 56 D7 71 FC 1419*  	dw 55126, 64625
04249C 6E B9 82 CA 1420*  	dw 47470, 51842
0424A0 9D 7D 30 6C 1421*  	dw 32157, 27696
0424A4 AE 67 30 6C 1422*  	dw 26542, 27696
0424A8 AE 67 94 42 1423*  	dw 26542, 17044
0424AC 56 D7 71 FC 1424*  	dw 55126, 64625
0424B0 56 D7 71 FC 1425*  	dw 55126, 64625
0424B4 56 D7 82 CA 1426*  	dw 55126, 51842
0424B8 6E B9 82 CA 1427*  	dw 47470, 51842
0424BC 56 D7 71 FC 1428*  	dw 55126, 64625
0424C0 6E B9 71 FC 1429*  	dw 47470, 64625
0424C4 56 D7 82 CA 1430*  	dw 55126, 51842
0424C8 9A 81 94 42 1431*  	dw 33178, 17044
0424CC 9A 81 30 6C 1432*  	dw 33178, 27696
0424D0 89 97 30 6C 1433*  	dw 38793, 27696
0424D4 4A E7 84 1E 1434*  	dw 59210, 7812
0424D8 4A E7 19 0B 1435*  	dw 59210, 2841
0424DC 55 D9 19 0B 1436*  	dw 55637, 2841
0424E0 4A E7 84 1E 1437*  	dw 59210, 7812
0424E4 C7 47 AC A3 1438*  	dw 18375, 41900
0424E8 9D 7D AC A3 1439*  	dw 32157, 41900
0424EC 9D 7D D5 7C 1440*  	dw 32157, 31957
0424F0 56 D7 82 CA 1441*  	dw 55126, 51842
0424F4 9D 7D 94 42 1442*  	dw 32157, 17044
0424F8 C7 47 AC A3 1443*  	dw 18375, 41900
0424FC C7 47 D5 7C 1444*  	dw 18375, 31957
042500 00 00 38 A9 1445*  	dw 0, 43320
042504 00 00 71 FC 1446*  	dw 0, 64625
042508 E2 25 71 FC 1447*  	dw 9698, 64625
04250C E2 25 30 6C 1448*  	dw 9698, 27696
042510 E2 25 94 42 1449*  	dw 9698, 17044
042514 00 00 94 42 1450*  	dw 0, 17044
042518 E1 27 94 42 1451*  	dw 10209, 17044
04251C E1 27 30 6C 1452*  	dw 10209, 27696
042520 C3 4D 30 6C 1453*  	dw 19907, 27696
042524 00 00 71 FC 1454*  	dw 0, 64625
042528 00 00 38 A9 1455*  	dw 0, 43320
04252C 56 D7 AC A3 1456*  	dw 55126, 41900
042530 74 B1 AC A3 1457*  	dw 45428, 41900
042534 74 B1 D5 7C 1458*  	dw 45428, 31957
042538 C7 47 D5 7C 1459*  	dw 18375, 31957
04253C 6E B9 82 CA 1460*  	dw 47470, 51842
042540 74 B1 AC A3 1461*  	dw 45428, 41900
042544 56 D7 AC A3 1462*  	dw 55126, 41900
042548 AE 67 30 6C 1463*  	dw 26542, 27696
04254C C3 4D 30 6C 1464*  	dw 19907, 27696
042550 00 00 94 42 1465*  	dw 0, 17044
042554 6E B9 82 CA 1466*  	dw 47470, 51842
042558 6E B9 71 FC 1467*  	dw 47470, 64625
04255C 6E B9 71 FC 1468*  	dw 47470, 64625
042560 6E B9 71 FC 1469*  	dw 47470, 64625
042564 56 D7 71 FC 1470*  	dw 55126, 64625
042568 6E B9 82 CA 1471*  	dw 47470, 51842
04256C 56 D7 71 FC 1472*  	dw 55126, 64625
042570 56 D7 71 FC 1473*  	dw 55126, 64625
042574 6E B9 71 FC 1474*  	dw 47470, 64625
042578 56 D7 82 CA 1475*  	dw 55126, 51842
04257C 6E B9 71 FC 1476*  	dw 47470, 64625
042580 6E B9 82 CA 1477*  	dw 47470, 51842
042584 56 D7 82 CA 1478*  	dw 55126, 51842
042588 56 D7 82 CA 1479*  	dw 55126, 51842
04258C 6E B9 82 CA 1480*  	dw 47470, 51842
042590 6E B9 71 FC 1481*  	dw 47470, 64625
042594 E2 25 38 A9 1482*  	dw 9698, 43320
042598 55 D9 84 1E 1483*  	dw 55637, 7812
04259C 6E B9 71 FC 1484*  	dw 47470, 64625
0425A0 55 D9 84 1E 1485*  	dw 55637, 7812
0425A4             1486*  
0425A4             1487*  ; -- TEXTURE VERTEX INDICES --
0425A4             1488*  Lara5_uv_indices:
0425A4 00 00 01 00 1489*  	dw 0, 1, 2
       02 00       
0425AA 00 00 03 00 1490*  	dw 0, 3, 1
       01 00       
0425B0 00 00 04 00 1491*  	dw 0, 4, 3
       03 00       
0425B6 00 00 05 00 1492*  	dw 0, 5, 4
       04 00       
0425BC 06 00 07 00 1493*  	dw 6, 7, 8
       08 00       
0425C2 06 00 09 00 1494*  	dw 6, 9, 7
       07 00       
0425C8 0A 00 0B 00 1495*  	dw 10, 11, 12
       0C 00       
0425CE 0A 00 0D 00 1496*  	dw 10, 13, 11
       0B 00       
0425D4 0E 00 0F 00 1497*  	dw 14, 15, 16
       10 00       
0425DA 0E 00 11 00 1498*  	dw 14, 17, 15
       0F 00       
0425E0 12 00 13 00 1499*  	dw 18, 19, 20
       14 00       
0425E6 12 00 15 00 1500*  	dw 18, 21, 19
       13 00       
0425EC 16 00 17 00 1501*  	dw 22, 23, 24
       18 00       
0425F2 16 00 19 00 1502*  	dw 22, 25, 23
       17 00       
0425F8 1A 00 1B 00 1503*  	dw 26, 27, 28
       1C 00       
0425FE 1A 00 1D 00 1504*  	dw 26, 29, 27
       1B 00       
042604 1E 00 1F 00 1505*  	dw 30, 31, 32
       20 00       
04260A 1E 00 21 00 1506*  	dw 30, 33, 31
       1F 00       
042610 22 00 23 00 1507*  	dw 34, 35, 36
       24 00       
042616 22 00 25 00 1508*  	dw 34, 37, 35
       23 00       
04261C 26 00 27 00 1509*  	dw 38, 39, 40
       28 00       
042622 26 00 29 00 1510*  	dw 38, 41, 39
       27 00       
042628 2A 00 2B 00 1511*  	dw 42, 43, 44
       2C 00       
04262E 2A 00 2D 00 1512*  	dw 42, 45, 43
       2B 00       
042634 2E 00 2F 00 1513*  	dw 46, 47, 48
       30 00       
04263A 2F 00 2E 00 1514*  	dw 47, 46, 49
       31 00       
042640 32 00 30 00 1515*  	dw 50, 48, 47
       2F 00       
042646 33 00 34 00 1516*  	dw 51, 52, 53
       35 00       
04264C 34 00 33 00 1517*  	dw 52, 51, 54
       36 00       
042652 35 00 37 00 1518*  	dw 53, 55, 51
       33 00       
042658 38 00 39 00 1519*  	dw 56, 57, 58
       3A 00       
04265E 3A 00 3B 00 1520*  	dw 58, 59, 56
       38 00       
042664 3C 00 3D 00 1521*  	dw 60, 61, 62
       3E 00       
04266A 3F 00 40 00 1522*  	dw 63, 64, 65
       41 00       
042670 41 00 42 00 1523*  	dw 65, 66, 63
       3F 00       
042676 43 00 44 00 1524*  	dw 67, 68, 69
       45 00       
04267C 46 00 47 00 1525*  	dw 70, 71, 72
       48 00       
042682 46 00 49 00 1526*  	dw 70, 73, 71
       47 00       
042688 47 00 4A 00 1527*  	dw 71, 74, 75
       4B 00       
04268E 47 00 49 00 1528*  	dw 71, 73, 74
       4A 00       
042694 49 00 4C 00 1529*  	dw 73, 76, 74
       4A 00       
04269A 49 00 46 00 1530*  	dw 73, 70, 76
       4C 00       
0426A0 46 00 4D 00 1531*  	dw 70, 77, 76
       4C 00       
0426A6 46 00 48 00 1532*  	dw 70, 72, 77
       4D 00       
0426AC 48 00 4B 00 1533*  	dw 72, 75, 77
       4D 00       
0426B2 48 00 47 00 1534*  	dw 72, 71, 75
       4B 00       
0426B8 4C 00 4B 00 1535*  	dw 76, 75, 74
       4A 00       
0426BE 4C 00 4D 00 1536*  	dw 76, 77, 75
       4B 00       
0426C4 4E 00 4F 00 1537*  	dw 78, 79, 80
       50 00       
0426CA 4E 00 51 00 1538*  	dw 78, 81, 79
       4F 00       
0426D0 52 00 53 00 1539*  	dw 82, 83, 84
       54 00       
0426D6 52 00 55 00 1540*  	dw 82, 85, 83
       53 00       
0426DC 56 00 54 00 1541*  	dw 86, 84, 87
       57 00       
0426E2 56 00 52 00 1542*  	dw 86, 82, 84
       54 00       
0426E8 58 00 57 00 1543*  	dw 88, 87, 89
       59 00       
0426EE 58 00 56 00 1544*  	dw 88, 86, 87
       57 00       
0426F4 5A 00 59 00 1545*  	dw 90, 89, 91
       5B 00       
0426FA 5A 00 58 00 1546*  	dw 90, 88, 89
       59 00       
042700 55 00 5B 00 1547*  	dw 85, 91, 83
       53 00       
042706 55 00 5A 00 1548*  	dw 85, 90, 91
       5B 00       
04270C 5C 00 58 00 1549*  	dw 92, 88, 93
       5D 00       
042712 5C 00 56 00 1550*  	dw 92, 86, 88
       58 00       
042718 5E 00 5A 00 1551*  	dw 94, 90, 85
       55 00       
04271E 5E 00 5D 00 1552*  	dw 94, 93, 90
       5A 00       
042724 5F 00 60 00 1553*  	dw 95, 96, 97
       61 00       
04272A 5F 00 62 00 1554*  	dw 95, 98, 96
       60 00       
042730 63 00 61 00 1555*  	dw 99, 97, 100
       64 00       
042736 63 00 5F 00 1556*  	dw 99, 95, 97
       61 00       
04273C 65 00 66 00 1557*  	dw 101, 102, 103
       67 00       
042742 65 00 68 00 1558*  	dw 101, 104, 102
       66 00       
042748 69 00 6A 00 1559*  	dw 105, 106, 107
       6B 00       
04274E 69 00 6C 00 1560*  	dw 105, 108, 106
       6A 00       
042754 6D 00 6E 00 1561*  	dw 109, 110, 111
       6F 00       
04275A 6D 00 70 00 1562*  	dw 109, 112, 110
       6E 00       
042760 5D 00 5E 00 1563*  	dw 93, 94, 92
       5C 00       
042766 4E 00 50 00 1564*  	dw 78, 80, 113
       71 00       
04276C 52 00 5E 00 1565*  	dw 82, 94, 85
       55 00       
042772 56 00 5C 00 1566*  	dw 86, 92, 82
       52 00       
042778 52 00 5C 00 1567*  	dw 82, 92, 94
       5E 00       
04277E 5A 00 5D 00 1568*  	dw 90, 93, 88
       58 00       
042784 72 00 73 00 1569*  	dw 114, 115, 116
       74 00       
04278A 72 00 75 00 1570*  	dw 114, 117, 115
       73 00       
042790 76 00 73 00 1571*  	dw 118, 115, 119
       77 00       
042796 76 00 74 00 1572*  	dw 118, 116, 115
       73 00       
04279C 78 00 77 00 1573*  	dw 120, 119, 121
       79 00       
0427A2 78 00 76 00 1574*  	dw 120, 118, 119
       77 00       
0427A8 78 00 7A 00 1575*  	dw 120, 122, 123
       7B 00       
0427AE 78 00 79 00 1576*  	dw 120, 121, 122
       7A 00       
0427B4 7B 00 75 00 1577*  	dw 123, 117, 114
       72 00       
0427BA 7B 00 7A 00 1578*  	dw 123, 122, 117
       75 00       
0427C0 7C 00 7D 00 1579*  	dw 124, 125, 126
       7E 00       
0427C6 7C 00 7F 00 1580*  	dw 124, 127, 125
       7D 00       
0427CC 79 00 7C 00 1581*  	dw 121, 124, 128
       80 00       
0427D2 79 00 77 00 1582*  	dw 121, 119, 124
       7C 00       
0427D8 7A 00 80 00 1583*  	dw 122, 128, 126
       7E 00       
0427DE 7A 00 79 00 1584*  	dw 122, 121, 128
       80 00       
0427E4 7D 00 7A 00 1585*  	dw 125, 122, 126
       7E 00       
0427EA 7D 00 75 00 1586*  	dw 125, 117, 122
       7A 00       
0427F0 81 00 82 00 1587*  	dw 129, 130, 131
       83 00       
0427F6 81 00 84 00 1588*  	dw 129, 132, 130
       82 00       
0427FC 85 00 83 00 1589*  	dw 133, 131, 134
       86 00       
042802 85 00 81 00 1590*  	dw 133, 129, 131
       83 00       
042808 87 00 88 00 1591*  	dw 135, 136, 137
       89 00       
04280E 87 00 8A 00 1592*  	dw 135, 138, 136
       88 00       
042814 8B 00 8C 00 1593*  	dw 139, 140, 141
       8D 00       
04281A 8B 00 8E 00 1594*  	dw 139, 142, 140
       8C 00       
042820 8F 00 90 00 1595*  	dw 143, 144, 145
       91 00       
042826 7C 00 7E 00 1596*  	dw 124, 126, 128
       80 00       
04282C 7F 00 73 00 1597*  	dw 127, 115, 125
       7D 00       
042832 7D 00 73 00 1598*  	dw 125, 115, 117
       75 00       
042838 7C 00 73 00 1599*  	dw 124, 115, 127
       7F 00       
04283E 73 00 7C 00 1600*  	dw 115, 124, 119
       77 00       
042844 92 00 90 00 1601*  	dw 146, 144, 147
       93 00       
04284A 94 00 91 00 1602*  	dw 148, 145, 146
       92 00       
042850 92 00 91 00 1603*  	dw 146, 145, 144
       90 00       
042856 91 00 95 00 1604*  	dw 145, 149, 143
       8F 00       
04285C 95 00 91 00 1605*  	dw 149, 145, 148
       94 00       
042862 96 00 8F 00 1606*  	dw 150, 143, 149
       95 00       
042868 93 00 90 00 1607*  	dw 147, 144, 150
       96 00       
04286E 96 00 90 00 1608*  	dw 150, 144, 143
       8F 00       
042874 97 00 98 00 1609*  	dw 151, 152, 153
       99 00       
04287A 99 00 9A 00 1610*  	dw 153, 154, 151
       97 00       
042880 9B 00 9C 00 1611*  	dw 155, 156, 157
       9D 00       
042886 9B 00 9E 00 1612*  	dw 155, 158, 156
       9C 00       
04288C 9F 00 A0 00 1613*  	dw 159, 160, 161
       A1 00       
042892 9F 00 A2 00 1614*  	dw 159, 162, 160
       A0 00       
042898 A3 00 A4 00 1615*  	dw 163, 164, 165
       A5 00       
04289E A3 00 A6 00 1616*  	dw 163, 166, 164
       A4 00       
0428A4 A7 00 A8 00 1617*  	dw 167, 168, 169
       A9 00       
0428AA A7 00 AA 00 1618*  	dw 167, 170, 168
       A8 00       
0428B0 AA 00 AB 00 1619*  	dw 170, 171, 172
       AC 00       
0428B6 AA 00 A7 00 1620*  	dw 170, 167, 171
       AB 00       
0428BC A9 00 AD 00 1621*  	dw 169, 173, 174
       AE 00       
0428C2 A9 00 A8 00 1622*  	dw 169, 168, 173
       AD 00       
0428C8 AF 00 A6 00 1623*  	dw 175, 166, 163
       A3 00       
0428CE AF 00 B0 00 1624*  	dw 175, 176, 166
       A6 00       
0428D4 A1 00 9D 00 1625*  	dw 161, 157, 156
       9C 00       
0428DA A1 00 A0 00 1626*  	dw 161, 160, 157
       9D 00       
0428E0 B1 00 B2 00 1627*  	dw 177, 178, 179
       B3 00       
0428E6 B1 00 B4 00 1628*  	dw 177, 180, 178
       B2 00       
0428EC B5 00 B6 00 1629*  	dw 181, 182, 183
       B7 00       
0428F2 B5 00 B8 00 1630*  	dw 181, 184, 182
       B6 00       
0428F8 9E 00 A9 00 1631*  	dw 158, 169, 174
       AE 00       
0428FE A9 00 9E 00 1632*  	dw 169, 158, 167
       A7 00       
042904 AA 00 AD 00 1633*  	dw 170, 173, 168
       A8 00       
04290A AD 00 AA 00 1634*  	dw 173, 170, 159
       9F 00       
042910 9E 00 9B 00 1635*  	dw 158, 155, 171
       AB 00       
042916 9E 00 AB 00 1636*  	dw 158, 171, 167
       A7 00       
04291C 9F 00 AC 00 1637*  	dw 159, 172, 162
       A2 00       
042922 AC 00 9F 00 1638*  	dw 172, 159, 170
       AA 00       
042928 B9 00 BA 00 1639*  	dw 185, 186, 187
       BB 00       
04292E B9 00 BC 00 1640*  	dw 185, 188, 186
       BA 00       
042934 BD 00 BB 00 1641*  	dw 189, 187, 190
       BE 00       
04293A BD 00 B9 00 1642*  	dw 189, 185, 187
       BB 00       
042940 BF 00 B9 00 1643*  	dw 191, 185, 189
       BD 00       
042946 BF 00 BC 00 1644*  	dw 191, 188, 185
       B9 00       
04294C C0 00 BC 00 1645*  	dw 192, 188, 191
       BF 00       
042952 C0 00 BA 00 1646*  	dw 192, 186, 188
       BC 00       
042958 BE 00 BA 00 1647*  	dw 190, 186, 192
       C0 00       
04295E BE 00 BB 00 1648*  	dw 190, 187, 186
       BA 00       
042964 BE 00 BF 00 1649*  	dw 190, 191, 189
       BD 00       
04296A BE 00 C0 00 1650*  	dw 190, 192, 191
       BF 00       
042970 C1 00 C2 00 1651*  	dw 193, 194, 195
       C3 00       
042976 C1 00 C4 00 1652*  	dw 193, 196, 194
       C2 00       
04297C C5 00 C6 00 1653*  	dw 197, 198, 199
       C7 00       
042982 C5 00 C8 00 1654*  	dw 197, 200, 198
       C6 00       
042988 C7 00 C9 00 1655*  	dw 199, 201, 202
       CA 00       
04298E C7 00 C6 00 1656*  	dw 199, 198, 201
       C9 00       
042994 CA 00 CB 00 1657*  	dw 202, 203, 204
       CC 00       
04299A CA 00 C9 00 1658*  	dw 202, 201, 203
       CB 00       
0429A0 CC 00 CD 00 1659*  	dw 204, 205, 206
       CE 00       
0429A6 CC 00 CB 00 1660*  	dw 204, 203, 205
       CD 00       
0429AC CE 00 C8 00 1661*  	dw 206, 200, 197
       C5 00       
0429B2 CE 00 CD 00 1662*  	dw 206, 205, 200
       C8 00       
0429B8 CB 00 CF 00 1663*  	dw 203, 207, 208
       D0 00       
0429BE CB 00 C9 00 1664*  	dw 203, 201, 207
       CF 00       
0429C4 CD 00 D1 00 1665*  	dw 205, 209, 200
       C8 00       
0429CA CD 00 D0 00 1666*  	dw 205, 208, 209
       D1 00       
0429D0 D2 00 D3 00 1667*  	dw 210, 211, 212
       D4 00       
0429D6 D2 00 D5 00 1668*  	dw 210, 213, 211
       D3 00       
0429DC D5 00 D6 00 1669*  	dw 213, 214, 211
       D3 00       
0429E2 D5 00 D7 00 1670*  	dw 213, 215, 214
       D6 00       
0429E8 D8 00 D9 00 1671*  	dw 216, 217, 218
       DA 00       
0429EE D8 00 DB 00 1672*  	dw 216, 219, 217
       D9 00       
0429F4 DC 00 DD 00 1673*  	dw 220, 221, 222
       DE 00       
0429FA DC 00 DF 00 1674*  	dw 220, 223, 221
       DD 00       
042A00 E0 00 E1 00 1675*  	dw 224, 225, 226
       E2 00       
042A06 E0 00 E3 00 1676*  	dw 224, 227, 225
       E1 00       
042A0C D1 00 D0 00 1677*  	dw 209, 208, 207
       CF 00       
042A12 C3 00 C2 00 1678*  	dw 195, 194, 228
       E4 00       
042A18 D1 00 C6 00 1679*  	dw 209, 198, 200
       C8 00       
042A1E CF 00 C9 00 1680*  	dw 207, 201, 198
       C6 00       
042A24 CF 00 C6 00 1681*  	dw 207, 198, 209
       D1 00       
042A2A D0 00 CD 00 1682*  	dw 208, 205, 203
       CB 00       
042A30 E5 00 E6 00 1683*  	dw 229, 230, 231
       E7 00       
042A36 E5 00 E8 00 1684*  	dw 229, 232, 230
       E6 00       
042A3C E9 00 E5 00 1685*  	dw 233, 229, 231
       E7 00       
042A42 E9 00 EA 00 1686*  	dw 233, 234, 229
       E5 00       
042A48 EB 00 EA 00 1687*  	dw 235, 234, 233
       E9 00       
042A4E EB 00 EC 00 1688*  	dw 235, 236, 234
       EA 00       
042A54 ED 00 EB 00 1689*  	dw 237, 235, 238
       EE 00       
042A5A ED 00 EC 00 1690*  	dw 237, 236, 235
       EB 00       
042A60 E8 00 EE 00 1691*  	dw 232, 238, 230
       E6 00       
042A66 E8 00 ED 00 1692*  	dw 232, 237, 238
       EE 00       
042A6C EF 00 F0 00 1693*  	dw 239, 240, 241
       F1 00       
042A72 EF 00 F2 00 1694*  	dw 239, 242, 240
       F0 00       
042A78 F1 00 EC 00 1695*  	dw 241, 236, 239
       EF 00       
042A7E F1 00 EA 00 1696*  	dw 241, 234, 236
       EC 00       
042A84 EF 00 ED 00 1697*  	dw 239, 237, 242
       F2 00       
042A8A EF 00 EC 00 1698*  	dw 239, 236, 237
       ED 00       
042A90 F0 00 ED 00 1699*  	dw 240, 237, 232
       E8 00       
042A96 F0 00 F2 00 1700*  	dw 240, 242, 237
       ED 00       
042A9C F3 00 F4 00 1701*  	dw 243, 244, 245
       F5 00       
042AA2 F3 00 F6 00 1702*  	dw 243, 246, 244
       F4 00       
042AA8 F6 00 F7 00 1703*  	dw 246, 247, 244
       F4 00       
042AAE F6 00 F8 00 1704*  	dw 246, 248, 247
       F7 00       
042AB4 F9 00 FA 00 1705*  	dw 249, 250, 251
       FB 00       
042ABA F9 00 FC 00 1706*  	dw 249, 252, 250
       FA 00       
042AC0 FD 00 FE 00 1707*  	dw 253, 254, 255
       FF 00       
042AC6 FD 00 00 01 1708*  	dw 253, 256, 254
       FE 00       
042ACC 01 01 02 01 1709*  	dw 257, 258, 259
       03 01       
042AD2 F1 00 F0 00 1710*  	dw 241, 240, 260
       04 01       
042AD8 E5 00 04 01 1711*  	dw 229, 260, 240
       F0 00       
042ADE E5 00 F0 00 1712*  	dw 229, 240, 232
       E8 00       
042AE4 F1 00 E5 00 1713*  	dw 241, 229, 234
       EA 00       
042AEA E5 00 F1 00 1714*  	dw 229, 241, 260
       04 01       
042AF0 01 01 05 01 1715*  	dw 257, 261, 262
       06 01       
042AF6 03 01 07 01 1716*  	dw 259, 263, 261
       05 01       
042AFC 03 01 05 01 1717*  	dw 259, 261, 257
       01 01       
042B02 08 01 03 01 1718*  	dw 264, 259, 258
       02 01       
042B08 03 01 08 01 1719*  	dw 259, 264, 263
       07 01       
042B0E 02 01 09 01 1720*  	dw 258, 265, 264
       08 01       
042B14 01 01 06 01 1721*  	dw 257, 262, 265
       09 01       
042B1A 01 01 09 01 1722*  	dw 257, 265, 258
       02 01       
042B20 0A 01 0B 01 1723*  	dw 266, 267, 268
       0C 01       
042B26 0C 01 0D 01 1724*  	dw 268, 269, 266
       0A 01       
042B2C 0E 01 0F 01 1725*  	dw 270, 271, 272
       10 01       
042B32 0E 01 11 01 1726*  	dw 270, 273, 271
       0F 01       
042B38 12 01 13 01 1727*  	dw 274, 275, 276
       14 01       
042B3E 12 01 15 01 1728*  	dw 274, 277, 275
       13 01       
042B44 16 01 17 01 1729*  	dw 278, 279, 280
       18 01       
042B4A 16 01 19 01 1730*  	dw 278, 281, 279
       17 01       
042B50 1A 01 1B 01 1731*  	dw 282, 283, 284
       1C 01       
042B56 1A 01 1D 01 1732*  	dw 282, 285, 283
       1B 01       
042B5C 1E 01 1D 01 1733*  	dw 286, 285, 287
       1F 01       
042B62 1E 01 1B 01 1734*  	dw 286, 283, 285
       1D 01       
042B68 20 01 1C 01 1735*  	dw 288, 284, 289
       21 01       
042B6E 20 01 1A 01 1736*  	dw 288, 282, 284
       1C 01       
042B74 19 01 22 01 1737*  	dw 281, 290, 279
       17 01       
042B7A 19 01 23 01 1738*  	dw 281, 291, 290
       22 01       
042B80 10 01 14 01 1739*  	dw 272, 276, 270
       0E 01       
042B86 10 01 12 01 1740*  	dw 272, 274, 276
       14 01       
042B8C 24 01 25 01 1741*  	dw 292, 293, 294
       26 01       
042B92 24 01 27 01 1742*  	dw 292, 295, 293
       25 01       
042B98 28 01 29 01 1743*  	dw 296, 297, 298
       2A 01       
042B9E 28 01 2B 01 1744*  	dw 296, 299, 297
       29 01       
042BA4 1C 01 11 01 1745*  	dw 284, 273, 289
       21 01       
042BAA 11 01 1C 01 1746*  	dw 273, 284, 283
       1B 01       
042BB0 20 01 1D 01 1747*  	dw 288, 285, 282
       1A 01       
042BB6 1D 01 20 01 1748*  	dw 285, 288, 275
       13 01       
042BBC 0F 01 11 01 1749*  	dw 271, 273, 286
       1E 01       
042BC2 1E 01 11 01 1750*  	dw 286, 273, 283
       1B 01       
042BC8 1F 01 13 01 1751*  	dw 287, 275, 277
       15 01       
042BCE 13 01 1F 01 1752*  	dw 275, 287, 285
       1D 01       
042BD4 2C 01 2D 01 1753*  	dw 300, 301, 302
       2E 01       
042BDA 2C 01 2F 01 1754*  	dw 300, 303, 301
       2D 01       
042BE0 30 01 31 01 1755*  	dw 304, 305, 306
       32 01       
042BE6 30 01 33 01 1756*  	dw 304, 307, 305
       31 01       
042BEC 34 01 35 01 1757*  	dw 308, 309, 310
       36 01       
042BF2 34 01 37 01 1758*  	dw 308, 311, 309
       35 01       
042BF8 37 01 38 01 1759*  	dw 311, 312, 309
       35 01       
042BFE 37 01 39 01 1760*  	dw 311, 313, 312
       38 01       
042C04 39 01 3A 01 1761*  	dw 313, 314, 312
       38 01       
042C0A 39 01 3B 01 1762*  	dw 313, 315, 314
       3A 01       
042C10 3C 01 3D 01 1763*  	dw 316, 317, 318
       3E 01       
042C16 3C 01 3F 01 1764*  	dw 316, 319, 317
       3D 01       
042C1C 3D 01 40 01 1765*  	dw 317, 320, 321
       41 01       
042C22 3D 01 3F 01 1766*  	dw 317, 319, 320
       40 01       
042C28 3F 01 42 01 1767*  	dw 319, 322, 320
       40 01       
042C2E 3F 01 3C 01 1768*  	dw 319, 316, 322
       42 01       
042C34 3C 01 43 01 1769*  	dw 316, 323, 322
       42 01       
042C3A 3C 01 3E 01 1770*  	dw 316, 318, 323
       43 01       
042C40 42 01 41 01 1771*  	dw 322, 321, 320
       40 01       
042C46 42 01 43 01 1772*  	dw 322, 323, 321
       41 01       
042C4C 44 01 39 01 1773*  	dw 324, 313, 311
       37 01       
042C52 44 01 45 01 1774*  	dw 324, 325, 313
       39 01       
042C58 35 01 3A 01 1775*  	dw 309, 314, 310
       36 01       
042C5E 35 01 38 01 1776*  	dw 309, 312, 314
       3A 01       
042C64 46 01 47 01 1777*  	dw 326, 327, 328
       48 01       
042C6A 46 01 49 01 1778*  	dw 326, 329, 327
       47 01       
042C70 4A 01 4B 01 1779*  	dw 330, 331, 332
       4C 01       
042C76 4A 01 4D 01 1780*  	dw 330, 333, 331
       4B 01       
042C7C 4E 01 4F 01 1781*  	dw 334, 335, 336
       50 01       
042C82 4E 01 51 01 1782*  	dw 334, 337, 335
       4F 01       
042C88 52 01 53 01 1783*  	dw 338, 339, 340
       54 01       
042C8E 52 01 55 01 1784*  	dw 338, 341, 339
       53 01       
042C94 56 01 57 01 1785*  	dw 342, 343, 344
       58 01       
042C9A 56 01 59 01 1786*  	dw 342, 345, 343
       57 01       
042CA0 5A 01 5B 01 1787*  	dw 346, 347, 348
       5C 01       
042CA6 5A 01 5D 01 1788*  	dw 346, 349, 347
       5B 01       
042CAC 5E 01 3B 01 1789*  	dw 350, 315, 313
       39 01       
042CB2 5E 01 39 01 1790*  	dw 350, 313, 325
       45 01       
042CB8 34 01 5F 01 1791*  	dw 308, 351, 324
       44 01       
042CBE 34 01 44 01 1792*  	dw 308, 324, 311
       37 01       
042CC4 60 01 61 01 1793*  	dw 352, 353, 354
       62 01       
042CCA 62 01 63 01 1794*  	dw 354, 355, 352
       60 01       
042CD0 64 01 65 01 1795*  	dw 356, 357, 358
       66 01       
042CD6 66 01 67 01 1796*  	dw 358, 359, 356
       64 01       
042CDC 68 01 69 01 1797*  	dw 360, 361, 362
       6A 01       
042CE2 6B 01 6C 01 1798*  	dw 363, 364, 365
       6D 01       
042CE8 6E 01 6F 01 1799*  	dw 366, 367, 368
       70 01       
042CEE 70 01 71 01 1800*  	dw 368, 369, 366
       6E 01       
042CF4 72 01 73 01 1801*  	dw 370, 371, 372
       74 01       
042CFA 74 01 75 01 1802*  	dw 372, 373, 370
       72 01       
042D00 76 01 77 01 1803*  	dw 374, 375, 376
       78 01       
042D06 76 01 79 01 1804*  	dw 374, 377, 375
       77 01       
042D0C 78 01 7A 01 1805*  	dw 376, 378, 379
       7B 01       
042D12 78 01 77 01 1806*  	dw 376, 375, 378
       7A 01       
042D18 7B 01 7C 01 1807*  	dw 379, 380, 381
       7D 01       
042D1E 7B 01 7A 01 1808*  	dw 379, 378, 380
       7C 01       
042D24 7D 01 7E 01 1809*  	dw 381, 382, 383
       7F 01       
042D2A 7D 01 7C 01 1810*  	dw 381, 380, 382
       7E 01       
042D30 7F 01 79 01 1811*  	dw 383, 377, 374
       76 01       
042D36 7F 01 7E 01 1812*  	dw 383, 382, 377
       79 01       
042D3C 80 01 81 01 1813*  	dw 384, 385, 386
       82 01       
042D42 83 01 84 01 1814*  	dw 387, 388, 389
       85 01       
042D48 78 01 80 01 1815*  	dw 376, 384, 386
       82 01       
042D4E 78 01 82 01 1816*  	dw 376, 386, 374
       76 01       
042D54 80 01 78 01 1817*  	dw 384, 376, 379
       7B 01       
042D5A 7D 01 81 01 1818*  	dw 381, 385, 384
       80 01       
042D60 7D 01 80 01 1819*  	dw 381, 384, 379
       7B 01       
042D66 7F 01 81 01 1820*  	dw 383, 385, 381
       7D 01       
042D6C 82 01 7F 01 1821*  	dw 386, 383, 374
       76 01       
042D72 7F 01 82 01 1822*  	dw 383, 386, 385
       81 01       
042D78 83 01 77 01 1823*  	dw 387, 375, 377
       79 01       
042D7E 85 01 7A 01 1824*  	dw 389, 378, 375
       77 01       
042D84 85 01 77 01 1825*  	dw 389, 375, 387
       83 01       
042D8A 7C 01 85 01 1826*  	dw 380, 389, 388
       84 01       
042D90 85 01 7C 01 1827*  	dw 389, 380, 378
       7A 01       
042D96 84 01 7E 01 1828*  	dw 388, 382, 380
       7C 01       
042D9C 83 01 79 01 1829*  	dw 387, 377, 382
       7E 01       
042DA2 83 01 7E 01 1830*  	dw 387, 382, 388
       84 01       
042DA8 86 01 87 01 1831*  	dw 390, 391, 392
       88 01       
042DAE 86 01 89 01 1832*  	dw 390, 393, 391
       87 01       
042DB4 89 01 8A 01 1833*  	dw 393, 394, 395
       8B 01       
042DBA 89 01 8C 01 1834*  	dw 393, 396, 394
       8A 01       
042DC0 8B 01 8D 01 1835*  	dw 395, 397, 391
       87 01       
042DC6 8B 01 8A 01 1836*  	dw 395, 394, 397
       8D 01       
042DCC 87 01 8E 01 1837*  	dw 391, 398, 392
       88 01       
042DD2 87 01 8D 01 1838*  	dw 391, 397, 398
       8E 01       
042DD8 88 01 8F 01 1839*  	dw 392, 399, 390
       86 01       
042DDE 88 01 8E 01 1840*  	dw 392, 398, 399
       8F 01       
042DE4 86 01 8C 01 1841*  	dw 390, 396, 393
       89 01       
042DEA 86 01 8F 01 1842*  	dw 390, 399, 396
       8C 01       
042DF0 90 01 91 01 1843*  	dw 400, 401, 402
       92 01       
042DF6 8B 01 87 01 1844*  	dw 395, 391, 393
       89 01       
042DFC 90 01 8A 01 1845*  	dw 400, 394, 396
       8C 01       
042E02 92 01 8D 01 1846*  	dw 402, 397, 394
       8A 01       
042E08 92 01 8A 01 1847*  	dw 402, 394, 400
       90 01       
042E0E 8E 01 92 01 1848*  	dw 398, 402, 401
       91 01       
042E14 92 01 8E 01 1849*  	dw 402, 398, 397
       8D 01       
042E1A 91 01 8F 01 1850*  	dw 401, 399, 398
       8E 01       
042E20 90 01 8C 01 1851*  	dw 400, 396, 399
       8F 01       
042E26 90 01 8F 01 1852*  	dw 400, 399, 401
       91 01       
042E2C 93 01 94 01 1853*  	dw 403, 404, 405
       95 01       
042E32 93 01 96 01 1854*  	dw 403, 406, 404
       94 01       
042E38 97 01 98 01 1855*  	dw 407, 408, 409
       99 01       
042E3E 97 01 9A 01 1856*  	dw 407, 410, 408
       98 01       
042E44 9B 01 9C 01 1857*  	dw 411, 412, 413
       9D 01       
042E4A 9B 01 9E 01 1858*  	dw 411, 414, 412
       9C 01       
042E50 9F 01 A0 01 1859*  	dw 415, 416, 417
       A1 01       
042E56 9F 01 A2 01 1860*  	dw 415, 418, 416
       A0 01       
042E5C A3 01 A4 01 1861*  	dw 419, 420, 421
       A5 01       
042E62 A3 01 A6 01 1862*  	dw 419, 422, 420
       A4 01       
042E68 A7 01 A8 01 1863*  	dw 423, 424, 425
       A9 01       
042E6E A7 01 AA 01 1864*  	dw 423, 426, 424
       A8 01       
042E74 AB 01 AC 01 1865*  	dw 427, 428, 429
       AD 01       
042E7A AB 01 AE 01 1866*  	dw 427, 430, 428
       AC 01       
042E80 AF 01 AD 01 1867*  	dw 431, 429, 432
       B0 01       
042E86 AF 01 AB 01 1868*  	dw 431, 427, 429
       AD 01       
042E8C B1 01 B0 01 1869*  	dw 433, 432, 434
       B2 01       
042E92 B1 01 AF 01 1870*  	dw 433, 431, 432
       B0 01       
042E98 B3 01 B2 01 1871*  	dw 435, 434, 436
       B4 01       
042E9E B3 01 B1 01 1872*  	dw 435, 433, 434
       B2 01       
042EA4 AE 01 B4 01 1873*  	dw 430, 436, 428
       AC 01       
042EAA AE 01 B3 01 1874*  	dw 430, 435, 436
       B4 01       
042EB0 B5 01 B6 01 1875*  	dw 437, 438, 439
       B7 01       
042EB6 B8 01 B9 01 1876*  	dw 440, 441, 442
       BA 01       
042EBC B6 01 AD 01 1877*  	dw 438, 429, 439
       B7 01       
042EC2 B7 01 AD 01 1878*  	dw 439, 429, 428
       AC 01       
042EC8 AD 01 B6 01 1879*  	dw 429, 438, 432
       B0 01       
042ECE B5 01 B2 01 1880*  	dw 437, 434, 438
       B6 01       
042ED4 B6 01 B2 01 1881*  	dw 438, 434, 432
       B0 01       
042EDA B5 01 B4 01 1882*  	dw 437, 436, 434
       B2 01       
042EE0 B4 01 B7 01 1883*  	dw 436, 439, 428
       AC 01       
042EE6 B7 01 B4 01 1884*  	dw 439, 436, 437
       B5 01       
042EEC AB 01 B9 01 1885*  	dw 427, 441, 430
       AE 01       
042EF2 AF 01 BA 01 1886*  	dw 431, 442, 427
       AB 01       
042EF8 AB 01 BA 01 1887*  	dw 427, 442, 441
       B9 01       
042EFE BA 01 B1 01 1888*  	dw 442, 433, 440
       B8 01       
042F04 B1 01 BA 01 1889*  	dw 433, 442, 431
       AF 01       
042F0A B3 01 B8 01 1890*  	dw 435, 440, 433
       B1 01       
042F10 AE 01 B9 01 1891*  	dw 430, 441, 435
       B3 01       
042F16 B3 01 B9 01 1892*  	dw 435, 441, 440
       B8 01       
042F1C BB 01 BC 01 1893*  	dw 443, 444, 445
       BD 01       
042F22 BB 01 BE 01 1894*  	dw 443, 446, 444
       BC 01       
042F28 BF 01 BE 01 1895*  	dw 447, 446, 448
       C0 01       
042F2E BF 01 C1 01 1896*  	dw 447, 449, 446
       BE 01       
042F34 C2 01 C0 01 1897*  	dw 450, 448, 443
       BB 01       
042F3A C2 01 BF 01 1898*  	dw 450, 447, 448
       C0 01       
042F40 C3 01 BB 01 1899*  	dw 451, 443, 445
       BD 01       
042F46 C3 01 C2 01 1900*  	dw 451, 450, 443
       BB 01       
042F4C C4 01 BD 01 1901*  	dw 452, 445, 444
       BC 01       
042F52 C4 01 C3 01 1902*  	dw 452, 451, 445
       BD 01       
042F58 C1 01 BC 01 1903*  	dw 449, 444, 446
       BE 01       
042F5E C1 01 C4 01 1904*  	dw 449, 452, 444
       BC 01       
042F64 C5 01 C6 01 1905*  	dw 453, 454, 455
       C7 01       
042F6A BB 01 C0 01 1906*  	dw 443, 448, 446
       BE 01       
042F70 BF 01 C6 01 1907*  	dw 447, 454, 449
       C1 01       
042F76 C2 01 C7 01 1908*  	dw 450, 455, 447
       BF 01       
042F7C BF 01 C7 01 1909*  	dw 447, 455, 454
       C6 01       
042F82 C7 01 C3 01 1910*  	dw 455, 451, 453
       C5 01       
042F88 C3 01 C7 01 1911*  	dw 451, 455, 450
       C2 01       
042F8E C4 01 C5 01 1912*  	dw 452, 453, 451
       C3 01       
042F94 C1 01 C6 01 1913*  	dw 449, 454, 452
       C4 01       
042F9A C4 01 C6 01 1914*  	dw 452, 454, 453
       C5 01       
042FA0 C8 01 C9 01 1915*  	dw 456, 457, 458
       CA 01       
042FA6 C8 01 CB 01 1916*  	dw 456, 459, 457
       C9 01       
042FAC CC 01 CD 01 1917*  	dw 460, 461, 462
       CE 01       
042FB2 CC 01 CF 01 1918*  	dw 460, 463, 461
       CD 01       
042FB8 D0 01 D1 01 1919*  	dw 464, 465, 466
       D2 01       
042FBE D0 01 D3 01 1920*  	dw 464, 467, 465
       D1 01       
042FC4 D4 01 D5 01 1921*  	dw 468, 469, 470
       D6 01       
042FCA D4 01 D7 01 1922*  	dw 468, 471, 469
       D5 01       
042FD0 D8 01 D9 01 1923*  	dw 472, 473, 474
       DA 01       
042FD6 D8 01 DB 01 1924*  	dw 472, 475, 473
       D9 01       
042FDC DC 01 DD 01 1925*  	dw 476, 477, 478
       DE 01       
042FE2 DC 01 DF 01 1926*  	dw 476, 479, 477
       DD 01       
042FE8 E0 01 E1 01 1927*  	dw 480, 481, 482
       E2 01       
042FEE E0 01 E3 01 1928*  	dw 480, 483, 481
       E1 01       
042FF4 E4 01 E5 01 1929*  	dw 484, 485, 486
       E6 01       
042FFA E4 01 E7 01 1930*  	dw 484, 487, 485
       E5 01       
043000 E8 01 E9 01 1931*  	dw 488, 489, 490
       EA 01       
043006 E8 01 EB 01 1932*  	dw 488, 491, 489
       E9 01       
04300C EC 01 ED 01 1933*  	dw 492, 493, 494
       EE 01       
043012 EF 01 F0 01 1934*  	dw 495, 496, 497
       F1 01       
043018 F2 01 F0 01 1935*  	dw 498, 496, 499
       F3 01       
04301E F4 01 F5 01 1936*  	dw 500, 501, 502
       F6 01       
043024 F7 01 F5 01 1937*  	dw 503, 501, 500
       F4 01       
04302A EC 01 EE 01 1938*  	dw 492, 494, 504
       F8 01       
043030 F3 01 F0 01 1939*  	dw 499, 496, 505
       F9 01       
043036 F1 01 F0 01 1940*  	dw 497, 496, 498
       F2 01       
04303C FA 01 FB 01 1941*  	dw 506, 507, 508
       FC 01       
043042 FD 01 FE 01 1942*  	dw 509, 510, 511
       FF 01       
043048 00 02 01 02 1943*  	dw 512, 513, 514
       02 02       
04304E 03 02 04 02 1944*  	dw 515, 516, 517
       05 02       
043054 06 02 07 02 1945*  	dw 518, 519, 520
       08 02       
04305A 08 02 09 02 1946*  	dw 520, 521, 518
       06 02       
043060 0A 02 0B 02 1947*  	dw 522, 523, 524
       0C 02       
043066 0C 02 0D 02 1948*  	dw 524, 525, 522
       0A 02       
04306C 0E 02 0F 02 1949*  	dw 526, 527, 528
       10 02       
043072 11 02 12 02 1950*  	dw 529, 530, 531
       13 02       
043078 14 02 15 02 1951*  	dw 532, 533, 534
       16 02       
04307E 16 02 EB 01 1952*  	dw 534, 491, 532
       14 02       
043084 17 02 18 02 1953*  	dw 535, 536, 537
       19 02       
04308A 1A 02 1B 02 1954*  	dw 538, 539, 540
       1C 02       
043090 1D 02 1E 02 1955*  	dw 541, 542, 543
       1F 02       
043096 1F 02 E8 01 1956*  	dw 543, 488, 541
       1D 02       
04309C 20 02 21 02 1957*  	dw 544, 545, 546
       22 02       
0430A2 23 02 20 02 1958*  	dw 547, 544, 548
       24 02       
0430A8 25 02 26 02 1959*  	dw 549, 550, 534
       16 02       
0430AE 26 02 27 02 1960*  	dw 550, 551, 552
       28 02       
0430B4 29 02 2A 02 1961*  	dw 553, 554, 551
       27 02       
0430BA 2B 02 26 02 1962*  	dw 555, 550, 556
       2C 02       
0430C0 24 02 2D 02 1963*  	dw 548, 557, 547
       23 02       
0430C6 2E 02 2F 02 1964*  	dw 558, 559, 560
       30 02       
0430CC 31 02 2A 02 1965*  	dw 561, 554, 562
       32 02       
0430D2 33 02 34 02 1966*  	dw 563, 564, 565
       35 02       
0430D8 30 02 31 02 1967*  	dw 560, 561, 558
       2E 02       
0430DE 36 02 2E 02 1968*  	dw 566, 558, 562
       32 02       
0430E4 37 02 38 02 1969*  	dw 567, 568, 569
       39 02       
0430EA 3A 02 3B 02 1970*  	dw 570, 571, 541
       1D 02       
0430F0 28 02 3C 02 1971*  	dw 552, 572, 550
       26 02       
0430F6 3D 02 3E 02 1972*  	dw 573, 574, 575
       3F 02       
0430FC 40 02 13 02 1973*  	dw 576, 531, 577
       41 02       
043102 16 02 42 02 1974*  	dw 534, 578, 549
       25 02       
043108 43 02 44 02 1975*  	dw 579, 580, 581
       45 02       
04310E 35 02 46 02 1976*  	dw 565, 582, 563
       33 02       
043114 47 02 48 02 1977*  	dw 583, 584, 585
       49 02       
04311A 4A 02 48 02 1978*  	dw 586, 584, 483
       E3 01       
043120 4B 02 EA 01 1979*  	dw 587, 490, 588
       4C 02       
043126 4D 02 4E 02 1980*  	dw 589, 590, 591
       4F 02       
04312C 50 02 51 02 1981*  	dw 592, 593, 594
       52 02       
043132 52 02 51 02 1982*  	dw 594, 593, 595
       53 02       
043138 54 02 55 02 1983*  	dw 596, 597, 598
       56 02       
04313E 24 02 57 02 1984*  	dw 548, 599, 560
       30 02       
043144 45 02 58 02 1985*  	dw 581, 600, 579
       43 02       
04314A 59 02 5A 02 1986*  	dw 601, 602, 598
       56 02       
043150 5B 02 5C 02 1987*  	dw 603, 604, 605
       5D 02       
043156 5E 02 5F 02 1988*  	dw 606, 607, 608
       60 02       
04315C 61 02 62 02 1989*  	dw 609, 610, 611
       63 02       
043162 5D 02 64 02 1990*  	dw 605, 612, 613
       65 02       
043168 66 02 67 02 1991*  	dw 614, 615, 616
       68 02       
04316E 56 02 55 02 1992*  	dw 598, 597, 601
       59 02       
043174 56 02 69 02 1993*  	dw 598, 617, 596
       54 02       
04317A 2C 02 6A 02 1994*  	dw 556, 618, 555
       2B 02       
043180 68 02 6B 02 1995*  	dw 616, 619, 620
       6C 02       
043186 39 02 6D 02 1996*  	dw 569, 621, 567
       37 02       
04318C 6E 02 62 02 1997*  	dw 622, 610, 609
       61 02       
043192 6F 02 5F 02 1998*  	dw 623, 607, 606
       5E 02       
043198 70 02 71 02 1999*  	dw 624, 625, 582
       46 02       
04319E 72 02 2E 02 2000*  	dw 626, 558, 557
       2D 02       
0431A4 73 02 74 02 2001*  	dw 627, 628, 588
       4C 02       
0431AA 75 02 E9 01 2002*  	dw 629, 489, 630
       76 02       
0431B0 70 02 35 02 2003*  	dw 624, 565, 631
       77 02       
0431B6 78 02 47 02 2004*  	dw 632, 583, 633
       79 02       
0431BC 7A 02 7B 02 2005*  	dw 634, 635, 636
       7C 02       
0431C2 7D 02 7E 02 2006*  	dw 637, 638, 639
       7F 02       
0431C8 5D 02 80 02 2007*  	dw 605, 640, 603
       5B 02       
0431CE 53 02 81 02 2008*  	dw 595, 641, 594
       52 02       
0431D4 1D 02 20 02 2009*  	dw 541, 544, 570
       3A 02       
0431DA E3 01 73 02 2010*  	dw 483, 627, 586
       4A 02       
0431E0 E0 01 12 02 2011*  	dw 480, 530, 642
       82 02       
0431E6 82 02 74 02 2012*  	dw 642, 628, 480
       E0 01       
0431EC 65 02 80 02 2013*  	dw 613, 640, 605
       5D 02       
0431F2 52 02 83 02 2014*  	dw 594, 643, 592
       50 02       
0431F8             2015*  
0431F8 70 69 6E 67 2016*  Lara5_texture: db "pingo/src/blender/Lara.rgba8",0
       6F 2F 73 72 
       63 2F 62 6C 
       65 6E 64 65 
       72 2F 4C 61 
       72 61 2E 72 
       67 62 61 38 
       00          
043215             0435   
043215             0436   ; str_hello_world: db "Welcome to the Pingo 3D Demo!\r\n",0
043215             0437   ; str_create_object: db "Creating 3D object.\r\n",0
043215             0438   ; str_scale_object: db "Scaling object.\r\n",0
043215             0439   ; str_create_target_bitmap: db "Creating target bitmap.\r\n",0
043215             0440   ; str_set_texture_pixel: db "Setting texture pixel.\r\n",0
043215             0441   ; str_create_texture_bitmap: db "Creating texture bitmap.\r\n",0
043215             0442   ; str_zeroes: db "Sending some magic zeroes.\r\n",0
043215             0443   ; str_set_tex_coord_idxs: db "Setting texture coordinate indices.\r\n",0
043215             0444   ; str_set_texture_coordinates: db "Sending texture coordinates.\r\n",0
043215             0445   ; str_set_mesh_vertex_indices: db "Sending vertex indices.\r\n",0
043215             0446   ; str_send_vertices: db "Sending vertices.\r\n",0
043215             0447   ; str_set_camera_x_rotation: db "Setting camera X rotation.\r\n",0
043215             0448   ; str_set_camera_distance: db "Setting camera distance.\r\n",0
043215             0449   ; str_create_control: db "Creating control structure.\r\n",0
043215             0450   ; str_init_cmplt: db "Initialization complete.\r\n",0
043215             0451   ; str_render_to_bitmap: db "Rendering to bitmap.\r\n",0
043215             0452   ; str_display_output_bitmap: db "Displaying output bitmap.\r\n",0
043215             0453   ; str_program_end: db "Program end.\r\n",0
043215             0454   
043215             0455   
043215             0456   ; Print a zero-terminated string
043215             0457   ; HL: Pointer to string
043215             0458   printString:
043215 C5          0459   	PUSH	BC
043216 01 00 00 00 0460   	LD		BC,0
04321A 3E 00       0461   	LD 	 	A,0
04321C 5B DF       0462   	RST.LIL 18h
04321E C1          0463   	POP		BC
04321F C9          0464   	RET
043220             0465   
043220             0466   
043220             0467   ; Prints the right justified decimal value in HL without leading zeroes
043220             0468   ; HL : Value to print
043220             0469   printDec:
043220 11 4C 32 04 0470   	LD	 DE, _printDecBuffer
043224 CD 55 32 04 0471   	CALL Num2String
043228             0472   ; BEGIN MY CODE
043228             0473   ; replace leading zeroes with spaces
043228 21 4C 32 04 0474       LD	 HL, _printDecBuffer
04322C 06 07       0475       ld   B, 7 ; if HL was 0, we want to keep the final zero
04322E             0476   @loop:
04322E 7E          0477       LD	 A, (HL)
04322F FE 30       0478       CP	 '0'
043231 C2 3F 32 04 0479       JP	 NZ, @done
043235 3E 20       0480       LD   A, ' '
043237 77          0481       LD	 (HL), A
043238 23          0482       INC	 HL
043239 CD DA 02 04 0483       CALL vdu_cursor_forward
04323D 10 EF       0484       DJNZ @loop
04323F             0485   @done:
04323F             0486   ; END MY CODE
04323F             0487   	; LD	 HL, _printDecBuffer
04323F CD 15 32 04 0488   	CALL printString
043243             0489   ; Print Newline sequence to VDP
043243 3E 0D       0490   	LD	A, '\r'
043245 5B D7       0491   	RST.LIL 10h
043247 3E 0A       0492   	LD	A, '\n'
043249 5B D7       0493   	RST.LIL 10h
04324B C9          0494   	RET
04324C 00 00 00 00 0495   _printDecBuffer: blkb 9,0 ; nine bytes full of zeroes
       00 00 00 00 
       00          
043255             0496   
043255             0497   ; This routine converts the value from HL into it's ASCII representation,
043255             0498   ; starting to memory location pointing by DE, in decimal form and with leading zeroes
043255             0499   ; so it will allways be 8 characters length
043255             0500   ; HL : Value to convert to string
043255             0501   ; DE : pointer to buffer, at least 8 byte + 0
043255             0502   Num2String:
043255 01 80 69 67 0503   	LD	 BC,-10000000
043259 CD 8C 32 04 0504   	CALL OneDigit
04325D 01 C0 BD F0 0505   	LD	 BC,-1000000
043261 CD 8C 32 04 0506   	CALL OneDigit
043265 01 60 79 FE 0507   	LD	 BC,-100000
043269 CD 8C 32 04 0508   	CALL OneDigit
04326D 01 F0 D8 FF 0509   	LD   BC,-10000
043271 CD 8C 32 04 0510   	CALL OneDigit
043275 01 18 FC FF 0511   	LD   BC,-1000
043279 CD 8C 32 04 0512   	CALL OneDigit
04327D 01 9C FF FF 0513   	LD   BC,-100
043281 CD 8C 32 04 0514   	CALL OneDigit
043285 0E F6       0515   	LD   C,-10
043287 CD 8C 32 04 0516   	CALL OneDigit
04328B 48          0517   	LD   C,B
04328C             0518   OneDigit:
04328C 3E 2F       0519   	LD   A,'0'-1
04328E             0520   DivideMe:
04328E 3C          0521   	INC  A
04328F 09          0522   	ADD  HL,BC
043290 38 FC       0523   	JR   C,DivideMe
043292 ED 42       0524   	SBC  HL,BC
043294 12          0525   	LD   (DE),A
043295 13          0526   	INC  DE
043296 C9          0527   	RET
043297             0528   
043297             0529   
043297             0530   ;  10 blockSize% = 1000
043297             0531   ;  20 infile% = OPENIN "sound.bin"
043297             0532   ;  30 length% = EXT#infile%
043297             0533   ;  40 PRINT "Sound sample length: "; length%; "bytes"
043297             0534   ;  50 remaining% = length%
043297             0535   ;  60 REM Load sample data into buffer 42
043297             0536   ;  70 VDU 23, 0, &A0, 42; 2       : REM Clear out buffer 42
043297             0537   ;  80 PRINT "Loading sample";
043297             0538   ;  90 REPEAT
043297             0539   ; 100   IF remaining% < blockSize% THEN blockSize% = remaining%
043297             0540   ; 110   remaining% = remaining% - blockSize%
043297             0541   ; 120   PRINT ".";       : REM Show progress
043297             0542   ; 130   VDU 23, 0, &A0, 42; 0, blockSize%; : REM Send next blockSize% bytes to buffer 42
043297             0543   ; 140   FOR i% = 1 TO blockSize%
043297             0544   ; 150     VDU BGET#infile%
043297             0545   ; 160   NEXT
043297             0546   ; 170 UNTIL remaining% = 0
043297             0547   ; 180 CLOSE #infile%
043297             0548   
043297             0549   
043297             0550   ; ld_12_019:
043297             0551   ; 	ld hl,F12_019 ; pointer to filename
043297             0552   ; 	ld (cur_filename),hl
043297             0553   ; 	ld de,filedata
043297             0554   ; 	ld bc,65536
043297             0555   ; 	ld a,mos_load
043297             0556   ; 	RST.LIL 08h
043297             0557   ; 	ld hl,BUF_12_019 ; bufferId to load
043297             0558   ; 	ld bc,35 ; width
043297             0559   ; 	ld de,45 ; height
043297             0560   ; 	ld ix,1575 ; file size (bytes)
043297             0561   ; 	call vdu_load_img
043297             0562   ; 	ret
043297             0563   
043297             0564   
043297             0565   ; load an uncompressed rgba2222 image file to a buffer
043297             0566   ; inputs: bc,de image width,height ; hl = bufferId ; ix = file size ; iy = pointer to filename
043297             0567   vdu_load_img:
043297             0568   ; back up image dimension parameters
043297 C5          0569   	push bc
043298 D5          0570   	push de
043299             0571   ; load the image
043299 CD A5 32 04 0572   	call vdu_load_buffer_from_file
04329D             0573   ; now make it a bitmap
04329D D1          0574   	pop de
04329E C1          0575   	pop bc
04329F 3E 01       0576   	ld a,1 ; the magic number for rgba2222
0432A1 C3 67 04 04 0577   	jp vdu_bmp_create ; will return to caller from there
0432A5             0578   
0432A5             0579   
0432A5             0580   ; inputs: hl = bufferId, ix = file size ; iy = pointer to filename
0432A5             0581   vdu_load_buffer_from_file:
0432A5             0582   ; load buffer ids
0432A5 22 DF 32 04 0583       ld (@id0),hl
0432A9 22 23 33 04 0584       ld (@id1),hl
0432AD             0585   ; clean up bytes that got stomped on by the ID loads
0432AD 3E 02       0586       ld a,2
0432AF 32 E1 32 04 0587       ld (@id0+2),a
0432B3 AF          0588       xor a
0432B4 32 25 33 04 0589       ld (@id1+2),a
0432B8             0590   ; load filesize from ix
0432B8 DD 22 32 33 0591       ld (@filesize),ix
       04          
0432BD DD 07 00    0592       ld bc,(ix) ; for the mos_load call
0432C0 DD 37 01    0593       ld ix,(ix+1) ; now ix is filesize / 256 and will be our main loop counter
0432C3             0594   ; load the file from disk into ram
0432C3 FD E5       0595       push iy
0432C5 E1          0596   	pop hl ; pointer to filename
0432C6 11 35 33 04 0597   	ld de,filedata
0432CA 3E 01       0598   	ld a,mos_load
0432CC 5B CF       0599   	RST.LIL 08h
0432CE             0600   ; clear target buffer
0432CE 21 DC 32 04 0601       ld hl,@clear0
0432D2 01 06 00 00 0602       ld bc,@clear1-@clear0
0432D6 5B DF       0603       rst.lil $18
0432D8 C3 E2 32 04 0604       jp @clear1
0432DC 17 00 A0    0605   @clear0: db 23,0,0xA0
0432DF 00 00       0606   @id0:	dw 0x0000 ; bufferId
0432E1 02          0607   		db 2 ; clear buffer
0432E2             0608   @clear1:
0432E2             0609   
0432E2             0610   ; load default chunk size
0432E2 01 00 01 00 0611       ld bc,256
0432E6 ED 43 26 33 0612       ld (@chunksize),bc
       04          
0432EB             0613   ; point hl at the start of the file data
0432EB 21 35 33 04 0614       ld hl,filedata
0432EF             0615   
0432EF             0616   @loop:
0432EF DD 2B       0617       dec ix
0432F1 FA 02 33 04 0618       jp m,@lastchunk
0432F5 CA 02 33 04 0619       jp z,@lastchunk
0432F9 E5          0620       push hl ; store pointer to file data
0432FA CD 12 33 04 0621       call @loadchunk ; load the next chunk
0432FE C3 EF 32 04 0622       jp @loop ; loop back to load the next chunk
043302             0623   
043302             0624   @lastchunk:
043302 01 00 00 00 0625       ld bc,0 ; make sure bcu is zero
043306 DD 7E 00    0626       ld a,(ix) ; get the remaining bytes
043309 A7          0627       and a
04330A C8          0628       ret z ; no more to load so we're done
04330B 4F          0629       ld c,a ; bc is number of final bytes to load
04330C ED 43 26 33 0630       ld (@chunksize),bc
       04          
043311 E5          0631       push hl ; store pointer to file data
043312             0632       ; fall through to loadchunk
043312             0633   
043312             0634   @loadchunk:
043312 21 20 33 04 0635       ld hl,@chunk0
043316 01 08 00 00 0636       ld bc,@chunk1-@chunk0
04331A 5B DF       0637       rst.lil $18
04331C C3 28 33 04 0638       jp @chunk1
043320             0639   @chunk0:
043320             0640   ; Upload data :: VDU 23, 0 &A0, bufferId; 0, length; <buffer-data>
043320 17 00 A0    0641   		db 23,0,0xA0
043323 00 00       0642   @id1:	dw 0x0000 ; bufferId
043325 00          0643   		db 0 ; load buffer
043326 00 00       0644   @chunksize:	dw 0x0000 ; length of data in bytes
043328             0645   @chunk1:
043328 E1          0646       pop hl ; get the file data pointer
043329 ED 4B 26 33 0647       ld bc,(@chunksize)
       04          
04332E 5B DF       0648       rst.lil $18
043330 09          0649       add hl,bc ; advance the file data pointer
043331 C9          0650       ret
043332             0651   
043332 00 00 00    0652   @filesize: dl 0 ; file size in bytes
043335             0653   
043335             0654   filedata: ; no need to allocate space here if this is the final address label
